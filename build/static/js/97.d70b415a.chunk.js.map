{"version":3,"sources":["views/setup/Login.js"],"names":["Login","useState","username","password","formData","setFormData","history","useHistory","schemaMap","Joi","string","required","label","schema","object","validateForm","result","validate","error","details","message","handleSubmit","a","console","log","Swal","fire","auth","login","push","response","status","data","className","md","name","type","placeholder","autoComplete","value","email","onChange","e","currentTarget","xs","color","onClick","style","width","to","active","tabIndex"],"mappings":"sUAqKeA,UA9ID,WAAO,IAAD,EACcC,mBAAS,CACvCC,SAAU,GACVC,SAAU,KAHM,mBACXC,EADW,KACDC,EADC,KAKdC,EAAUC,cAERC,EAAY,CAChBN,SAAUO,IAAIC,SAASC,WAAWC,MAAM,kBACxCT,SAAUM,IAAIC,SAASC,WAAWC,MAAM,mBAGpCC,EAASJ,IAAIK,OAAON,GAEpBO,EAAe,WACnB,IAAMC,EAASP,IAAIQ,SAASb,EAAUS,GACtC,OAAIG,EAAOE,MACFF,EAAOE,MAAMC,QAAQ,GAAGC,QAExB,MAKLC,EAAY,uCAAG,gCAAAC,EAAA,yDACnBC,QAAQC,IAAIpB,GACZmB,QAAQC,IAAI,4BAFO,SAITtB,EAAuBE,EAAvBF,SAAUC,EAAaC,EAAbD,SAED,QADXc,EAAWF,KALA,yCAORU,IAAKC,KAAK,aAAcT,EAAU,UAP1B,uBASXU,IAAKC,MAAM1B,EAAUC,GATV,OAUjBG,EAAQuB,KAAK,SAVI,sDAYb,KAAGC,UAAmC,MAAvB,KAAGA,SAASC,OAZd,0CAaRN,IAAKC,KAAK,UAAW,KAAGI,SAASE,KAAM,UAb/B,0DAAH,qDAkBlB,OACE,yBAAKC,UAAU,sDACb,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAMA,UAAU,0BACd,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,UAAU,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,qCACA,uBAAGA,UAAU,cAAb,kCACA,kBAAC,IAAD,CAAaA,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,eAGhB,kBAAC,IAAD,CACEC,KAAK,OACLC,YAAY,WACZC,aAAa,WACbC,MAAOnC,EAASoC,MAChBC,SAAU,SAACC,GAAD,OACRrC,EAAY,2BACPD,GADM,IAETF,SAAUwC,EAAEC,cAAcJ,aAKlC,kBAAC,IAAD,CAAaN,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,sBAGhB,kBAAC,IAAD,CACEC,KAAK,WACLC,YAAY,WACZC,aAAa,mBACbC,MAAOnC,EAASD,SAChBsC,SAAU,SAACC,GAAD,OACRrC,EAAY,2BACPD,GADM,IAETD,SAAUuC,EAAEC,cAAcJ,aAKlC,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMK,GAAG,KACP,kBAAC,IAAD,CACEC,MAAM,UACNZ,UAAU,OACVa,QAASzB,GAHX,UAQF,kBAAC,IAAD,CAAMuB,GAAG,IAAIX,UAAU,cACrB,kBAAC,IAAD,CAASY,MAAM,OAAOZ,UAAU,QAAhC,yBAQV,kBAAC,IAAD,CACEA,UAAU,4CACVc,MAAO,CAAEC,MAAO,QAEhB,kBAAC,IAAD,CAAWf,UAAU,eACnB,6BACE,uCACA,wGAIA,kBAAC,IAAD,CAAMgB,GAAG,aACP,kBAAC,IAAD,CACEJ,MAAM,UACNZ,UAAU,OACViB,QAAM,EACNC,UAAW,GAJb","file":"static/js/97.d70b415a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport { useHistory } from 'react-router-dom'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  })\n  let history = useHistory()\n\n  const schemaMap = {\n    username: Joi.string().required().label('Username Field'),\n    password: Joi.string().required().label('Password Field'),\n  }\n\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(formData, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n    //toast.error(result.error.details[0].message);\n  }\n\n  const handleSubmit = async () => {\n    console.log(formData)\n    console.log('this is the one at setup')\n    try {\n      const { username, password } = formData\n      const validate = validateForm()\n      if (validate !== null) {\n        return Swal.fire('Validation', validate, 'error')\n      }\n      await auth.login(username, password)\n      history.push('/home')\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        return Swal.fire('Fatal :', ex.response.data, 'error')\n      }\n    }\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account- Adabo</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        value={formData.email}\n                        onChange={(e) =>\n                          setFormData({\n                            ...formData,\n                            username: e.currentTarget.value,\n                          })\n                        }\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        value={formData.password}\n                        onChange={(e) =>\n                          setFormData({\n                            ...formData,\n                            password: e.currentTarget.value,\n                          })\n                        }\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton\n                          color=\"primary\"\n                          className=\"px-4\"\n                          onClick={handleSubmit}\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard\n                className=\"text-white bg-primary py-5 d-md-down-none\"\n                style={{ width: '44%' }}\n              >\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      If You Encounter Any Challengies, Kindly Contact The\n                      System Administrator\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton\n                        color=\"primary\"\n                        className=\"mt-3\"\n                        active\n                        tabIndex={-1}\n                      >\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}