{"version":3,"sources":["views/pages/staff.js"],"names":["Staff","useState","nameOfStaff","phone","dob","dateEmployed","qualification","guarantorOne","guarantorOnePhone","guarantorTwo","guarantorTwoPhone","staff","setStaff","staffData","setStaffData","search","setSearch","show","setShow","editMode","setEditMode","render","setRender","useEffect","a","axios","get","apiUrl","results","data","getStaff","console","log","handleSubmit","post","status","Swal","fire","message","sStaff","filter","item","toLowerCase","includes","handleUpdate","e","put","handleDelete","delete","id","dataTouse","length","className","type","onClick","placeholder","onChange","event","target","value","map","s","index","key","Style","p","Date","toISOString","slice","moment","format","onClose","color","size","closeButton","htmlFor","currentTarget"],"mappings":"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","file":"static/js/85.67c21485.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { apiUrl } from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nconst Staff = () => {\n  const [staff, setStaff] = useState({\n    nameOfStaff: '',\n    phone: '',\n    dob: '',\n    dateEmployed: '',\n    qualification: '',\n    guarantorOne: '',\n    guarantorOnePhone: '',\n    guarantorTwo: '',\n    guarantorTwoPhone: '',\n  })\n  const [staffData, setStaffData] = useState([])\n  const [search, setSearch] = useState('')\n  const [show, setShow] = useState(false)\n  const [editMode, setEditMode] = useState(false)\n  const [render, setRender] = useState(false)\n\n  useEffect(() => {\n    async function getStaff() {\n      const results = await axios.get(apiUrl + '/setup/staff')\n      setStaffData(results.data)\n      //console.log(customers);\n    }\n    getStaff()\n    console.log(staffData)\n  }, [staffData])\n\n  const handleSubmit = async () => {\n    try {\n      const results = await axios.post(apiUrl + '/setup/staff', staff)\n\n      if (results.status !== 200) {\n        return Swal.fire(\n          'Failed',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire('Success', 'Staff Saved Successfully', 'success')\n        setStaff({\n          nameOfStaff: '',\n          phone: '',\n          dob: '',\n          dateEmployed: '',\n          qualification: '',\n          guarantorOne: '',\n          guarantorOnePhone: '',\n          guarantorTwo: '',\n          guarantorTwoPhone: '',\n        })\n      }\n    } catch (err) {\n      Swal.fire('Error', 'OOPS ! ' + err.message, 'error')\n    }\n  }\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const data = {\n    sStaff: staffData.filter((item) =>\n      item.nameOfStaff.toLowerCase().includes(search.toLowerCase()),\n    ),\n  }\n\n  const staffView = (s) => {\n    console.log(s)\n  }\n\n  const handleOnEdit = (p) => {\n    setEditMode(true)\n    setStaff({\n      nameOfStaff: p.nameOfStaff,\n      phone: p.phone,\n      dob: new Date(p.dob).toISOString().slice(0, 10),\n      dateEmployed: new Date(p.dateEmployed).toISOString().slice(0, 10),\n      qualification: p.qualification,\n      guarantorOne: p.guarantorOne,\n      guarantorOnePhone: p.guarantorOnePhone,\n      guarantorTwo: p.guarantorTwo,\n      guarantorTwoPhone: p.guarantorTwoPhone,\n      id: p.id,\n    })\n    setShow(!show)\n    //setDisabled(!disabled);\n  }\n\n  const handleUpdate = async (e) => {\n    console.log(staff)\n    if (staff.nameOfStaff !== '') {\n      try {\n        const results = await axios.put(apiUrl + '/setup/staff', staff)\n        if (results.status !== 200) {\n          return Swal.fire(\n            'OOPS !',\n            'Submission Failed ! Check Entries and try again !',\n            'error',\n          )\n        } else {\n          Swal.fire('Success', 'Staff Updated Successfully', 'success')\n          setStaff({\n            nameOfStaff: '',\n            phone: '',\n            dob: '',\n            dateEmployed: '',\n            qualification: '',\n            guarantorOne: '',\n            guarantorOnePhone: '',\n            guarantorTwo: '',\n            guarantorTwoPhone: '',\n          })\n          setEditMode(false)\n          setRender(!render)\n        }\n      } catch (err) {\n        Swal.fire('OOPS ! ' + err.message, 'error')\n      }\n    } else {\n      return Swal.fire('OOPS', 'Enter all Details !', 'error')\n    }\n  }\n\n  const handleDelete = async () => {\n    if (staff.nameOfStaff !== '') {\n      try {\n        const results = await axios.delete(apiUrl + '/setup/staff/' + staff.id)\n        if (results.status !== 200) {\n          return Swal.fire(\n            'OOPS !',\n            'Submission Failed ! Check Entries and try again !',\n            'error',\n          )\n        } else {\n          Swal.fire('Success', 'Staff Deleted Successfully', 'success')\n          setStaff({\n            nameOfStaff: '',\n            phone: '',\n            dob: '',\n            dateEmployed: '',\n            qualification: '',\n            guarantorOne: '',\n            guarantorOnePhone: '',\n            guarantorTwo: '',\n            guarantorTwoPhone: '',\n          })\n          setEditMode(false)\n          setRender(!render)\n        }\n      } catch (err) {\n        Swal.fire('OOPS ! ' + err.message, 'error')\n      }\n    } else {\n      return Swal.fire('OOPS', 'Select a Staff !', 'error')\n    }\n  }\n\n  const dataTouse = search.length === 0 ? staffData : data.sStaff\n  return (\n    <div className=\"col-sm-12 mt-3\">\n      <h1 className=\"centertext\">Staff Details</h1>\n      <p className=\"staffp\">\n        People and their behaviors are what deliver results to your\n        organization. Not systems, not processes, not computers, not machines.{' '}\n        <br />\n        \"Mark Hortsman\"\n      </p>\n\n      <div className=\"centreStaff row \">\n        <div className=\"table-responsive\">\n          <CButton\n            type=\"submit\"\n            className=\"btn btn-success btn-block col-sm-3 float-right btn-sm\"\n            onClick={() => setShow(!show)}\n          >\n            Enter New Staff\n          </CButton>\n          <CInput\n            className=\"mt-3 mb-3 col-4\"\n            type=\"text\"\n            placeholder=\"Search with Staff Name or Phone\"\n            onChange={handleSearch}\n          />\n          <Table>\n            <thead>\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Name</th>\n                <th>Date of Birth</th>\n                <th>Phone</th>\n                <th>Qualification</th>\n\n                <th className=\"hidden-sm-down\">Date Employed</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((s, index) => (\n                <tr\n                  key={s.id}\n                  Style=\"cursor: pointer;\"\n                  onClick={() => handleOnEdit(s)}\n                >\n                  <td>{index + 1}</td>\n                  <td>{s.nameOfStaff}</td>\n                  <td>{moment(s.dob).format('DD-MMMM-YYYY')}</td>\n                  <td>{s.phone}</td>\n                  <td>{s.qualification}</td>\n                  <td>{moment(s.dateEmployed).format('DD-MMMM-YYYY')}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n\n        <CModal\n          show={show}\n          onClose={() => {\n            setShow(!show)\n          }}\n          color=\"success\"\n          size=\"lg\"\n        >\n          <CModalHeader closeButton>\n            <CModalTitle>STAFF MGT | ADD STAFF </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CFormGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"fullName\" className=\"form-Label col-sm-3\">\n                  Staff Name\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"fullName\"\n                  value={staff.nameOfStaff}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      nameOfStaff: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"dob\" className=\"form-label col-sm-3\">\n                  Date of Birth\n                </CLabel>\n                <CInput\n                  type=\"date\"\n                  className=\"form-control col-sm-8\"\n                  id=\"dob\"\n                  value={staff.dob}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      dob: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"appdate\" className=\"form-label col-sm-3\">\n                  Appointment Date\n                </CLabel>\n                <CInput\n                  type=\"date\"\n                  className=\"form-control col-sm-8\"\n                  id=\"appdate\"\n                  value={staff.dateEmployed}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      dateEmployed: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"phone\" className=\"form-label col-sm-3\">\n                  Phone Number\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"phone\"\n                  value={staff.phone}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      phone: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"qualification\" className=\"form-label col-sm-3\">\n                  Qualification\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"qualification\"\n                  value={staff.qualification}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      qualification: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"guarantor\" className=\"form-label col-sm-3\">\n                  Guarantor 1\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"guarantor\"\n                  value={staff.guarantorOne}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      guarantorOne: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel\n                  htmlFor=\"phoneofgurantor1\"\n                  className=\"form-label col-sm-3\"\n                >\n                  Phone of Guarantor 1\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"phoneofgurantor1\"\n                  value={staff.guarantorOnePhone}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      guarantorOnePhone: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"guarantor2\" className=\"form-label col-sm-3\">\n                  Guarantor 2\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"guarantor2\"\n                  value={staff.guarantorTwo}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      guarantorTwo: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n\n              <CInputGroup className=\"mt-3\">\n                <CLabel\n                  htmlFor=\"phoneofgurantor2\"\n                  className=\"form-label col-sm-3\"\n                >\n                  Phone of Guarantor 2\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"phoneofgurantor2\"\n                  value={staff.guarantorTwoPhone}\n                  onChange={(e) =>\n                    setStaff({\n                      ...staff,\n                      guarantorTwoPhone: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n\n              <div className=\"d-flex justify-content-center mt-3 mb-3\">\n                {!editMode ? (\n                  <CButton\n                    className=\"btn btn-primary col-sm-2 mt-3 btn-sm\"\n                    onClick={handleSubmit}\n                  >\n                    Submit\n                  </CButton>\n                ) : null}\n                {editMode ? (\n                  <CButton\n                    className=\"btn-sm m-3 col-sm-2\"\n                    color=\"success\"\n                    onClick={handleUpdate}\n                  >\n                    Update\n                  </CButton>\n                ) : null}\n\n                {editMode && (\n                  <CButton\n                    className=\"btn btn-danger col-sm-2 m-3 btn-sm\"\n                    onClick={handleDelete}\n                  >\n                    Delete\n                  </CButton>\n                )}\n              </div>\n            </CFormGroup>\n          </CModalBody>\n        </CModal>\n      </div>\n    </div>\n  )\n}\n\nexport default Staff\n"],"sourceRoot":""}