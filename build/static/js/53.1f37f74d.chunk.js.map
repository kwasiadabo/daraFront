{"version":3,"sources":["views/setup/Depart.js","views/users/UsersData.js"],"names":["Depart","useState","visible","setVisible","allDepartments","setAllDepartments","allDirectorates","setAllDirectorates","department","directorate","setDepartment","useEffect","a","axios","get","results","data","getDepartments","getDirectorates","handleSubmit","post","status","Swal","fire","title","text","icon","htmlFor","className","id","size","type","color","onClick","show","onClose","closeButton","xs","md","row","name","placeholder","onChange","e","currentTarget","value","map","m","key","_id","s","index","c","console","log","usersData","registered","role","ok"],"mappings":"2TA4TeA,UA7QA,WACb,IADmB,EAuBWC,oBAAS,GAvBpB,mBAuBZC,EAvBY,KAuBHC,EAvBG,OAwBmCF,mBAAS,IAxB5C,gCAyByBA,mBAAS,KAzBlC,mBAyBZG,EAzBY,KAyBIC,EAzBJ,OA0B2BJ,mBAAS,IA1BpC,mBA0BZK,EA1BY,KA0BKC,EA1BL,OA2BiBN,mBAAS,CAC3CO,WAAY,GACZC,YAAa,KA7BI,mBA2BZD,EA3BY,KA2BAE,EA3BA,KAgCnBC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBC,IAAMC,IAC1B,qDAFJ,OACQC,EADR,OAIEV,EAAkBU,EAAQC,MAJ5B,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACb,IAEJO,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBC,IAAMC,IAC1B,sDAFJ,OACQC,EADR,OAIER,EAAmBQ,EAAQC,MAJ7B,4CADc,uBAAC,WAAD,wBAOdE,KACC,CAACZ,IAEJ,IAUMa,EAAY,uCAAG,sBAAAP,EAAA,sEACGC,IAAMO,KAC1B,oDACAZ,GAHiB,OAMI,MANJ,OAMPa,OACVC,IAAKC,KAAK,CACRC,MAAO,UACPC,KAAM,gCACNC,KAAM,YAGRJ,IAAKC,KAAK,CACRC,MAAO,UACPC,KAAM,6BACNC,KAAM,UAGVhB,EAAc,CAAEF,WAAY,GAAIC,YAAa,KAnB1B,2CAAH,qDAqBlB,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,6BACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQkB,QAAQ,yBAChB,yBAAKC,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,GAAG,uBACHC,KAAK,KACLC,KAAK,SAEP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,MAAM,WAAf,WAEF,kBAAC,IAAD,CACEA,MAAM,UACNC,QAAS,kBAAM9B,GAAYD,KAF7B,oBAKW,IACX,kBAAC,IAAD,CACE8B,MAAM,UACNC,QAAS,kBAAM9B,GAAYD,KAF7B,wBAmBd,kBAAC,KAAD,CACEgC,KAAMhC,EACNiC,QAAS,kBAAMhC,GAAYD,IAC3B8B,MAAM,UACNF,KAAK,MAEL,kBAAC,KAAD,CAAcM,aAAW,GACvB,kBAAC,KAAD,2CAEF,kBAAC,KAAD,KACE,8BACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,MACf,kBAAC,IAAD,KACE,kBAAC,IAAD,yBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,KAAG,GACb,kBAAC,IAAD,CAAMD,GAAG,MACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CACET,GAAG,aACHW,KAAK,aACLC,YAAY,aACZC,SAAU,SAACC,GAAD,OACRjC,EAAc,2BACTF,GADQ,IAEXA,WAAYmC,EAAEC,cAAcC,eAQxC,kBAAC,IAAD,CAAYN,KAAG,GACb,kBAAC,IAAD,CAAMD,GAAG,MACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWV,UAAU,sBACnB,4BACEC,GAAG,eACHD,UAAU,uBACViB,MAAOrC,EAAWC,YAClBiC,SAvHF,SAACC,GAC/BjC,EAAc,2BAAKF,GAAN,IAAkBC,YAAakC,EAAEC,cAAcC,WAwH5B,4BAAQA,MAAM,IAAd,iBACCvC,EAAgBwC,KAAI,SAACC,GAAD,OACnB,4BACEC,IAAKD,EAAEE,IACPJ,MAAOE,EAAEE,IACTpB,GAAIkB,EAAEE,KAELF,EAAEtC,2BAc7B,kBAAC,KAAD,KACE,kBAAC,IAAD,CAASuB,MAAM,UAAUF,KAAK,KAAKG,QAASd,GAA5C,QAEW,IACX,kBAAC,IAAD,CACEa,MAAM,UACNF,KAAK,KACLG,QAAS,kBAAM9B,GAAYD,KAH7B,SAOA,kBAAC,IAAD,CACE8B,MAAM,SACNF,KAAK,KACLG,QAAS,kBAAM9B,GAAYD,KAH7B,YAUJ,kBAAC,IAAD,KACE,2BAAO0B,UAAU,0DACf,gDACA,2BAAOA,UAAU,eACf,4BACE,sCACA,0CACA,2CACA,wCAGJ,2BAAOA,UAAU,IACdxB,EAAe0C,KAAI,SAACI,EAAGC,GAAJ,OAClB,wBAAIH,IAAKE,EAAED,KACT,4BAAKE,EAAQ,GACb,4BAAKD,EAAE1C,YACP,4BAAK0C,EAAEzC,YAAYA,aAEnB,wBAAImB,UAAU,eACZ,kBAAC,IAAD,CACEI,MAAM,OACNF,KAAK,KACLG,QAAS,SAACiB,GAAD,OAnLNE,EAmL+BF,OAlLxDG,QAAQC,IAAIF,EAAE5C,YADU,IAAC4C,IAgLL,sB,iCCvPTG,IAlCG,CAChB,CAAC1B,GAAI,EAAGW,KAAM,WAAYgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UAAWqC,GAAI,WAC1F,CAAC7B,GAAI,EAAGW,KAAM,cAAegB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,UAC/E,CAACQ,GAAI,EAAGW,KAAM,gBAAiBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UAChF,CAACQ,GAAI,EAAGW,KAAM,iBAAkBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,YACjF,CAACQ,GAAI,EAAGW,KAAM,mBAAoBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,WACpF,CAACQ,GAAI,EAAGW,KAAM,oBAAkBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UACjF,CAACQ,GAAI,EAAGW,KAAM,kBAAmBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,UACnF,CAACQ,GAAI,EAAGW,KAAM,iBAAkBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UACjF,CAACQ,GAAI,EAAGW,KAAM,aAAcgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,YAC7E,CAACQ,GAAI,EAAGW,KAAM,kBAAgBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,WAChF,CAACQ,GAAI,GAAIW,KAAM,0BAAmBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UACnF,CAACQ,GAAI,GAAIW,KAAM,iBAAkBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,UACnF,CAACQ,GAAI,GAAIW,KAAM,kBAAmBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UACnF,CAACQ,GAAI,GAAIW,KAAM,gBAAiBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,YACjF,CAACQ,GAAI,GAAIW,KAAM,qBAAsBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,WACvF,CAACQ,GAAI,GAAIW,KAAM,uBAAkBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UAClF,CAACQ,GAAI,GAAIW,KAAM,mBAAiBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,UAClF,CAACQ,GAAI,GAAIW,KAAM,mBAAegB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UAC/E,CAACQ,GAAI,GAAIW,KAAM,oBAAqBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,YACrF,CAACQ,GAAI,GAAIW,KAAM,oBAAqBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,WACtF,CAACQ,GAAI,GAAIW,KAAM,oBAAgBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UAChF,CAACQ,GAAI,GAAIW,KAAM,iBAAkBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,UACnF,CAACQ,GAAI,GAAIW,KAAM,sBAAkBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UAClF,CAACQ,GAAI,GAAIW,KAAM,gBAAiBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,WAClF,CAACQ,GAAI,GAAIW,KAAM,eAAgBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,gBAChF,CAACQ,GAAI,GAAIW,KAAM,eAAgBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,gBAChF,CAACQ,GAAI,GAAIW,KAAM,sBAAkBgB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,UAClF,CAACQ,GAAI,GAAIW,KAAM,gBAAiBgB,WAAY,aAAcC,KAAM,SAAUpC,OAAQ,WAClF,CAACQ,GAAI,GAAIW,KAAM,YAAagB,WAAY,aAAcC,KAAM,QAASpC,OAAQ,gBAC7E,CAACQ,GAAI,GAAIW,KAAM,YAAagB,WAAY,aAAcC,KAAM,QAASpC,OAAQ","file":"static/js/53.1f37f74d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CIcon from \"@coreui/icons-react\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport Swal from \"sweetalert2\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  //CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from \"@coreui/react\";\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from \"../users/UsersData\";\n\nconst Depart = () => {\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Active\":\n        return \"success\";\n      case \"Inactive\":\n        return \"secondary\";\n      case \"Pending\":\n        return \"warning\";\n      case \"Banned\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n  const fields = [\n    \"name\",\n    \"Phone Number\",\n    \"GH-ID\",\n    \"registered\",\n    \"role\",\n    \"status\",\n  ];\n  const [visible, setVisible] = useState(false);\n  const [selectedDirectorate, setSelectedDirectorate] = useState(\"\");\n  const [allDepartments, setAllDepartments] = useState([]);\n  const [allDirectorates, setAllDirectorates] = useState([]);\n  const [department, setDepartment] = useState({\n    department: \"\",\n    directorate: \"\",\n  });\n\n  useEffect(() => {\n    async function getDepartments() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/departments\"\n      );\n      setAllDepartments(results.data);\n    }\n    getDepartments();\n  }, [allDepartments]);\n\n  useEffect(() => {\n    async function getDirectorates() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/directorates\"\n      );\n      setAllDirectorates(results.data);\n    }\n    getDirectorates();\n  }, [allDirectorates]);\n\n  const handleDirectorateChange = (e) => {\n    setDepartment({ ...department, directorate: e.currentTarget.value });\n    // setSelectedDirectorate(e.target.value);\n    //console.log(unitDept.department);\n  };\n\n  const handleEditClicked = (c) => {\n    console.log(c.department);\n  };\n\n  const handleSubmit = async () => {\n    const results = await axios.post(\n      \"https://ugmcservice.herokuapp.com/api/departments\",\n      department\n    );\n\n    if (results.status === 200) {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Department Successfully Added\",\n        icon: \"success\",\n      });\n    } else {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Department Addition Failed\",\n        icon: \"error\",\n      });\n    }\n    setDepartment({ department: \"\", directorate: \"\" });\n  };\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <div>\n              <CModalHeader>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n                    <div className=\"controls\">\n                      <CInputGroup>\n                        <CInput\n                          id=\"appendedInputButtons\"\n                          size=\"16\"\n                          type=\"text\"\n                        />\n                        <CInputGroupAppend>\n                          <CCol>\n                            <CButton color=\"primary\">Search</CButton>\n                          </CCol>\n                          <CButton\n                            color=\"primary\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            + New Department\n                          </CButton>{\" \"}\n                          <CButton\n                            color=\"success\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            Export Report\n                          </CButton>\n                        </CInputGroupAppend>\n                      </CInputGroup>\n                    </div>\n                  </CFormGroup>\n                </CCol>\n              </CModalHeader>\n            </div>\n\n            {/*<CButton color=\"success\" onClick={() => setSuccess(!success)} className=\"mr-1\">Success modal</CButton>\n            <CButton color=\"warning\" onClick={() => setWarning(!warning)} className=\"mr-1\">Warning modal</CButton>\n            <CButton color=\"danger\" onClick={() => setDanger(!danger)} className=\"mr-1\">Danger modal</CButton>\n  <CButton color=\"info\" onClick={() => setInfo(!info)} className=\"mr-1\">Info modal</CButton>*/}\n\n            <CModal\n              show={visible}\n              onClose={() => setVisible(!visible)}\n              color=\"primary\"\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Administration | Department Setup</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <form>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CCard>\n                        <CCardHeader>DEPARTMENT SETUP</CCardHeader>\n                        <CCardBody>\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CInputGroup>\n                                <CInput\n                                  id=\"FileNumber\"\n                                  name=\"FileNumber\"\n                                  placeholder=\"Department\"\n                                  onChange={(e) =>\n                                    setDepartment({\n                                      ...department,\n                                      department: e.currentTarget.value,\n                                    })\n                                  }\n                                />\n                              </CInputGroup>\n                            </CCol>\n                          </CFormGroup>\n\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CInputGroup>\n                                <CDropdown className=\"input-group-append\">\n                                  <select\n                                    id=\"departmentId\"\n                                    className=\"form-control classic\"\n                                    value={department.directorate}\n                                    onChange={handleDirectorateChange}\n                                  >\n                                    <option value=\"\">Directorate *</option>\n                                    {allDirectorates.map((m) => (\n                                      <option\n                                        key={m._id}\n                                        value={m._id}\n                                        id={m._id}\n                                      >\n                                        {m.directorate}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </CDropdown>\n                              </CInputGroup>\n                            </CCol>\n                          </CFormGroup>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                  </CRow>\n                </form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"success\" size=\"sm\" onClick={handleSubmit}>\n                  Save\n                </CButton>{\" \"}\n                <CButton\n                  color=\"warning\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Reset\n                </CButton>\n                <CButton\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Cancel\n                </CButton>\n              </CModalFooter>\n            </CModal>\n\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <caption>Departments</caption>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>Number</th>\n                    <th>Department</th>\n                    <th>Directorate</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody className=\"\">\n                  {allDepartments.map((s, index) => (\n                    <tr key={s._id}>\n                      <td>{index + 1}</td>\n                      <td>{s.department}</td>\n                      <td>{s.directorate.directorate}</td>\n\n                      <td className=\"float-right\">\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          onClick={(s) => handleEditClicked(s)}\n                        >\n                          Edit\n                        </CButton>\n\n                        {/*<CButton color=\"primary\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n                </CButton>\n                <CButton color=\"danger\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n              </CButton>*/}\n                      </td>\n                      {/*<td>\n                    <button\n                      className=\"but btn-houReject\"\n                      onClick={() => handleShow(s)}\n                    >\n                      Reject\n                    </button>\n                  </td>*/}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Depart;\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending', ok: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 43, name: 'Ford Correct', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 44, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 45, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 46, name: 'Ford Good', registered: '2008/05/25', role: 'Avata', status: 'Don\\'t panic!'},\n  {id: 47, name: 'Ford Fine', registered: '2009/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n  \n]\n\nexport default usersData\n"],"sourceRoot":""}