{"version":3,"sources":["views/planning/Support.js"],"names":["BasicForms","xs","sm","md","action","method","className","row","htmlFor","type","id","name","placeholder","autoComplete","size","color","required"],"mappings":"8KAAA,6CAuIeA,UArFI,WAIjB,OACE,oCACE,kBAAC,KAAD,KAEE,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,OAInB,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMD,GAAG,KAAKE,GAAG,KAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,eAKA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,GAAGC,OAAO,OAAOC,UAAU,mBACvC,kBAAC,IAAD,CAAYC,KAAG,GACb,kBAAC,IAAD,CAAMJ,GAAG,KACP,kBAAC,KAAD,CAAQK,QAAQ,YAAhB,UAEF,kBAAC,IAAD,CAAMP,GAAG,KAAKE,GAAG,KACf,kBAAC,IAAD,CAAQM,KAAK,QAAQC,GAAG,WAAWC,KAAK,WAAWC,YAAY,iBAAiBC,aAAa,UAC7F,kBAAC,IAAD,CAAWP,UAAU,cAArB,6BAGJ,kBAAC,IAAD,CAAYC,KAAG,GACb,kBAAC,IAAD,CAAMJ,GAAG,KACP,kBAAC,KAAD,CAAQK,QAAQ,eAAhB,aAEF,kBAAC,IAAD,CAAMP,GAAG,KAAKE,GAAG,KACf,kBAAC,IAAD,CAAQM,KAAK,WAAWC,GAAG,cAAcC,KAAK,cAAcC,YAAY,oBAAoBC,aAAa,qBACzG,kBAAC,IAAD,CAAWP,UAAU,cAArB,kCAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASG,KAAK,SAASK,KAAK,KAAKC,MAAM,WAAU,kBAAC,IAAD,CAAOJ,KAAK,iBAA7D,WADF,IACkG,kBAAC,IAAD,CAASF,KAAK,QAAQK,KAAK,KAAKC,MAAM,UAAS,kBAAC,IAAD,CAAOJ,KAAK,YAA3D,aAMtG,kBAAC,IAAD,CAAMV,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,0BAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,UAAU,iBACf,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQE,QAAQ,kBAAhB,sBACA,kBAAC,IAAD,CAAQF,UAAU,uBAAuBI,GAAG,mBAC5C,kBAAC,KAAD,sBAEF,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQF,QAAQ,kBAAhB,kBACA,kBAAC,IAAD,CAAQF,UAAU,uBAAuBI,GAAG,iBAAiBM,UAAQ,IACrE,kBAAC,IAAD,CAAkBV,UAAU,cAA5B,sCAGA,kBAAC,KAAD,CAAgBA,UAAU,cAA1B","file":"static/js/95.a2f0cee7.chunk.js","sourcesContent":["import React from 'react'\nimport {\n // CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  //CDataTable,\n  CRow\n} from '@coreui/react'\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from '../../users/UsersData'\n\n//import React from 'react'\nimport {\n  CButton,\n  //CCard,\n // CCardBody,\n  CCardFooter,\n // CCardHeader,\n // CCol,\n  //CCollapse,\n  //CDropdownItem,\n  //CDropdownMenu,\n  //CDropdownToggle,\n  //CFade,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  //CTextarea,\n  CInput,\n  //CInputFile,\n  //CInputCheckbox,\n//  CInputRadio,\n  //CInputGroup,\n  //CInputGroupAppend,\n  //CInputGroupPrepend,\n  //CDropdown,\n // CInputGroupText,\n  CLabel,\n  //CSelect,\n // CRow,\n  //CSwitch\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n//import { DocsLink } from 'src/reusable'\n\nconst BasicForms = () => {\n//  const [collapsed, setCollapsed] = React.useState(true)\n // const [showElements, setShowElements] = React.useState(true)\n\n  return (\n    <>\n      <CRow>\n        \n        <CCol xs=\"12\" sm=\"6\">\n         \n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          \n          <CCard>\n            <CCardHeader>\n              \n            \n              PSM OK\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-email\">Email</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput type=\"email\" id=\"hf-email\" name=\"hf-email\" placeholder=\"Enter Email...\" autoComplete=\"email\" />\n                    <CFormText className=\"help-block\">Please enter your email</CFormText>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-password\">Password</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput type=\"password\" id=\"hf-password\" name=\"hf-password\" placeholder=\"Enter Password...\" autoComplete=\"current-password\"/>\n                    <CFormText className=\"help-block\">Please enter your password</CFormText>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton> <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\n            </CCardFooter>\n          </CCard>\n          \n     </CCol>\n\n        <CCol xs=\"12\" sm=\"6\">\n          <CCard>\n            <CCardHeader>\n              PSM Validation OK \n            </CCardHeader>\n            <CCardBody>\n              <CForm className=\"was-validated\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"inputSuccess2i\">Non-required input</CLabel>\n                  <CInput className=\"form-control-success\" id=\"inputSuccess2i\" />\n                  <CValidFeedback>Non-required</CValidFeedback>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"inputWarning2i\">Required input</CLabel>\n                  <CInput className=\"form-control-warning\" id=\"inputWarning2i\" required />\n                  <CInvalidFeedback className=\"help-block\">\n                    Please provide a valid information\n                  </CInvalidFeedback>\n                  <CValidFeedback className=\"help-block\">Input provided</CValidFeedback>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n\n     \n        \n       \n     \n    </>\n  )\n}\n\nexport default BasicForms\n"],"sourceRoot":""}