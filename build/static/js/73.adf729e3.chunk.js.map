{"version":3,"sources":["views/pages/loanInArrears.jsx"],"names":["LoanInArrears","useState","arrears","setArrears","staffData","setStaffData","officer","setOfficer","render","Date","toISOString","slice","tDate","user","useHistory","auth","getCurrentUser","userRole","staff","useEffect","a","axios","get","apiUrl","results","data","getArrears","getStaff","sData","filter","item","toLowerCase","includes","dataTouse","length","formatter","Intl","NumberFormat","style","currency","totalDue","reduce","i","due","totalPaid","paid","totalArrears","Arrears","className","color","onClick","url","reportUrl","window","open","aria-label","value","onChange","e","currentTarget","defaultValue","map","b","key","id","nameOfStaff","format","c","index","Style","idNumber","customer"],"mappings":"0UAkOeA,UA1JO,WAAO,IAAD,EACIC,mBAAS,IADb,mBACnBC,EADmB,KACVC,EADU,OAEQF,mBAAS,IAFjB,mBAEnBG,EAFmB,KAERC,EAFQ,OAGIJ,mBAAS,IAHb,mBAGnBK,EAHmB,KAGVC,EAHU,OAIEN,oBAAS,GAJX,mBAInBO,EAJmB,aAKAP,oBAAS,IAAIQ,MAAOC,cAAcC,MAAM,EAAG,MAL3C,mBAKnBC,EALmB,KAOpBC,GAPoB,KAMXC,cACFC,IAAKC,kBACqB,gBAAjBH,EAAKI,UAA6BJ,EAAKK,MAE7DC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBC,IAAMC,IAC1BC,SAAS,wBAA0BV,EAAKK,OAF5C,OACQM,EADR,OAIErB,EAAWqB,EAAQC,MAJrB,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACd,IAEJO,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBC,IAAMC,IAAIC,SAAS,gBAD3C,OACQC,EADR,OAEEnB,EAAamB,EAAQC,MAFvB,4CADc,uBAAC,WAAD,wBAKdE,KACC,CAACnB,EAAQJ,IAEZ,IAAMqB,EAAO,CACXG,MAAO1B,EAAQ2B,QAAO,SAACC,GAAD,OACpBA,EAAKZ,MAAMa,cAAcC,SAAS1B,EAAQyB,mBAIxCE,EAA+B,IAAnB3B,EAAQ4B,OAAehC,EAAUuB,EAAKG,MAOpDO,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CC,MAAO,WACPC,SAAU,QAWNC,EAAWtC,EAAQuC,QAAO,SAACrB,EAAGsB,GAClC,OAAOtB,EAAIsB,EAAEC,MACZ,GAEGC,EAAY1C,EAAQuC,QAAO,SAACrB,EAAGsB,GACnC,OAAOtB,EAAIsB,EAAEG,OACZ,GAEGC,EAAe5C,EAAQuC,QAAO,SAACrB,EAAGsB,GACtC,OAAOtB,EAAIsB,EAAEK,UACZ,GAEH,OACE,6BACE,yBAAKC,UAAU,uBACb,gDACA,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEC,MAAM,UACND,UAAU,mCACVE,QAAS,kBAtCeC,EAwCpBC,YAAY,wBAA0BvC,EAAKK,WAtCvDmC,OAAOC,KAAKH,EAAK,kBAAmB,QADb,yCADQ,IAACA,IAmC1B,kBAWkB,gBAAjBtC,EAAKI,UACJ,kBAAC,KAAD,CACE+B,UAAU,6BACVO,aAAW,UACXC,MAAOlD,EACPmD,SAAU,SAACC,GAAD,OAAOnD,EAAWmD,EAAEC,cAAcH,SAE5C,4BAAQI,aAAa,IAArB,wBACCxD,EAAUyD,KAAI,SAACC,GAAD,OACb,4BAAQC,IAAKD,EAAEE,GAAIR,MAAOM,EAAEG,YAAaD,GAAIF,EAAEE,IAC5CF,EAAEG,iBAMX,kBAAC,IAAD,CAAOjB,UAAU,YACf,+BACE,wBAAIA,UAAU,SACZ,6BACA,uCAEA,wCACA,4BACE,yBAAKA,UAAU,WACb,oCAAUb,EAAU+B,OAAO1B,KAF/B,OAMA,4BACE,yBAAKQ,UAAU,WACb,oCAAUb,EAAU+B,OAAOtB,KAF/B,QAMA,4BACE,yBAAKI,UAAU,WACb,oCAAUb,EAAU+B,OAAOpB,KAF/B,UAIU,KAGV,yCAGJ,+BACGb,EAAU4B,KAAI,SAACM,EAAGC,GAAJ,OACb,wBACEL,IAAKI,EAAEH,GAEPK,MAAM,oBAEN,4BAAKD,EAAQ,GACb,4BAAKD,EAAEG,UAEP,4BAAKH,EAAEI,UACP,4BAAKpC,EAAU+B,OAAOC,EAAExB,MACxB,4BAAKR,EAAU+B,OAAOC,EAAEtB,OACxB,4BAAKV,EAAU+B,OAAOC,EAAEpB,UAExB,4BAAKoB,EAAEjD","file":"static/js/73.adf729e3.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Link, useHistory, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { apiUrl, reportUrl } from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport formData from 'form-data'\n\n//import '../../table.css'\n\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  ButtonDropdowns,\n  //CForm,\n  CDropdownDivider,\n  CInputCheckbox,\n  CLink,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nconst LoanInArrears = () => {\n  const [arrears, setArrears] = useState([])\n  const [staffData, setStaffData] = useState([])\n  const [officer, setOfficer] = useState('')\n  const [render, setRender] = useState(false)\n  const [tDate, setTdate] = useState(new Date().toISOString().slice(0, 10))\n  let navigate = useHistory()\n  const user = auth.getCurrentUser()\n  const isLoanOfficer = user.userRole == 'Loan Officer' ? user.staff : 'nothing'\n\n  useEffect(() => {\n    async function getArrears() {\n      const results = await axios.get(\n        apiUrl + '/loanreports/arrears/' + user.staff,\n      )\n      setArrears(results.data)\n    }\n    getArrears()\n  }, [tDate])\n\n  useEffect(() => {\n    async function getStaff() {\n      const results = await axios.get(apiUrl + '/setup/staff')\n      setStaffData(results.data)\n    }\n    getStaff()\n  }, [render, staffData])\n\n  const data = {\n    sData: arrears.filter((item) =>\n      item.staff.toLowerCase().includes(officer.toLowerCase()),\n    ),\n  }\n\n  const dataTouse = officer.length === 0 ? arrears : data.sData\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'loan in arrears', 'popup', windowFeatures)\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleDateChange = (e) => {\n    setTdate(e.currentTarget.value)\n  }\n\n  const totalDue = arrears.reduce((a, i) => {\n    return a + i.due\n  }, 0)\n\n  const totalPaid = arrears.reduce((a, i) => {\n    return a + i.paid\n  }, 0)\n\n  const totalArrears = arrears.reduce((a, i) => {\n    return a + i.Arrears\n  }, 0)\n\n  return (\n    <div>\n      <div className=\"col-sm-12 mt-3 mb-3\">\n        <h3>Loans In Arrears</h3>\n        <div className=\"table-responsive\">\n          <CButton\n            color=\"success\"\n            className=\"col-sm-2 float-right btn-sm mb-3\"\n            onClick={() =>\n              openCustomerListAsReport(\n                reportUrl + '/loansInArrears.aspx?' + user.staff,\n              )\n            }\n          >\n            View as Report\n          </CButton>\n          {user.userRole != 'Loan Officer' && (\n            <CSelect\n              className=\"form-select col-sm-12 mb-3\"\n              aria-label=\"Default\"\n              value={officer}\n              onChange={(e) => setOfficer(e.currentTarget.value)}\n            >\n              <option defaultValue=\"\">--Select Officer *--</option>\n              {staffData.map((b) => (\n                <option key={b.id} value={b.nameOfStaff} id={b.id}>\n                  {b.nameOfStaff}\n                </option>\n              ))}\n            </CSelect>\n          )}\n\n          <Table className=\"table-sm\">\n            <thead>\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Loan ID</th>\n                {/*<th>Account No.</th>*/}\n                <th>Customer</th>\n                <th>\n                  <div className=\"sm mb-3\">\n                    <strong> {formatter.format(totalDue)}</strong>\n                  </div>\n                  Due\n                </th>\n                <th>\n                  <div className=\"sm mb-3\">\n                    <strong> {formatter.format(totalPaid)}</strong>\n                  </div>\n                  Paid\n                </th>\n                <th>\n                  <div className=\"sm mb-3\">\n                    <strong> {formatter.format(totalArrears)}</strong>\n                  </div>\n                  Arrears{' '}\n                </th>\n\n                <th>Officer</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((c, index) => (\n                <tr\n                  key={c.id}\n                  // onClick={() => customerView(c)}\n                  Style=\"cursor: pointer;\"\n                >\n                  <td>{index + 1}</td>\n                  <td>{c.idNumber}</td>\n                  {/* <td>{c.accountNumber}</td>*/}\n                  <td>{c.customer}</td>\n                  <td>{formatter.format(c.due)}</td>\n                  <td>{formatter.format(c.paid)}</td>\n                  <td>{formatter.format(c.Arrears)}</td>\n\n                  <td>{c.staff}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//  <td>{moment(s.startDate).format(\"DD,MMMM,YYYY\")}</td>\nexport default LoanInArrears\n"],"sourceRoot":""}