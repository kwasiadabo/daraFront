{"version":3,"sources":["views/pages/disburseCheque.jsx"],"names":["Disbursement","useState","show","setShow","render","setRender","unDisbursed","setUnDisbursed","data","setData","regShow","setRegShow","colShow","setColShow","registrationFees","setRegistrationFees","disbursed","setDisbursed","cashCollateral","setCashCollateral","chequeId","disbursedBy","amount","customer","disburseData","setDisburseData","editMode","setEditMode","collateralBal","setCollateralBal","modeOfPayment","sending","receiving","regFeeData","setRegFeeData","Date","toISOString","slice","startDate","setStartDate","endDate","setEndDate","id","checkRegFee","setCheckRegFee","checkCashCollateral","setCheckCashCollateral","cashCollateralData","setCashCollateralData","startdate","enddate","user","auth","getCurrentUser","formatter","Intl","NumberFormat","style","currency","useEffect","a","axios","get","apiUrl","results","getUndisbursedCheques","getDisbursedCheques","getRegistrationFees","getCashCollateral","schemaMap","Joi","number","required","label","allow","string","schema","object","validateForm","result","validate","error","details","message","handleSubmit","filter","r","length","Swal","fire","c","post","status","handleRegFeeSubmit","console","log","handleRegFeeEdit","put","handleCashCollateralSubmit","handleCashCollateralEdit","today","toLocaleString","month","getDate","getFullYear","totalAmt","reduce","i","handleCashCollateralShow","s","customerId","collBal","balance","checkRegistrationFee","checkCashCollateralExistence","checkReg","checkCollateral","handleRegShowforEdit","handleCollateralShowforEdit","checkColl","className","map","index","key","nameOnCheque","moment","entryDate","format","dateOnCheque","chequeNumber","undefined","minimumFractionDigits","maximumFractionDigits","issuedBy","color","size","onClick","header","lg","type","aria-label","value","onChange","e","currentTarget","fullName","bank","url","reportUrl","window","open","data-backdrop","data-keyboard","onClose","closeButton","class","htmlFor","readOnly","for","bankAccount","defaultValue"],"mappings":"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","file":"static/js/70.799bb21a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport { reportUrl } from '../../config.json'\nimport AdaboSelect from 'react-select'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n  CLink,\n} from '@coreui/react'\n\nconst Disbursement = () => {\n  const [show, setShow] = useState(false)\n  const [render, setRender] = useState(false)\n  const [customers, setCustomers] = useState([])\n  const [search, setSearch] = useState('')\n  const [applicant, setApplicant] = useState({})\n  const [buffer, setBuffer] = useState('')\n  const [banks, setBanks] = useState([])\n  const [bankAccounts, setBankAccounts] = useState([])\n  const [unDisbursed, setUnDisbursed] = useState([])\n  const [data, setData] = useState({})\n  const [regShow, setRegShow] = useState(false)\n  const [colShow, setColShow] = useState(false)\n  const [issuedCheques, setIssuedCheques] = useState([])\n  const [registrationFees, setRegistrationFees] = useState([])\n  const [disbursed, setDisbursed] = useState([])\n  const [cashCollateral, setCashCollateral] = useState([])\n  const [disburseData, setDisburseData] = useState({\n    chequeId: 0,\n    disbursedBy: 0,\n    amount: 0,\n    customer: 0,\n  })\n  const [editMode, setEditMode] = useState(false)\n  const [collateralBal, setCollateralBal] = useState(0)\n  const [regFeeData, setRegFeeData] = useState({\n    customer: 0,\n    chequeId: 0,\n    modeOfPayment: '',\n    amount: '',\n    sending: '',\n    receiving: '',\n  })\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10))\n\n  const [regFeeDataEdit, setRegFeeDataEdit] = useState({\n    customer: 0,\n    chequeId: 0,\n    modeOfPayment: '',\n    amount: '',\n    sending: '',\n    receiving: '',\n    id: 0,\n  })\n  const [checkRegFee, setCheckRegFee] = useState({\n    id: 0,\n    chequeId: 0,\n    customer: 0,\n    amount: 0,\n  })\n  const [checkCashCollateral, setCheckCashCollateral] = useState(0)\n\n  const [cashCollateralData, setCashCollateralData] = useState({\n    customer: 0,\n    chequeId: 0,\n    amount: '',\n    modeOfPayment: '',\n    sending: '',\n    receiving: '',\n  })\n\n  const [disburseDate, setDisburseDate] = useState({\n    startdate: new Date().toISOString().slice(0, 10),\n    enddate: new Date().toISOString().slice(0, 10),\n  })\n  const user = auth.getCurrentUser()\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  useEffect(() => {\n    async function getUndisbursedCheques() {\n      const results = await axios.get(\n        apiUrl + '/loan/issuedloancheques/undisbursed',\n      )\n      setUnDisbursed(results.data)\n    }\n    getUndisbursedCheques()\n    //console.log(unDisbursed)\n  }, [render])\n\n  useEffect(() => {\n    async function getDisbursedCheques() {\n      const results = await axios.get(\n        apiUrl + '/loan/disburse/' + startDate + '/' + endDate,\n      )\n      setDisbursed(results.data)\n    }\n    getDisbursedCheques()\n    //console.log(disbursed)\n  }, [startDate, endDate, render])\n\n  useEffect(() => {\n    async function getRegistrationFees() {\n      const results = await axios.get(apiUrl + '/loan/registrationfee')\n      setRegistrationFees(results.data)\n    }\n    getRegistrationFees()\n    // console.log(registrationFees)\n  }, [render])\n\n  useEffect(() => {\n    async function getCashCollateral() {\n      const results = await axios.get(apiUrl + '/loan/cashcollateral')\n      setCashCollateral(results.data)\n    }\n    getCashCollateral()\n    //console.log(cashCollateral)\n  }, [render])\n\n  const schemaMap = {\n    chequeId: Joi.number().required().label('Cheque Details'),\n    disbursedBy: Joi.number().allow(''),\n    customer: Joi.number().required().label('Customer'),\n    amount: Joi.number().required().label('Amount'),\n    modeOfPayment: Joi.string().label('Mode Of Payment'),\n    sending: Joi.string().allow(''),\n    receiving: Joi.string().allow(''),\n  }\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(disburseData, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n  const handleStartDateChange = (e) => {\n    setStartDate(e.currentTarget.value)\n  }\n  const handleEndDateChange = (e) => {\n    setEndDate(e.currentTarget.value)\n  }\n  const handleSubmit = async () => {\n    const reg = registrationFees.filter(\n      (r) =>\n        r.customer === disburseData.customer &&\n        r.chequeId === disburseData.chequeId,\n    )\n\n    if (reg.length === 0)\n      return Swal.fire(\n        'Registration Fee',\n        'Customer has NOT paid registration fee',\n        'error',\n      )\n\n    const cashCol = cashCollateral.filter(\n      (c) =>\n        c.customer === disburseData.customer &&\n        c.chequeId === disburseData.chequeId,\n    )\n\n    if (cashCol.length === 0)\n      return Swal.fire(\n        'Cash Collateral',\n        'Customer has NOT paid Cash Collateral',\n        'error',\n      )\n\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('Validation', validate, 'error')\n    }\n    try {\n      const results = await axios.post(apiUrl + '/loan/disburse', disburseData)\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPs !',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire('Good job!', 'Cheque Disbursed Successfully', 'success')\n        setRender(!render)\n        setDisburseData({\n          chequeId: 0,\n          disbursedBy: 0,\n          amount: '',\n          sending: '',\n          receiving: '',\n        })\n        setShow(!show)\n        setRender(!render)\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ' + err.message, 'error')\n    }\n  }\n\n  const handleRegFeeSubmit = async () => {\n    console.log(regFeeData)\n    /* const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('Validation', validate, 'error')\n    }*/\n    try {\n      const results = await axios.post(\n        apiUrl + '/loan/registrationfee',\n        regFeeData,\n      )\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPs !',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire('Good job!', 'Registration Fee Saved Successfully', 'success')\n        setRender(!render)\n        setRegFeeData({\n          customer: '',\n          chequeId: '',\n          amount: '',\n          sending: '',\n          receiving: '',\n        })\n        setRegShow(!regShow)\n        setRender(!render)\n      }\n    } catch (err) {\n      Swal.fire(\n        'OOPS ! ',\n        err + ' Registration Fee Already Exist for this loan',\n        'error',\n      )\n    }\n  }\n\n  const handleRegFeeEdit = async () => {\n    console.log(regFeeData)\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('Validation', validate, 'error')\n    }\n    try {\n      const results = await axios.put(apiUrl + '/loan/registrationfee', {\n        id: regFeeData.id,\n        amount: regFeeData.amount,\n      })\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPs !',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire(\n          'Good job!',\n          'Registration Fee Updated Successfully',\n          'success',\n        )\n        setRender(!render)\n        setRegFeeData({\n          amount: '',\n          modeOfPayment: '',\n          sending: '',\n          receiving: '',\n          id: 0,\n        })\n        setRegShow(!regShow)\n        setRender(!render)\n        setEditMode(!editMode)\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ', 'Registration Fee Update Failed', 'error')\n    }\n  }\n\n  const handleCashCollateralSubmit = async () => {\n    /*const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('Validation', validate, 'error')\n    }*/\n    if (cashCollateralData.modeOfPayment == 'Withdrawal') {\n      if (collateralBal <= 0 || cashCollateralData.amount > collateralBal)\n        return Swal.fire('OOPS !', 'Insufficient Collateral Balance', 'error')\n      await axios.post(apiUrl + '/loan/cashcollateral/withdrawal', {\n        amount: cashCollateralData.amount,\n        customer: cashCollateralData.customer,\n      })\n    }\n    /* try { */\n    console.log(cashCollateralData)\n    const results = await axios.post(\n      apiUrl + '/loan/cashcollateral',\n      cashCollateralData,\n    )\n    if (results.status !== 200) {\n      return Swal.fire(\n        'OOPs !',\n        'Submission Failed ! Check Entries and try again !',\n        'error',\n      )\n    } else {\n      Swal.fire('Good job!', 'Cash Collateral Saved Successfully', 'success')\n      setRender(!render)\n      setCashCollateralData({\n        customer: 0,\n        chequeId: 0,\n        amount: '',\n        modeOfPayment: '',\n        sending: '',\n        receiving: '',\n      })\n      setColShow(!colShow)\n      setRender(!render)\n    }\n    /* } catch (err) {\n      Swal.fire('OOPS ! ', err + ' Cash Collateral NOT Saved', 'error')\n    }*/\n  }\n\n  const handleCashCollateralEdit = async () => {\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('Validation', validate, 'error')\n    }\n    try {\n      const results = await axios.put(apiUrl + '/loan/cashcollateral', {\n        id: cashCollateralData.id,\n        amount: cashCollateralData.amount,\n      })\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPs !',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire(\n          'Good job!',\n          'Cash Collateral Updated Successfully',\n          'success',\n        )\n        setRender(!render)\n        setCashCollateralData({\n          amount: '',\n          modeOfPayment: '',\n          sending: '',\n          receiving: '',\n        })\n        setColShow(!colShow)\n        setRender(!render)\n        setEditMode(!editMode)\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ', 'Cash Collateral Update Failed', 'error')\n    }\n  }\n\n  const handleDelete = (c) => {\n    Swal.fire({\n      title: 'Do you want to delete this issued Cheque?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      denyButtonText: `No`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        await axios.delete(apiUrl + '/loan/issuedloancheques/' + c.id)\n        Swal.fire('Deletion Confirmed !', '', 'success')\n      } else if (result.isDenied) {\n        Swal.fire('Deletion NOT Confirmed', '', 'info')\n      }\n    })\n  }\n\n  const money = new Intl.NumberFormat('de-CH', {\n    style: 'currency',\n    currency: 'CHF',\n  })\n\n  var today = new Date()\n\n  // returns the month (from 0 to 11)\n  const month = today.toLocaleString('default', { month: 'long' })\n\n  // returns the day of the month (from 1 to 31)\n  const day = today.getDate()\n\n  // returns the year (four digits)\n  const year = today.getFullYear()\n\n  function add(accumulator, a) {\n    return accumulator + a\n  }\n\n  const totalAmt = disbursed.reduce((a, i) => {\n    return a + i.amount\n  }, 0)\n\n  const handleShow = (s) => {\n    setData(s)\n    setDisburseData({\n      ...disburseData,\n      chequeId: s.id,\n      disbursedBy: user.id,\n      customer: s.customerId,\n      amount: s.amount,\n    })\n\n    setShow(!show)\n  }\n\n  const handleRegShow = (s) => {\n    setData(s)\n    setRegFeeData({\n      ...regFeeData,\n      chequeId: s.id,\n      customer: s.customerId,\n      sending: '',\n      receiving: '',\n    })\n    setRegShow(!regShow)\n  }\n\n  const handleRegFeeChange = (e) => {\n    setRegFeeData({\n      ...regFeeData,\n      amount: e.currentTarget.value,\n    })\n  }\n\n  const handleCashCollateralShow = async (s) => {\n    console.log(s)\n    setData(s)\n    setCashCollateralData({\n      ...cashCollateralData,\n      chequeId: s.id,\n      customer: s.customerId,\n    })\n\n    const collBal = await axios.get(\n      apiUrl + '/loan/cashcollateral/' + s.customerId,\n    )\n    // console.log(collBal.data[0].balance)\n    setCollateralBal(collBal.data[0].balance)\n    setColShow(!colShow)\n  }\n\n  const handleCashCollateralChange = (e) => {\n    setCashCollateralData({\n      ...cashCollateralData,\n      amount: e.currentTarget.value,\n    })\n  }\n\n  const checkRegistrationFee = async (s) => {\n    setRegFeeData({})\n    checkCashCollateralExistence(s)\n    const checkReg = await axios.get(\n      apiUrl + '/loan/registrationfee/' + s.customerId + '/' + s.id,\n    )\n    if (checkReg.data[0]) {\n      setCheckRegFee(checkReg.data[0].id)\n    } else return setCheckRegFee(null)\n  }\n\n  const checkCashCollateralExistence = async (s) => {\n    const checkCollateral = await axios.get(\n      apiUrl + '/loan/cashcollateral/' + s.customerId + '/' + s.id,\n    )\n    if (checkCollateral.data[0])\n      return setCheckCashCollateral(checkCollateral.data[0].id)\n    return setCheckCashCollateral(null)\n  }\n\n  const handleRegShowforEdit = async (s) => {\n    setData(s)\n    const checkReg = await axios.get(\n      apiUrl + '/loan/registrationfee/' + s.customerId + '/' + s.id,\n    )\n    //console.log(regFeeData)\n    setRegFeeData({\n      ...regFeeData,\n      id: checkReg.data[0].id,\n      chequeId: checkReg.data[0].chequeId,\n      customer: checkReg.data[0].customer,\n      amount: checkReg.data[0].amount,\n      modeOfPayment: checkReg.data[0].modeOfPayment,\n      sending: checkReg.data[0].sending,\n      receiving: checkReg.data[0].receiving,\n    })\n    setEditMode(!editMode)\n    setRegShow(!regShow)\n  }\n\n  const handleCollateralShowforEdit = async (s) => {\n    setData(s)\n    const checkColl = await axios.get(\n      apiUrl + '/loan/cashcollateral/' + s.customerId + '/' + s.id,\n    )\n    //console.log(regFeeData)\n    setCashCollateralData({\n      ...cashCollateralData,\n      id: checkColl.data[0].id,\n      chequeId: checkColl.data[0].chequeId,\n      customer: checkColl.data[0].customer,\n      amount: checkColl.data[0].amount,\n      modeOfPayment: checkColl.data[0].modeOfPayment,\n      sending: checkColl.data[0].sending,\n      receiving: checkColl.data[0].receiving,\n    })\n    setEditMode(!editMode)\n    setColShow(!colShow)\n  }\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n\n  const getIndividualRegistrationFee = async (s) => {\n    const results = await axios.get(apiUrl + '/loan/registrationfee/' + s.id)\n  }\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row justify-content-center\">\n        <h4 className=\"centertext mb-3\">LOAN CHEQUE DISBURSEMENT</h4>\n      </div>\n\n      <div className=\"mb-3\">\n        <p className=\"float-left\">Cheques Available for Disbursement</p>\n        <Table className=\"table-sm\">\n          <thead>\n            <tr className=\"fs-sm\">\n              <th></th>\n              <th>Name</th>\n              <th>Date Issued</th>\n              <th>Date on Cheque</th>\n              <th>Cheque No.</th>\n              <th>Amount (GHC)</th>\n              <th>Issued By</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {unDisbursed.map((c, index) => (\n              <tr key={c.id}>\n                <td>{index + 1}</td>\n                <td>{c.nameOnCheque}</td>\n                <td>{moment(c.entryDate).format('DD-MMMM-YYYY')}</td>\n                <td>{moment(c.dateOnCheque).format('DD-MMMM-YYYY')}</td>\n                <td>{c.chequeNumber}</td>\n                <td>\n                  {c.amount.toLocaleString(undefined, {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2,\n                  })}\n                </td>\n                <td>{c.issuedBy}</td>\n                <td>\n                  <CDropdown className=\"btn-sm\">\n                    <CDropdownToggle\n                      color=\"info\"\n                      size=\"sm\"\n                      onClick={() => checkRegistrationFee(c)}\n                    >\n                      Select Activity\n                    </CDropdownToggle>\n                    <CDropdownMenu size=\"sm\">\n                      <CDropdownItem header>\n                        Disbursement Activities\n                      </CDropdownItem>\n                      {!checkRegFee && (\n                        <CDropdownItem onClick={() => handleRegShow(c)}>\n                          Registration Fee\n                        </CDropdownItem>\n                      )}\n                      {!checkCashCollateral && (\n                        <CDropdownItem\n                          onClick={() => handleCashCollateralShow(c)}\n                        >\n                          Cash Collateral{' '}\n                        </CDropdownItem>\n                      )}\n                      <CDropdownItem onClick={() => handleShow(c)}>\n                        Disburse Cheque\n                      </CDropdownItem>\n                    </CDropdownMenu>\n                  </CDropdown>\n                </td>\n                <td>\n                  <CDropdown className=\"btn-sm\">\n                    <CDropdownToggle\n                      color=\"success\"\n                      size=\"sm\"\n                      onClick={() => checkRegistrationFee(c)}\n                    >\n                      Edit Activity\n                    </CDropdownToggle>\n                    <CDropdownMenu size=\"sm\">\n                      <CDropdownItem header>\n                        Edit Registration and Cash Collateral\n                      </CDropdownItem>\n                      {checkRegFee && (\n                        <CDropdownItem onClick={() => handleRegShowforEdit(c)}>\n                          Edit Registration Fee\n                        </CDropdownItem>\n                      )}\n                      {checkCashCollateral && (\n                        <CDropdownItem\n                          onClick={() => handleCollateralShowforEdit(c)}\n                        >\n                          Edit Cash Collateral{' '}\n                        </CDropdownItem>\n                      )}\n                    </CDropdownMenu>\n                  </CDropdown>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n\n      <div className=\"m-3\">\n        <div className=\"mb-3\">\n          <CRow>\n            <CCol lg={12}>\n              <CCard className=\"col-sm-12\">\n                <CCardHeader className=\"text-center\">\n                  <p className=\"float-left\">Disbursed Cheques</p>\n                </CCardHeader>\n                <CCardBody>\n                  <div className=\"row mb-3\">\n                    <div className=\"col-sm-4\">\n                      <label>Start Date</label>\n                      <CInput\n                        id=\"startdate\"\n                        type=\"date\"\n                        className=\"form-control text-center\"\n                        aria-label=\"Default select example\"\n                        value={startDate}\n                        onChange={handleStartDateChange}\n                      />\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <label>End Date</label>\n                      <CInput\n                        id=\"enddate\"\n                        type=\"date\"\n                        className=\"form-control text-center\"\n                        aria-label=\"Default select example\"\n                        value={endDate}\n                        onChange={handleEndDateChange}\n                      />\n                    </div>\n                    <div className=\"col-sm-4 text-right\">\n                      Total Amt: <strong>{formatter.format(totalAmt)}</strong>\n                    </div>\n                  </div>\n                  <Table>\n                    <thead>\n                      <tr className=\"fs-sm\">\n                        <th></th>\n                        <th>Customer</th>\n                        <th>Cheque No.</th>\n                        <th>Bank</th>\n                        <th>Date on Cheque</th>\n                        <th>Amount (GHC)</th>\n                        <th>Disbursed By</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {disbursed.map((c, index) => (\n                        <tr key={c.id}>\n                          <td>{index + 1}</td>\n                          <td>{c.fullName}</td>\n                          <td>{c.chequeNumber}</td>\n                          <td>{c.bank}</td>\n                          <td>{c.dateOnCheque}</td>\n                          <td>\n                            {c.amount.toLocaleString(undefined, {\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            })}\n                          </td>\n                          <td>{c.disbursedBy}</td>\n                          {c.status === 'Not Submitted' ? (\n                            <td>\n                              <CButton\n                                className=\"btn-sm\"\n                                color=\"success\"\n                                onClick={null}\n                              >\n                                remove\n                              </CButton>\n                            </td>\n                          ) : null}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </CCardBody>\n              </CCard>\n              {/*<CButton\n                className=\"float-right m-3 col-sm-2 btn-sm\"\n                color=\"success\"\n                onClick={() => window.print()}\n              >\n                Print Page\n             </CButton>*/}\n              <CButton\n                className=\"float-right m-3 col-sm-2 btn-sm\"\n                color=\"warning\"\n                onClick={() =>\n                  openCustomerListAsReport(\n                    reportUrl +\n                      '/disbursedCheques.aspx?' +\n                      startDate +\n                      '?' +\n                      endDate,\n                  )\n                }\n              >\n                View As Report\n              </CButton>\n            </CCol>\n          </CRow>\n        </div>\n      </div>\n\n      <CModal\n        className=\"modal fade col-sm-10\"\n        size=\"lg\"\n        show={show}\n        color=\"success\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setShow(!show)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <p>\n            <h3 className=\"centertext\">Disburse Cheque</h3>\n          </p>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <div class=\"mb-3 row\">\n            <CLabel\n              htmlFor=\"nameOfCustomer\"\n              className=\"col-sm-3 col-form-label\"\n            >\n              Name of Customer\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                className=\"form-control-xl mb-2 mt-2 text-center input-lg\"\n                value={data.nameOnCheque}\n                readOnly\n                //onChange={handleCustomerSelected}\n              />\n              {/*<CInput\n                type=\"text\"\n                class=\"form-control\"\n                id=\"nameOfCustomer\"\n                value={disburseData.nameOnCheque}\n                autoComplete=\"off\"\n                onChange={(e) =>\n                  setdisburseData({\n                    ...disburseData,\n                    nameOnCheque: e.currentTarget.value,\n                    issuedBy: user.id,\n                  })\n                }\n              />*/}\n            </div>\n          </div>\n\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"bank\" className=\"col-sm-3 col-form-label\">\n              Bank\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"bank\"\n                className=\"form-control text-center\"\n                aria-label=\"Default select example\"\n                value={data.bank}\n                readOnly\n              />\n            </div>\n          </div>\n\n          <div class=\"mb-3 row\">\n            <CLabel for=\"bankAccount\" class=\"col-sm-3 col-form-label\">\n              Bank Account\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"bankAccount\"\n                className=\"form-control text-center\"\n                aria-label=\"Default select example\"\n                value={data.bankAccount}\n                readOnly\n              />\n            </div>\n          </div>\n\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"dateOnCheque\" className=\"col-sm-3 col-form-label\">\n              Date on Cheque\n            </CLabel>\n            <div className=\"col-sm-8\">\n              <CInput\n                type=\"text\"\n                className=\"form-control text-center\"\n                id=\"dateOnCheque\"\n                value={data.dateOnCheque}\n                readOnly\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <CLabel htmlFor=\"chequeNumber\" className=\"col-sm-3 col-form-label\">\n              Cheque No.\n            </CLabel>\n            <div className=\"col-sm-8\">\n              <CInput\n                type=\"text\"\n                className=\"form-control text-center\"\n                id=\"chequeNumber\"\n                value={data.chequeNumber}\n                readOnly\n              />\n            </div>\n          </div>\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n              Amount (GHS)\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"amount\"\n                className=\"form-control text-right bold\"\n                type=\"text\"\n                value={data.amount}\n                readOnly\n              />\n            </div>\n          </div>\n        </CModalBody>\n\n        <CModalFooter>\n          <div className=\"justify-content-center\">\n            <CButton onClick={handleSubmit} className=\"m-3\" color=\"success\">\n              Submit\n            </CButton>\n            <CButton\n              onClick={() => setShow(!show)}\n              className=\"m-3\"\n              color=\"danger\"\n            >\n              Close\n            </CButton>\n          </div>\n        </CModalFooter>\n      </CModal>\n\n      {/*REGISTRATION FEE*/}\n      <CModal\n        className=\"modal fade col-sm-12\"\n        size=\"lg\"\n        show={regShow}\n        color=\"warning\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setRegShow(!regShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <p>\n            <h3 className=\"centertext\">Collect Registration Fee</h3>\n          </p>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <div class=\"mb-3 row\">\n            <CLabel\n              htmlFor=\"nameOfCustomer\"\n              className=\"col-sm-3 col-form-label\"\n            >\n              Name of Customer\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                className=\"form-control-xl mb-2 mt-2 text-right input-lg\"\n                value={data.nameOnCheque}\n                readOnly\n                //onChange={handleCustomerSelected}\n              />\n              {/*<CInput\n                type=\"text\"\n                class=\"form-control\"\n                id=\"nameOfCustomer\"\n                value={disburseData.nameOnCheque}\n                autoComplete=\"off\"\n                onChange={(e) =>\n                  setdisburseData({\n                    ...disburseData,\n                    nameOnCheque: e.currentTarget.value,\n                    issuedBy: user.id,\n                  })\n                }\n              />*/}\n            </div>\n          </div>\n\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"bank\" className=\"col-sm-3 col-form-label\">\n              Bank\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"bank\"\n                className=\"form-control text-center\"\n                aria-label=\"Default select example\"\n                value={data.bank}\n                onChange={null}\n                readOnly\n              />\n            </div>\n          </div>\n\n          <div class=\"mb-3 row\">\n            <CLabel for=\"bankAccount\" class=\"col-sm-3 col-form-label\">\n              Bank Account\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"bankAccount\"\n                className=\"form-control text-center\"\n                aria-label=\"Default select example\"\n                value={data.bankAccount}\n                readOnly\n              />\n            </div>\n          </div>\n\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"dateOnCheque\" className=\"col-sm-3 col-form-label\">\n              Date on Cheque\n            </CLabel>\n            <div className=\"col-sm-8\">\n              <CInput\n                type=\"text\"\n                className=\"form-control text-center\"\n                id=\"dateOnCheque\"\n                value={data.dateOnCheque}\n                readOnly\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <CLabel htmlFor=\"chequeNumber\" className=\"col-sm-3 col-form-label\">\n              Cheque No.\n            </CLabel>\n            <div className=\"col-sm-8\">\n              <CInput\n                type=\"text\"\n                className=\"form-control text-center\"\n                id=\"chequeNumber\"\n                value={data.chequeNumber}\n                readOnly\n              />\n            </div>\n          </div>\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n              Cheque Amount (GHS)\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"amount\"\n                className=\"form-control text-center \"\n                type=\"text\"\n                readOnly\n                value={data.amount}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n              Mode Payment *\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CSelect\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n                value={regFeeData.modeOfPayment}\n                onChange={(e) =>\n                  setRegFeeData({\n                    ...regFeeData,\n                    modeOfPayment: e.currentTarget.value,\n                  })\n                }\n              >\n                <option defaultValue=\"\"></option>\n                <option value=\"Cash\">Cash</option>\n                <option value=\"MoMo\">MoMo</option>\n              </CSelect>\n            </div>\n          </div>\n\n          {regFeeData.modeOfPayment === 'MoMo' && (\n            <div className=\"mb-3 row\">\n              <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n                Sending (MoMo Number)\n              </CLabel>\n              <div className=\"col-sm-8\">\n                <CInput\n                  id=\"sending\"\n                  className=\"form-control text-center bold mb-3\"\n                  type=\"text\"\n                  value={regFeeData.sending}\n                  onChange={(e) =>\n                    setRegFeeData({\n                      ...regFeeData,\n                      sending: e.currentTarget.value,\n                    })\n                  }\n                />\n              </div>\n\n              <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n                Receiving (MoMo Number)\n              </CLabel>\n              <div className=\"col-sm-8\">\n                <CInput\n                  id=\"receiving\"\n                  className=\"form-control text-center bold\"\n                  type=\"text\"\n                  value={regFeeData.receiving}\n                  onChange={(e) =>\n                    setRegFeeData({\n                      ...regFeeData,\n                      receiving: e.currentTarget.value,\n                    })\n                  }\n                />\n              </div>\n            </div>\n          )}\n\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n              Registration Fee (GHS)\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"amount\"\n                className=\"form-control text-center bold\"\n                type=\"text\"\n                value={regFeeData.amount}\n                onChange={handleRegFeeChange}\n              />\n            </div>\n          </div>\n        </CModalBody>\n\n        <CModalFooter>\n          <div className=\"justify-content-center\">\n            <CButton\n              onClick={editMode ? handleRegFeeEdit : handleRegFeeSubmit}\n              className=\"m-3\"\n              color=\"success\"\n            >\n              Submit\n            </CButton>\n            <CButton\n              onClick={() => {\n                setRegFeeData({\n                  amount: 0,\n                  modeOfPayment: '',\n                  id: 0,\n                })\n                setRegShow(!regShow)\n              }}\n              className=\"m-3\"\n              color=\"danger\"\n            >\n              Close\n            </CButton>\n          </div>\n        </CModalFooter>\n      </CModal>\n\n      {/*Cash Collateral*/}\n      <CModal\n        className=\"modal fade col-sm-10\"\n        size=\"lg\"\n        show={colShow}\n        color=\"info\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setColShow(!colShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <p>\n            <h3 className=\"centertext\">Collect Cash Collateral</h3>\n          </p>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <div class=\"mb-3 row\">\n            <CLabel\n              htmlFor=\"nameOfCustomer\"\n              className=\"col-sm-3 col-form-label\"\n            >\n              Name of Customer\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                className=\"form-control-xl mb-2 mt-2 text-center\"\n                value={data.nameOnCheque}\n                readOnly\n                //onChange={handleCustomerSelected}\n              />\n            </div>\n          </div>\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"bank\" className=\"col-sm-3 col-form-label\">\n              Bank\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"bank\"\n                className=\"form-control text-center\"\n                aria-label=\"Default select example\"\n                readOnly\n                value={data.bank}\n                onChange={null}\n              />\n            </div>\n          </div>\n          <div class=\"mb-3 row\">\n            <CLabel for=\"bankAccount\" class=\"col-sm-3 col-form-label\">\n              Bank Account\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"bankAccount\"\n                className=\"form-control text-center\"\n                aria-label=\"Default select example\"\n                readOnly\n                value={data.bankAccount}\n              />\n            </div>\n          </div>\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"dateOnCheque\" className=\"col-sm-3 col-form-label\">\n              Date on Cheque\n            </CLabel>\n            <div className=\"col-sm-8\">\n              <CInput\n                type=\"text\"\n                className=\"form-control text-center\"\n                readOnly\n                id=\"dateOnCheque\"\n                value={data.dateOnCheque}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <CLabel htmlFor=\"chequeNumber\" className=\"col-sm-3 col-form-label\">\n              Cheque No.\n            </CLabel>\n            <div className=\"col-sm-8\">\n              <CInput\n                type=\"text\"\n                className=\"form-control text-center\"\n                readOnly\n                id=\"chequeNumber\"\n                value={data.chequeNumber}\n              />\n            </div>\n          </div>\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n              Amount (GHS)\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"amount\"\n                className=\"form-control text-center bold\"\n                type=\"text\"\n                readOnly\n                value={data.amount}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n              Mode Payment *\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CSelect\n                className=\"form-select text-center\"\n                aria-label=\"Default select example\"\n                value={cashCollateralData.modeOfPayment}\n                onChange={(e) =>\n                  setCashCollateralData({\n                    ...cashCollateralData,\n                    modeOfPayment: e.currentTarget.value,\n                  })\n                }\n              >\n                <option defaultValue=\"\"></option>\n                <option value=\"Cash\">Cash</option>\n                <option value=\"MoMo\">MoMo</option>\n                <option value=\"Withdrawal\">Withdrawal</option>\n              </CSelect>\n            </div>\n          </div>\n          {cashCollateralData.modeOfPayment === 'MoMo' && (\n            <div className=\"mb-3 row\">\n              <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n                Sending (MoMo Number)\n              </CLabel>\n              <div className=\"col-sm-8\">\n                <CInput\n                  id=\"sending\"\n                  className=\"form-control text-center bold mb-3\"\n                  type=\"text\"\n                  value={cashCollateralData.sending}\n                  onChange={(e) =>\n                    setCashCollateralData({\n                      ...cashCollateralData,\n                      sending: e.currentTarget.value,\n                    })\n                  }\n                />\n              </div>\n\n              <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n                Receiving (MoMo Number)\n              </CLabel>\n              <div className=\"col-sm-8\">\n                <CInput\n                  id=\"receiving\"\n                  className=\"form-control text-center bold\"\n                  type=\"text\"\n                  value={cashCollateralData.receiving}\n                  onChange={(e) =>\n                    setCashCollateralData({\n                      ...cashCollateralData,\n                      receiving: e.currentTarget.value,\n                    })\n                  }\n                />\n              </div>\n            </div>\n          )}\n          <div class=\"mb-3 row\">\n            <CLabel htmlFor=\"amount\" className=\"col-sm-3\">\n              Cash Collateral (GHS)\n            </CLabel>\n            <div class=\"col-sm-8\">\n              <CInput\n                id=\"amount\"\n                className=\"form-control text-center bold\"\n                type=\"text\"\n                value={cashCollateralData.amount}\n                onChange={handleCashCollateralChange}\n              />\n            </div>\n          </div>\n        </CModalBody>\n\n        <CModalFooter>\n          <div className=\"justify-content-center\">\n            <CButton\n              onClick={\n                editMode ? handleCashCollateralEdit : handleCashCollateralSubmit\n              }\n              className=\"m-3\"\n              color=\"success\"\n            >\n              Submit\n            </CButton>\n            <CButton\n              onClick={() => {\n                setColShow(!colShow)\n                setCashCollateralData({\n                  amount: 0,\n                  modeOfPayment: '',\n                })\n              }}\n              className=\"m-3\"\n              color=\"danger\"\n            >\n              Close\n            </CButton>\n          </div>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default Disbursement\n"],"sourceRoot":""}