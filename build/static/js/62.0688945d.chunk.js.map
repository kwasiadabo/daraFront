{"version":3,"sources":["views/pages/changePassword.jsx"],"names":["ChangePassword","navigate","useHistory","user","auth","getCurrentUser","useState","username","password","userAccount","setUserAccount","handleSubmit","e","a","console","log","preventDefault","axios","put","apiUrl","id","status","Swal","fire","push","className","htmlFor","type","value","nameOfStaff","aria-label","userRole","branch","onChange","target","confirmPassword","color","onClick"],"mappings":"qUA4LeA,UA/IQ,WAEtB,IAAMC,EAAWC,cACXC,EAAOC,IAAKC,iBAHU,EAKUC,mBAAS,CAC9CC,SAAU,GACVC,SAAU,KAPiB,mBAKrBC,EALqB,KAKRC,EALQ,KAUtBC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACpBC,QAAQC,IAAIN,GACZK,QAAQC,IAAIZ,GACZS,EAAEI,iBAHkB,kBAKGC,IAAMC,IAAIC,SAAS,eAAiBhB,EAAKiB,GAAK,IAAK,CACxEZ,SAAUC,EAAYD,WANJ,UASI,MATJ,OASPa,OATO,0CAUXC,IAAKC,KAAK,OAAQ,eAAgB,UAVvB,QAYlBD,IAAKC,KAAK,gCAAiC,WAC3Cb,EAAe,CACdH,SAAU,GACVC,SAAU,KAEXP,EAASuB,KAAK,SAjBI,0DAoBnBF,IAAKC,KAAK,eAAiB,SApBR,0DAAH,sDAsClB,OACC,yBAAKE,UAAU,aACd,wBAAIA,UAAU,cAAd,wBACA,uBAAGA,UAAU,UAAb,8NAOA,yBAAKA,UAAU,YACd,2BAAOC,QAAQ,cAAcD,UAAU,YAAvC,YAGA,kBAAC,IAAD,CACCE,KAAK,OACLF,UAAU,WACVL,GAAG,cACHQ,MAAOzB,EAAK0B,eAGd,yBAAKJ,UAAU,YACd,2BAAOC,QAAQ,WAAWD,UAAU,aAApC,YAGA,kBAAC,IAAD,CACCE,KAAK,OACLF,UAAU,WACVL,GAAG,WACHQ,MAAOzB,EAAKI,YAGd,yBAAKkB,UAAU,YACd,2BAAOC,QAAQ,SAASD,UAAU,YAAlC,aAGA,kBAAC,IAAD,CACCE,KAAK,OACLF,UAAU,WACVK,aAAW,yBACXF,MAAOzB,EAAK4B,YAGd,yBAAKN,UAAU,YACd,2BAAOC,QAAQ,SAASD,UAAU,YAAlC,UAGA,kBAAC,IAAD,CACCE,KAAK,OACLF,UAAU,WACVK,aAAW,yBACXF,MAAOzB,EAAK6B,UAGd,yBAAKP,UAAU,YACd,2BAAOC,QAAQ,WAAWD,UAAU,YAApC,gBAGA,kBAAC,IAAD,CACCE,KAAK,WACLF,UAAU,WACVG,MAAOnB,EAAYD,SACnByB,SAAU,SAACrB,GAAD,OACTF,EAAe,2BAAKD,GAAN,IAAmBD,SAAUI,EAAEsB,OAAON,aAIvD,yBAAKH,UAAU,YACd,2BAAOC,QAAQ,kBAAkBD,UAAU,YAA3C,oBAGA,kBAAC,IAAD,CACCE,KAAK,WACLF,UAAU,WACVG,MAAOnB,EAAY0B,gBACnBF,SAAU,SAACrB,GAAD,OACTF,EAAe,2BACXD,GADU,IAEb0B,gBAAiBvB,EAAEsB,OAAON,aAM9B,kBAAC,IAAD,CACCH,UAAU,mCACVW,MAAM,SACNC,QAAS1B,GAHV","file":"static/js/62.0688945d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport auth from '../../components/services/authService';\nimport { useHistory } from 'react-router-dom';\nimport { apiUrl } from '../../config.json';\n\nimport {\n\tCBadge,\n\tCCard,\n\tCCardBody,\n\t//CCardHeader,\n\tCCol,\n\tCDataTable,\n\tCRow,\n\tCButton,\n\tCModal,\n\tCModalFooter,\n\tCModalHeader,\n\tCModalBody,\n\tCCardHeader,\n\tCInputGroupAppend,\n\tCInputGroupPrepend,\n\tCDropdownItem,\n\tCForm,\n\t//CCardFooter,\n\tCDropdownToggle,\n\t//CInputRadio,\n\tCDropdown,\n\tCDropdownDivider,\n\tCModalTitle,\n\t//CFormText,\n\t//CTextarea,\n\tCFormGroup,\n\tCLabel,\n\t// CSwitch,\n\tCInput,\n\t//CInputFile,\n\tCSelect,\n\tCDropdownMenu,\n\t//CCardFooter,\n\tCInputGroup,\n\t//CForm,\n} from '@coreui/react';\nconst ChangePassword = () => {\n\t//const { addToast } = useToasts()\n\tconst navigate = useHistory();\n\tconst user = auth.getCurrentUser();\n\n\tconst [userAccount, setUserAccount] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t});\n\n\tconst handleSubmit = async (e) => {\n\t\tconsole.log(userAccount);\n\t\tconsole.log(user);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst results = await axios.put(apiUrl + '/setup/user/' + user.id + '/', {\n\t\t\t\tpassword: userAccount.password,\n\t\t\t});\n\n\t\t\tif (results.status !== 200) {\n\t\t\t\treturn Swal.fire('OOPS', 'Unsuccessful', 'error');\n\t\t\t} else {\n\t\t\t\tSwal.fire('Password Changed Successfully', 'success');\n\t\t\t\tsetUserAccount({\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t});\n\t\t\t\tnavigate.push('/home');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tSwal.fire('OOPS ! ' + err, 'error');\n\t\t}\n\t};\n\n\tfunction genPassword() {\n\t\tlet chars = '123456789abcdefghijklmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ';\n\t\tlet passwordLength = 8;\n\t\tlet tempPassword = '';\n\t\tfor (let i = 0; i <= passwordLength; i++) {\n\t\t\tlet randomNumber = Math.floor(Math.random() * chars.length);\n\t\t\ttempPassword += chars.substring(randomNumber, randomNumber + 1);\n\t\t}\n\t\tsetUserAccount({\n\t\t\t...userAccount,\n\t\t\tpassword: tempPassword,\n\t\t\tconfirmPassword: tempPassword,\n\t\t});\n\t}\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1 className=\"centertext\">Change User Password</h1>\n\t\t\t<p className=\"staffp\">\n\t\t\t\tA user account is an established technique for connecting a user and an\n\t\t\t\tinformation service and/or computer network. User accounts determine\n\t\t\t\twhether or not a user can connect to a computer, network or similar\n\t\t\t\tnetworks.\n\t\t\t</p>\n\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<label htmlFor=\"nameOfStaff\" className=\"col-sm-3\">\n\t\t\t\t\tFullName\n\t\t\t\t</label>\n\t\t\t\t<CInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"col-sm-6\"\n\t\t\t\t\tid=\"nameOfStaff\"\n\t\t\t\t\tvalue={user.nameOfStaff}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<label htmlFor=\"username\" className=\" col-sm-3\">\n\t\t\t\t\tUsername\n\t\t\t\t</label>\n\t\t\t\t<CInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"col-sm-6\"\n\t\t\t\t\tid=\"username\"\n\t\t\t\t\tvalue={user.username}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<label htmlFor=\"gender\" className=\"col-sm-3\">\n\t\t\t\t\tUser Role\n\t\t\t\t</label>\n\t\t\t\t<CInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"col-sm-6\"\n\t\t\t\t\taria-label=\"Default select example\"\n\t\t\t\t\tvalue={user.userRole}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<label htmlFor=\"branch\" className=\"col-sm-3\">\n\t\t\t\t\tBranch\n\t\t\t\t</label>\n\t\t\t\t<CInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"col-sm-6\"\n\t\t\t\t\taria-label=\"Default select example\"\n\t\t\t\t\tvalue={user.branch}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<label htmlFor=\"password\" className=\"col-sm-3\">\n\t\t\t\t\tNew Password\n\t\t\t\t</label>\n\t\t\t\t<CInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tclassName=\"col-sm-6\"\n\t\t\t\t\tvalue={userAccount.password}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetUserAccount({ ...userAccount, password: e.target.value })\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<label htmlFor=\"confirmpassword\" className=\"col-sm-3\">\n\t\t\t\t\tConfirm Password\n\t\t\t\t</label>\n\t\t\t\t<CInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tclassName=\"col-sm-6\"\n\t\t\t\t\tvalue={userAccount.confirmPassword}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetUserAccount({\n\t\t\t\t\t\t\t...userAccount,\n\t\t\t\t\t\t\tconfirmPassword: e.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<CButton\n\t\t\t\tclassName=\"btn-sm col-sm-3 mt-3 float-right\"\n\t\t\t\tcolor=\"danger\"\n\t\t\t\tonClick={handleSubmit}\n\t\t\t>\n\t\t\t\tSubmit\n\t\t\t</CButton>\n\t\t</div>\n\t);\n};\n\nexport default ChangePassword;\n"],"sourceRoot":""}