{"version":3,"sources":["views/pages/products.jsx"],"names":["ProductSetup","useState","allProducts","setAllProducts","render","setRender","editMode","setEditMode","product","processingFee","frequency","interestRate","registrationFee","duration","shortName","cashCollateral","products","setProducts","schemaMap","Joi","string","required","label","number","id","allow","schema","object","validateForm","result","validate","error","details","message","handleSubmit","e","a","console","log","preventDefault","Swal","fire","axios","post","baseUrl","apiUrl","status","fixation","allowedAmount","useEffect","get","results","data","getProducts","handleUpdate","put","className","for","autoComplete","type","value","onChange","currentTarget","selected","htmlFor","pattern","onClick","class","map","c","index","key","_id","p","Style"],"mappings":"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","file":"static/js/80.59f84ee7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate, useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport baseUrl from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Badge,\n} from 'reactstrap'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nimport Swal from 'sweetalert2'\n\nconst ProductSetup = () => {\n  const [allProducts, setAllProducts] = useState([])\n  const [disabled, setDisabled] = useState(false)\n  const [render, setRender] = useState(false)\n  const [editMode, setEditMode] = useState(false)\n\n  const [products, setProducts] = useState({\n    product: '',\n    processingFee: '',\n    frequency: '',\n    interestRate: '',\n    registrationFee: '',\n    duration: '',\n    shortName: '',\n    //fixation: '',\n    // allowedAmount: 0,\n    cashCollateral: 0,\n  })\n  const schemaMap = {\n    product: Joi.string().required().label('Product Field'),\n    processingFee: Joi.number().required().label('Processing Fee Field'),\n\n    frequency: Joi.string().required().label('Frequency Field'),\n    interestRate: Joi.number().required().label('Interest Rate Field'),\n\n    registrationFee: Joi.number().required().label('Registration Fee Field'),\n    duration: Joi.number().required().label('duration Field'),\n    //fixation: Joi.string().allow('').label('Fixation Field'),\n    //allowedAmount: Joi.number().allow('').label('Allowed Amount'),\n    cashCollateral: Joi.number().required().label('Cash Collateral'),\n    id: Joi.string().allow('').label('ID'),\n    shortName: Joi.string().allow(''),\n  }\n\n  const schema = Joi.object(schemaMap)\n  const validateForm = () => {\n    const result = Joi.validate(products, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    console.log(products)\n    e.preventDefault()\n    setEditMode(false)\n    try {\n      const validate = validateForm()\n      if (validate !== null) {\n        return Swal.fire('error', validate, 'error')\n      }\n      const results = await axios.post(\n        baseUrl.apiUrl + '/setup/product',\n        products,\n      )\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPS !',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire('Success', 'Product Saved Successfully', 'success')\n        setProducts({\n          product: '',\n          processingFee: '',\n          frequency: '',\n          interestRate: '',\n          registrationFee: '',\n          duration: '',\n          fixation: '',\n          allowedAmount: 0,\n          cashCollateral: 0,\n          shortName: '',\n        })\n        setRender(!render)\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ' + err.message, 'error')\n    }\n  }\n  useEffect(() => {\n    async function getProducts() {\n      const results = await axios.get(baseUrl.apiUrl + '/setup/product')\n      setAllProducts(results.data)\n      setEditMode(false)\n    }\n    getProducts()\n  }, [render])\n\n  const handleOnEdit = (p) => {\n    setEditMode(true)\n    setProducts({\n      product: p.product,\n      processingFee: p.processingFee,\n      frequency: p.frequency,\n      interestRate: p.interestRate,\n      registrationFee: p.registrationFee,\n      duration: p.duration,\n      cashCollateral: p.cashCollateral,\n      shortName: p.shortName,\n      id: p.id,\n    })\n    //setDisabled(!disabled);\n  }\n  const handleUpdate = async (e) => {\n    e.preventDefault()\n\n    if (products.product !== '') {\n      try {\n        const results = await axios.put(\n          baseUrl.apiUrl + '/setup/product',\n          products,\n        )\n        if (results.status !== 200) {\n          return Swal.fire(\n            'OOPS !',\n            'Submission Failed ! Check Entries and try again !',\n            'error',\n          )\n        } else {\n          Swal.fire('Success', 'Product Updated Successfully', 'success')\n          setProducts({\n            product: '',\n            processingFee: '',\n            frequency: '',\n            interestRate: '',\n            registrationFee: '',\n            duration: '',\n            fixation: '',\n            allowedAmount: 0,\n            cashCollateral: 0,\n            shortName: '',\n            id: '',\n          })\n          setRender(!render)\n        }\n      } catch (err) {\n        Swal.fire('OOPS ! ' + err.message, 'error')\n      }\n    } else {\n      return Swal.fire('OOPS', 'Enter all Details !', 'error')\n    }\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"centertext mt-5\">Setup Products</h1>\n      <p className=\"staffp\">\n        Setup all products you deal in. Your products brings in the income,\n        capture all details about them.\n      </p>\n      <CForm className=\"row g-3 m-5\">\n        <CInputGroup className=\"mt-3\">\n          <CLabel for=\"product\" className=\"col-sm-3\">\n            Product Name\n          </CLabel>\n          <CInput\n            autoComplete=\"off\"\n            type=\"text\"\n            className=\"col-sm-8\"\n            id=\"product\"\n            value={products.product}\n            onChange={(e) =>\n              setProducts({ ...products, product: e.currentTarget.value })\n            }\n          />\n        </CInputGroup>\n\n        <CInputGroup className=\"mt-3\">\n          <CLabel for=\"shortName\" className=\"col-sm-3\">\n            Short Name\n          </CLabel>\n          <CInput\n            autoComplete=\"off\"\n            type=\"text\"\n            className=\"col-sm-4\"\n            id=\"shortName\"\n            value={products.shortName}\n            onChange={(e) =>\n              setProducts({ ...products, shortName: e.currentTarget.value })\n            }\n          />\n        </CInputGroup>\n        <CInputGroup className=\"mt-3\">\n          <CLabel for=\"processingFee\" className=\"col-sm-3\">\n            Proc. Fee (%)\n          </CLabel>\n          <CInput\n            autoComplete=\"off\"\n            type=\"text\"\n            className=\"col-sm-8\"\n            id=\"processingFee\"\n            value={products.processingFee}\n            onChange={(e) =>\n              setProducts({\n                ...products,\n                processingFee: e.currentTarget.value,\n              })\n            }\n          />\n        </CInputGroup>\n        <CInputGroup className=\"mt-3\">\n          <CLabel for=\"frequency\" className=\"col-sm-3\">\n            Repayment Frequency\n          </CLabel>\n          <CSelect\n            id=\"frequency\"\n            className=\"form-select col-sm-8\"\n            value={products.frequency}\n            onChange={(e) =>\n              setProducts({ ...products, frequency: e.currentTarget.value })\n            }\n          >\n            <option selected>Choose...</option>\n            <option value=\"Daily\">Daily</option>\n            <option value=\"Weekly\">Weekly</option>\n            <option value=\"Bi Weekly\">Bi Weekly</option>\n            <option value=\"Monthly\"> Monthly</option>\n          </CSelect>\n        </CInputGroup>\n        <CInputGroup className=\"mt-3\">\n          <CLabel for=\"minInterest\" className=\"col-sm-3\">\n            Interest Rate (%)\n          </CLabel>\n          <CInput\n            autoComplete=\"off\"\n            type=\"text\"\n            className=\"form-control-md col-sm-8\"\n            id=\"minInterest\"\n            value={products.interestRate}\n            onChange={(e) =>\n              setProducts({\n                ...products,\n                interestRate: e.currentTarget.value,\n              })\n            }\n          />\n        </CInputGroup>\n        <CInputGroup className=\"mt-3\">\n          <CLabel for=\"registrationFee\" className=\"col-sm-3\">\n            Reg. Fee (GHC)\n          </CLabel>\n          <CInput\n            autoComplete=\"off\"\n            type=\"text\"\n            className=\"form-control-md col-sm-8\"\n            id=\"registrationFee\"\n            value={products.registrationFee}\n            onChange={(e) =>\n              setProducts({\n                ...products,\n                registrationFee: e.currentTarget.value,\n              })\n            }\n          />\n        </CInputGroup>\n        <CInputGroup className=\"mt-3\">\n          <CLabel for=\"duration\" className=\"col-sm-3\">\n            Duration (Days)\n          </CLabel>\n          <CInput\n            autoComplete=\"off\"\n            type=\"text\"\n            className=\"form-control-md col-sm-8\"\n            id=\"duration\"\n            value={products.duration}\n            onChange={(e) =>\n              setProducts({ ...products, duration: e.currentTarget.value })\n            }\n          />\n        </CInputGroup>\n\n        <CInputGroup className=\"mt-3\">\n          <CLabel htmlFor=\"cashCollateral\" className=\"col-sm-3\">\n            Cash Collateral (%)\n          </CLabel>\n          <CInput\n            autoComplete=\"off\"\n            type=\"number\"\n            pattern=\"([0-9]{1,3}).([0-9]{1,3})\"\n            className=\"form-control-md col-sm-8\"\n            id=\"cashCollateral\"\n            value={products.cashCollateral}\n            onChange={(e) =>\n              setProducts({\n                ...products,\n                cashCollateral: e.currentTarget.value,\n              })\n            }\n          />\n        </CInputGroup>\n\n        <div className=\"row\">\n          {!editMode ? (\n            <CButton\n              type=\"submit\"\n              className=\"btn btn-danger mt-5\"\n              onClick={handleSubmit}\n            >\n              Save Product\n            </CButton>\n          ) : null}\n          {editMode ? (\n            <CButton\n              type=\"submit\"\n              class=\"btn btn-success mt-5 ms-5\"\n              onClick={handleUpdate}\n            >\n              Edit Product\n            </CButton>\n          ) : null}\n        </div>\n      </CForm>\n\n      <Table className=\"sm table-sm\">\n        <caption>Click on any product details to update</caption>\n        <thead>\n          <tr className=\"fs-sm\">\n            <th></th>\n            <th>Product Name</th>\n            <th>Short Name</th>\n            <th>Proc. Fee(%)</th>\n            <th>Frequency</th>\n            <th>Interest Rate (%)</th>\n            <th>Reg. Fee</th>\n            <th>Duration</th>\n            <th>Cash Collateral (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {allProducts.map((c, index) => (\n            <tr\n              key={c._id}\n              onClick={() => handleOnEdit(c)}\n              Style=\"cursor: pointer;\"\n            >\n              <td>{index + 1}</td>\n              <td>{c.product}</td>\n              <td>{c.shortName}</td>\n              <td>{c.processingFee}</td>\n              <td>{c.frequency}</td>\n              <td>{c.interestRate}</td>\n              <td>{c.registrationFee}</td>\n              <td>{c.duration}</td>\n              <td>{c.cashCollateral}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default ProductSetup\n"],"sourceRoot":""}