{"version":3,"sources":["views/pages/loanBooking.jsx"],"names":["LoanBooking","useState","render","productShow","setProductShow","registrationFees","setRegistrationFees","disbursed","setDisbursed","cashCollateral","setCashCollateral","disbursementId","disbursedBy","amount","customer","disburseData","setDisburseData","checkEntry","setCheckEntry","principalShow","setPrincipalShow","guarantorsShow","setGuarantorsShow","guarantorTwoShow","setGuarantorTwoShow","businessDetailsShow","setBusinessDetailsShow","directionsShow","setDirectionsShow","setCheckFirstGuarantorEntry","setCheckSecondGuarantorEntry","selectedLoan","setSelectedLoan","chequeId","modeOfPayment","Date","checkingProduct","setCheckingProduct","checkingPrincipal","setCheckingPrincipal","checkingFirstGuarantor","setCheckingFirstGuarantor","checkingSecondGuarantor","setCheckingSecondGuarantor","navigate","useHistory","formatter","auth","getCurrentUser","Intl","NumberFormat","style","currency","useEffect","a","axios","get","apiUrl","results","data","console","log","getDisbursedCheques","getRegistrationFees","getCashCollateral","handleActivitiesDropdown","s","productResults","product","principalCheck","firstGuarantorCheck","secondGuarantorCheck","principalResults","principal","firstGuarantorResults","firstGuarantor","secondGuarantorResults","secondGuarantor","handleProductSelected","collateralAmount","handlePrincipalEntryShow","handleGuarantorsEntryShow","length","handleGuarantorTwoEntryShow","handleDelete","Swal","fire","title","html","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","delete","status","isDenied","className","lg","placeholder","map","c","index","key","id","fullName","bank","moment","disburseDate","format","chequeNumber","color","size","onClick","push","booked","show","data-backdrop","data-keyboard","onClose","closeButton","disbursedAmount"],"mappings":"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","file":"static/js/73.a95178c0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Link, useNavigate, Navigate, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport BookProduct from './bookProduct'\nimport LoanPrincipal from './loanPrincipalEntry'\nimport Guarantors from './guarantors'\nimport GuarantorTwo from './guarantorTwo'\nimport BusinessDetails from './businessDetails'\nimport Directions from './directions'\nimport AdaboSelect from 'react-select'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst LoanBooking = () => {\n  const [show, setShow] = useState(false)\n  const [render, setRender] = useState(false)\n  const [data, setData] = useState({})\n  const [regShow, setRegShow] = useState(false)\n  const [productShow, setProductShow] = useState(false)\n  const [issuedCheques, setIssuedCheques] = useState([])\n  const [registrationFees, setRegistrationFees] = useState([])\n  const [disbursed, setDisbursed] = useState([])\n  const [cashCollateral, setCashCollateral] = useState([])\n  const [disburseData, setDisburseData] = useState({\n    disbursementId: 0,\n    disbursedBy: 0,\n    amount: '',\n    customer: 0,\n    cashCollateral: 0,\n  })\n  const [checkEntry, setCheckEntry] = useState([])\n  const [checkProduct, setCheckProduct] = useState({})\n  const [checkPrincipal, setCheckPrincipal] = useState({})\n  const [principalShow, setPrincipalShow] = useState(false)\n  const [guarantorsShow, setGuarantorsShow] = useState(false)\n  const [guarantorTwoShow, setGuarantorTwoShow] = useState(false)\n  const [businessDetailsShow, setBusinessDetailsShow] = useState(false)\n  const [directionsShow, setDirectionsShow] = useState(false)\n\n  const [checkProductEntry, setCheckProductEntry] = useState('')\n  const [checkPrincipalEntry, setCheckPrincipalEntry] = useState('')\n  const [checkFirstGuarantorEntry, setCheckFirstGuarantorEntry] = useState('')\n  const [checkSecondGuarantorEntry, setCheckSecondGuarantorEntry] = useState('')\n  const [selectedLoan, setSelectedLoan] = useState({})\n  const [regFeeData, setRegFeeData] = useState({\n    customer: 0,\n    chequeId: 0,\n    modeOfPayment: '',\n    amount: '',\n  })\n  const [startDate, setStartDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n  const [checkingProduct, setCheckingProduct] = useState(0)\n  const [checkingPrincipal, setCheckingPrincipal] = useState(0)\n  const [checkingFirstGuarantor, setCheckingFirstGuarantor] = useState('')\n  const [checkingSecondGuarantor, setCheckingSecondGuarantor] = useState('')\n  const navigate = useHistory()\n  const user = auth.getCurrentUser()\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  useEffect(() => {\n    async function getDisbursedCheques() {\n      const results = await axios.get(apiUrl + '/loan/disburse/unbooked')\n      setDisbursed(results.data)\n      console.log(results.data)\n    }\n    getDisbursedCheques()\n    // console.log(disbursed)\n  }, [render])\n\n  useEffect(() => {\n    async function getRegistrationFees() {\n      const results = await axios.get(apiUrl + '/loan/registrationfee')\n      setRegistrationFees(results.data)\n    }\n    getRegistrationFees()\n  }, [registrationFees, render])\n\n  useEffect(() => {\n    async function getCashCollateral() {\n      const results = await axios.get(apiUrl + '/loan/cashcollateral')\n      setCashCollateral(results.data)\n    }\n    getCashCollateral()\n    //console.log(cashCollateral)\n  }, [cashCollateral, render])\n\n  const handleShow = (s) => {\n    setData(s)\n    setDisburseData({\n      ...disburseData,\n      chequeId: s.id,\n      disbursedBy: user.id,\n      customer: s.customerId,\n      amount: s.amount,\n    })\n    setShow(!show)\n  }\n\n  const handleActivitiesDropdown = async (s) => {\n    const productResults = await axios.get(\n      apiUrl + '/loan/booking/checkproduct/' + s.customer,\n    )\n\n    setSelectedLoan(s)\n\n    productResults.data[0]\n      ? setCheckingProduct(productResults.data[0].product)\n      : setCheckingProduct(null)\n\n    principalCheck(s)\n    firstGuarantorCheck(s)\n    secondGuarantorCheck(s)\n  }\n\n  const principalCheck = async (s) => {\n    const principalResults = await axios.get(\n      apiUrl + '/loan/booking/checkprincipal/' + s.customer,\n    )\n\n    principalResults.data[0]\n      ? setCheckingPrincipal(principalResults.data[0].principal)\n      : setCheckingPrincipal(null)\n  }\n\n  const firstGuarantorCheck = async (s) => {\n    const firstGuarantorResults = await axios.get(\n      apiUrl + '/loan/booking/checkfirstguarantor/' + s.customer,\n    )\n\n    firstGuarantorResults.data[0]\n      ? setCheckingFirstGuarantor(firstGuarantorResults.data[0].firstGuarantor)\n      : setCheckingFirstGuarantor(null)\n  }\n\n  const secondGuarantorCheck = async (s) => {\n    const secondGuarantorResults = await axios.get(\n      apiUrl + '/loan/booking/checksecondguarantor/' + s.customer,\n    )\n\n    secondGuarantorResults.data[0]\n      ? setCheckingSecondGuarantor(\n          secondGuarantorResults.data[0].secondGuarantor,\n        )\n      : setCheckingSecondGuarantor(null)\n  }\n\n  const handleProductSelected = async (s) => {\n    setDisburseData({\n      ...disburseData,\n      disbursementId: s.disbursementId,\n      customer: s.customer,\n      cashCollateral: s.collateralAmount,\n    })\n    setProductShow(!productShow)\n  }\n\n  const handleRegFeeChange = (e) => {\n    setRegFeeData({\n      ...regFeeData,\n      amount: e.currentTarget.value,\n    })\n  }\n\n  const handlePrincipalEntryShow = async (s) => {\n    setDisburseData({\n      ...disburseData,\n      disbursementId: s.disbursementId,\n      customer: s.customer,\n      amount: s.amount,\n    })\n    setPrincipalShow(!principalShow)\n  }\n\n  const handleGuarantorsEntryShow = async (s) => {\n    setDisburseData({\n      ...disburseData,\n      disbursementId: s.disbursementId,\n      customer: s.customer,\n    })\n    setGuarantorsShow(!guarantorsShow)\n    const results = await axios.get(\n      apiUrl + '/loan/booking/check/' + s.customer + '/' + s.disbursementId,\n    )\n    if (results.data.length > 0) {\n      setCheckEntry(results.data)\n      setCheckFirstGuarantorEntry(checkEntry.firstGuarantor)\n    }\n  }\n\n  const handleGuarantorTwoEntryShow = async (s) => {\n    setDisburseData({\n      ...disburseData,\n      disbursementId: s.disbursementId,\n      customer: s.customer,\n    })\n    setGuarantorTwoShow(!guarantorTwoShow)\n    const results = await axios.get(\n      apiUrl + '/loan/booking/check/' + s.customer + '/' + s.disbursementId,\n    )\n    if (results.data.length > 0) {\n      setCheckEntry(results.data)\n      setCheckSecondGuarantorEntry(checkEntry.secondGuarantor)\n    }\n  }\n\n  const handleBusinessEntryShow = (s) => {\n    setDisburseData({\n      ...disburseData,\n      disbursementId: s.disbursementId,\n      customer: s.customer,\n    })\n    setBusinessDetailsShow(!businessDetailsShow)\n  }\n\n  const handleDirectionsShow = (s) => {\n    setDisburseData({\n      ...disburseData,\n      disbursementId: s.disbursementId,\n      customer: s.customer,\n    })\n    setDirectionsShow(!directionsShow)\n  }\n\n  const handleSummary = (s) => {\n    navigate.push('/summary/' + s.customer + '/' + s.disbursementId)\n  }\n\n  const handleViewBookings = () => {\n    navigate.push('/viewbookings')\n  }\n\n  const handleDelete = async (s) => {\n    Swal.fire({\n      title: 'Do you want to Delete Booking?',\n      html:\n        'You are about to remove loan booking entry. You can re-book this loan after removal.',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      denyButtonText: `No`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        try {\n          const results = await axios.delete(\n            apiUrl + '/loan/booking/' + s.disbursementId,\n          )\n          if (results.status !== 200) {\n            return Swal.fire(\n              'OOPs !',\n              'Deletion Failed ! Check Entries and try again !',\n              'error',\n            )\n          } else {\n            Swal.fire(\n              'Good job!',\n              'Loan Booking Deleted Successfully',\n              'success',\n            )\n          }\n        } catch (err) {\n          Swal.fire('OOPS ! ', 'Loan Booking NOT Deleted', 'error')\n        }\n      } else if (result.isDenied) {\n        Swal.fire('Cancelled', '', 'info')\n      }\n    })\n  }\n\n  //const dataTouse = search.length === 0 ? customers : data.scustomers\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center mb-3\">\n        <p className=\"centertext mb-2\">\n          Loan booking activities are to be carried out from here. Select an\n          activity from the list of disbursed cheques and enter the required\n          details.\n        </p>\n      </div>\n      <div className=\"mb-3\">\n        <CRow>\n          <CCol lg={12}>\n            <CCard>\n              <CCardHeader className=\"text-right\">\n                <CInput placeholder=\"Search\" className=\"col-sm-3 float-right\" />\n              </CCardHeader>\n              <h4 className=\"text-center mt-3\">Disbursed Cheques</h4>\n              <CCardBody>\n                <Table className=\"table-sm\">\n                  <caption>Disbursed Loans Not Booked</caption>\n                  <thead>\n                    <tr className=\"fs-sm\">\n                      <th></th>\n                      <th>Name on Cheque</th>\n                      <th>Bank</th>\n                      <th>Date Disbursed</th>\n                      <th>Cheque No.</th>\n                      <th>Amount (GHC)</th>\n                      <th>Status</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {disbursed.map((c, index) => (\n                      <tr key={c.id}>\n                        <td>{index + 1}</td>\n                        <td>{c.fullName}</td>\n                        <td>{c.bank}</td>\n                        <td>{moment(c.disburseDate).format('DD,MMMM,YYYY')}</td>\n                        <td>{c.chequeNumber}</td>\n                        <td>{formatter.format(c.amount)}</td>\n\n                        <td>\n                          <CDropdown className=\"\">\n                            <CDropdownToggle\n                              color=\"info\"\n                              size=\"sm\"\n                              onClick={() => {\n                                handleActivitiesDropdown(c)\n                              }}\n                            >\n                              Activities\n                            </CDropdownToggle>\n                            <CDropdownMenu size=\"sm\">\n                              {!checkingProduct && (\n                                <CDropdownItem\n                                  onClick={() => {\n                                    handleProductSelected(c)\n                                  }}\n                                >\n                                  Loan Product\n                                </CDropdownItem>\n                              )}\n\n                              <CDropdownDivider />\n                              {!checkingPrincipal && (\n                                <CDropdownItem\n                                  onClick={() => {\n                                    handlePrincipalEntryShow(c)\n                                  }}\n                                >\n                                  Principal Details\n                                </CDropdownItem>\n                              )}\n                              <CDropdownDivider />\n                              {!checkingFirstGuarantor && (\n                                <CDropdownItem\n                                  onClick={() => handleGuarantorsEntryShow(c)}\n                                >\n                                  First Guarantor\n                                </CDropdownItem>\n                              )}\n                              <CDropdownDivider />\n\n                              {!checkingSecondGuarantor && (\n                                <CDropdownItem\n                                  onClick={() => handleGuarantorTwoEntryShow(c)}\n                                >\n                                  Second Guarantor\n                                </CDropdownItem>\n                              )}\n                              <CDropdownDivider />\n                              {/*  <CDropdownItem\n                                onClick={() => handleBusinessEntryShow(c)}\n                              >\n                                Business Details\n                              </CDropdownItem>\n                              <CDropdownDivider />\n\n                              <CDropdownItem\n                                onClick={() => handleDirectionsShow(c)}\n                              >\n                                Directions\n                            </CDropdownItem>\n                              <CDropdownDivider />*/}\n                              {true && (\n                                <CDropdownItem onClick={() => handleSummary(c)}>\n                                  Summary\n                                </CDropdownItem>\n                              )}\n                            </CDropdownMenu>\n                          </CDropdown>\n                        </td>\n                        <td>\n                          {!disbursed.booked && (\n                            <CButton\n                              className=\"btn-sm\"\n                              color=\"danger\"\n                              onClick={() => handleDelete(c)}\n                            >\n                              Remove\n                            </CButton>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CCardBody>\n              <div className=\"d-flex justify-content-center\">\n                <CButton\n                  className=\"col-sm-2 m-2  btn-sm\"\n                  color=\"success\"\n                  onClick={handleViewBookings}\n                >\n                  View Booked Loans\n                </CButton>\n              </div>\n            </CCard>\n          </CCol>\n        </CRow>\n      </div>\n\n      <CModal\n        className=\"modal fade col-sm-12\"\n        size=\"lg\"\n        show={productShow}\n        color=\"info\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setProductShow(!productShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <div className=\"row\">\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Applicant: {selectedLoan.fullName}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Bank: {selectedLoan.bank}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Amount Disbursed: {formatter.format(selectedLoan.amount)}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Date Disbursed :\n                {moment(selectedLoan.disburseDate).format('DD,MMMM,YYYY')}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Disbursed By: {selectedLoan.disbursedBy}</h6>\n            </div>\n          </div>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <h4 className=\"text-center mb-3\">Select Loan Product</h4>\n          <BookProduct\n            customer={disburseData.customer}\n            disbursementId={disburseData.disbursementId}\n            cashCollateral={disburseData.cashCollateral}\n          />\n        </CModalBody>\n\n        <CModalFooter></CModalFooter>\n      </CModal>\n\n      <CModal\n        className=\"modal fade col-sm-12\"\n        size=\"lg\"\n        show={principalShow}\n        color=\"info\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setPrincipalShow(!principalShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <div className=\"row\">\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Applicant: {selectedLoan.fullName}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Bank: {selectedLoan.bank}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Amount Disbursed: {formatter.format(selectedLoan.amount)}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Date Disbursed :\n                {moment(selectedLoan.disburseDate).format('DD,MMMM,YYYY')}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Disbursed By: {selectedLoan.disbursedBy}</h6>\n            </div>\n          </div>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <h4 className=\"text-center mb-3\">Loan Principal And Purpose</h4>\n          <LoanPrincipal\n            customer={disburseData.customer}\n            disbursementId={disburseData.disbursementId}\n            disbursedAmount={disburseData.amount}\n          />\n        </CModalBody>\n\n        <CModalFooter></CModalFooter>\n      </CModal>\n\n      <CModal\n        className=\"modal fade col-sm-12\"\n        size=\"lg\"\n        show={guarantorsShow}\n        color=\"info\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setGuarantorsShow(!guarantorsShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <div className=\"row\">\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Applicant: {selectedLoan.fullName}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Bank: {selectedLoan.bank}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Amount On Disbursed: {formatter.format(selectedLoan.amount)}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Date Disbursed :\n                {moment(selectedLoan.disburseDate).format('DD,MMMM,YYYY')}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Disbursed By: {selectedLoan.disbursedBy}</h6>\n            </div>\n          </div>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <h4 className=\"text-center mb-3\">Add First Guarantor</h4>\n          <Guarantors\n            customer={disburseData.customer}\n            disbursementId={disburseData.disbursementId}\n          />\n        </CModalBody>\n\n        <CModalFooter></CModalFooter>\n      </CModal>\n\n      <CModal\n        className=\"modal fade col-sm-12\"\n        size=\"lg\"\n        show={guarantorTwoShow}\n        color=\"info\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setGuarantorTwoShow(!guarantorTwoShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <div className=\"row\">\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Applicant: {selectedLoan.fullName}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Bank: {selectedLoan.bank}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Amount Disbursed: {formatter.format(selectedLoan.amount)}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Date Disbursed :\n                {moment(selectedLoan.disburseDate).format('DD,MMMM,YYYY')}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Disbursed By: {selectedLoan.disbursedBy}</h6>\n            </div>\n          </div>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <h4 className=\"text-center mb-3\">Add Second Guarantor</h4>\n          <GuarantorTwo\n            customer={disburseData.customer}\n            disbursementId={disburseData.disbursementId}\n          />\n        </CModalBody>\n\n        <CModalFooter></CModalFooter>\n      </CModal>\n\n      <CModal\n        className=\"modal fade col-sm-12\"\n        size=\"lg\"\n        show={businessDetailsShow}\n        color=\"info\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setBusinessDetailsShow(!businessDetailsShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <div className=\"row\">\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Applicant: {selectedLoan.fullName}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Bank: {selectedLoan.bank}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Amount Disbursed: {formatter.format(selectedLoan.amount)}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Date Disbursed :\n                {moment(selectedLoan.disburseDate).format('DD,MMMM,YYYY')}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Disbursed By: {selectedLoan.disbursedBy}</h6>\n            </div>\n          </div>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <h4 className=\"text-center mb-3\">Add Business Details</h4>\n          <BusinessDetails\n            customer={disburseData.customer}\n            disbursementId={disburseData.disbursementId}\n          />\n        </CModalBody>\n\n        <CModalFooter></CModalFooter>\n      </CModal>\n\n      <CModal\n        className=\"modal fade col-sm-12\"\n        size=\"lg\"\n        show={directionsShow}\n        color=\"info\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setDirectionsShow(!directionsShow)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <div className=\"row\">\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Applicant: {selectedLoan.fullName}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Bank: {selectedLoan.bank}</h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Amount Disbursed: {formatter.format(selectedLoan.amount)}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">\n                Date Disbursed :\n                {moment(selectedLoan.disburseDate).format('DD,MMMM,YYYY')}\n              </h6>\n            </div>\n            <div className=\"col-sm-4 text-left\">\n              <h6 className=\"\">Disbursed By: {selectedLoan.disbursedBy}</h6>\n            </div>\n          </div>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body col-sm-12\">\n          <h4 className=\"text-center mb-3\">\n            Enter Residence and Business Directions\n          </h4>\n          <Directions\n            customer={disburseData.customer}\n            disbursementId={disburseData.disbursementId}\n          />\n        </CModalBody>\n\n        <CModalFooter></CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default LoanBooking\n"],"sourceRoot":""}