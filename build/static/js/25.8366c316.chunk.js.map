{"version":3,"sources":["views/base/navbars/Navbars.js","reusable/DocsLink.js"],"names":["CNavbars","useState","isOpen","setIsOpen","isOpenDropdown","setIsOpenDropdown","navbarText","setNavbarText","name","expandable","color","inNavbar","onClick","show","navbar","className","inline","placeholder","size","type","inNav","light","src","alt","toggleable","React","memo","props","text","rest","href","rel","target"],"mappings":"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","file":"static/js/25.8366c316.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNavbar,\n  CNavbarNav,\n  CNavbarBrand,\n  CNavbarText,\n  CToggler,\n  CNavLink,\n  CDropdown,\n  CForm,\n  CInput,\n  CButton,\n  CImg\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nconst CNavbars = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false)\n  const [navbarText, setNavbarText] = useState(false)\n\n  return (\n    <>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar\n          <DocsLink name=\"CNavbar\"/>\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"sm\" color=\"info\" >\n            <CToggler inNavbar onClick={() => setIsOpen(!isOpen)}/>\n            <CNavbarBrand>\n              NavbarBrand\n            </CNavbarBrand>\n            <CCollapse show={isOpen} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n              </CNavbarNav>\n              <CNavbarNav className=\"ml-auto\">\n                <CForm inline>\n                  <CInput\n                    className=\"mr-sm-2\"\n                    placeholder=\"Search\"\n                    size=\"sm\"\n                  />\n                  <CButton color=\"light\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n                </CForm>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar brand\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar color=\"faded\" light>\n            <CNavbarBrand>\n              <CImg\n                src=\"https://placekitten.com/g/30/30\"\n                className=\"d-inline-block align-top\"\n                alt=\"CoreuiVue\"\n              />\n              CoreUI React\n            </CNavbarBrand>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar text\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar toggleable=\"sm\" light color=\"light\">\n            <CToggler\n              inNavbar\n              onClick={()=>{ setNavbarText(!navbarText)}}\n            />\n            <CNavbarBrand>NavbarBrand</CNavbarBrand>\n            <CCollapse show={navbarText}>\n              <CNavbarNav>\n                <CNavbarText>Navbar text</CNavbarText>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar dropdown\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"false\" color=\"primary\" >\n            <CToggler inNavbar onClick={()=>{setIsOpenDropdown(!isOpenDropdown)}} />\n            <CCollapse show={isOpenDropdown} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar form\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Search\"\n                size=\"sm\"\n              />\n              <CButton color=\"outline-success\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar input group\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Username\"\n              />\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default CNavbars\n","import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)"],"sourceRoot":""}