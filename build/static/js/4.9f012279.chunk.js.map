{"version":3,"sources":["views/setup/Uni.js","views/users/UsersData.js","views/setup/Directorate.js"],"names":["UnitSetup","useState","setUnit","units","setUnits","department","setDepartment","setSelectedDepartment","setDisableButton","search","setSearch","unit","iUnit","setIUnit","Joi","object","keys","string","required","label","useEffect","a","axios","get","results","data","getUnits","getDepartmentsInHooks","handleSubmit","console","log","post","status","Swal","fire","title","text","icon","visible","setVisible","filter","item","toLowerCase","includes","dataTouse","length","htmlFor","className","id","size","type","onChange","e","currentTarget","value","color","onClick","show","onClose","closeButton","xs","md","row","map","m","key","_id","placeholder","s","index","handleEditClicked","usersData","name","registered","role","ok","DepartmentSetup","directorate","setDirectorate","allDirectorates","setAllDirectorates","getDirectorates","directorates","target"],"mappings":"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","file":"static/js/4.9f012279.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport Swal from \"sweetalert2\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  //CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from \"@coreui/react\";\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from \"../users/UsersData\";\nimport DepartmentSetup from \"./Directorate\";\n\nconst UnitSetup = () => {\n  const [unit, setUnit] = useState(\"\");\n  const [units, setUnits] = useState([]);\n  const [department, setDepartment] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(\"\");\n  const [disableButton, setDisableButton] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [iUnit, setIUnit] = useState({\n    unit: \"\",\n    department: \"\",\n  });\n  const joiUnitSchema = Joi.object().keys({\n    unit: Joi.string().required().label(\"Unit\"),\n    department: Joi.string().required().label(\"Department\"),\n  });\n\n  const validateEntry = () => {\n    const result = Joi.validate({ unit, department }, joiUnitSchema);\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    async function getUnits() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/units\"\n      );\n      setUnits(results.data);\n    }\n    getUnits();\n  }, [units]);\n\n  useEffect(() => {\n    async function getDepartmentsInHooks() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/departments\"\n      );\n      setDepartment(results.data);\n    }\n    getDepartmentsInHooks();\n  }, []);\n\n  const handleDepartmentChange = (e) => {\n    //setSelectedDepartment(e.target.value);\n    setIUnit({ ...iUnit, department: e.currentTarget.value });\n    console.log(e.currentTarget.value);\n  };\n\n  const handleUnitChange = (e) => {\n    setIUnit({ ...iUnit, unit: e.currentTarget.value });\n  };\n\n  const handleSubmit = async () => {\n    console.log(iUnit);\n    setDisableButton(true);\n    const results = await axios.post(\n      \"https://ugmcservice.herokuapp.com/api/units\",\n      iUnit\n    );\n\n    if (results.status === 200) {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Unit Successfully Added\",\n        icon: \"success\",\n      });\n      setDisableButton(false);\n    } else {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Unit Setup Failed\",\n        icon: \"error\",\n      });\n      setDisableButton(false);\n    }\n    setDisableButton(false);\n    setUnit(\"\");\n    setSelectedDepartment(\"\");\n    setIUnit({ unit: \"\", department: \"\" });\n  };\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Active\":\n        return \"success\";\n      case \"Inactive\":\n        return \"secondary\";\n      case \"Pending\":\n        return \"warning\";\n      case \"Banned\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n  const fields = [\n    \"name\",\n    \"Phone Number\",\n    \"GH-ID\",\n    \"registered\",\n    \"role\",\n    \"status\",\n  ];\n  const [visible, setVisible] = useState(false);\n\n  const handleSearch = (e) => {\n    setSearch(e.currentTarget.value);\n  };\n  const handleEditClicked = (s) => {\n    console.log(s);\n  };\n\n  const data = {\n    units: units.filter((item) =>\n      item.unit.toLowerCase().includes(search.toLowerCase())\n    ),\n  };\n\n  const dataTouse = search.length === 0 ? units : data.units;\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <div>\n              <CModalHeader>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n                    <div className=\"controls\">\n                      <CInputGroup>\n                        <CInput\n                          id=\"appendedInputButtons\"\n                          size=\"16\"\n                          type=\"text\"\n                          onChange={handleSearch}\n                        />\n                        <CInputGroupAppend>\n                          <CCol></CCol>\n                          <CButton\n                            color=\"primary\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            + New Units\n                          </CButton>{\" \"}\n                        </CInputGroupAppend>\n                      </CInputGroup>\n                    </div>\n                  </CFormGroup>\n                </CCol>\n              </CModalHeader>\n            </div>\n\n            {/*<CButton color=\"success\" onClick={() => setSuccess(!success)} className=\"mr-1\">Success modal</CButton>\n            <CButton color=\"warning\" onClick={() => setWarning(!warning)} className=\"mr-1\">Warning modal</CButton>\n            <CButton color=\"danger\" onClick={() => setDanger(!danger)} className=\"mr-1\">Danger modal</CButton>\n  <CButton color=\"info\" onClick={() => setInfo(!info)} className=\"mr-1\">Info modal</CButton>*/}\n\n            <CModal\n              show={visible}\n              onClose={() => setVisible(!visible)}\n              color=\"primary\"\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Set Up | Unit Setting</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <form>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CCard>\n                        <CCardHeader>UNIT MANAGEMENT</CCardHeader>\n                        <CCardBody>\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <label\n                                htmlFor=\"departmentId\"\n                                className=\"form-label\"\n                              >\n                                Department\n                              </label>\n                              <select\n                                id=\"departmentId\"\n                                className=\"form-control classic\"\n                                value={iUnit.department}\n                                onChange={handleDepartmentChange}\n                              >\n                                <option value=\"\">Department *</option>\n                                {department.map((m) => (\n                                  <option key={m._id} value={m._id} id={m._id}>\n                                    {m.department}\n                                  </option>\n                                ))}\n                              </select>\n                              <label htmlFor=\"Unit\" className=\"form-label\">\n                                Unit\n                              </label>{\" \"}\n                              <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                value={iUnit.unit}\n                                placeholder=\"Unit\"\n                                onChange={handleUnitChange}\n                              />\n                            </CCol>\n                          </CFormGroup>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                  </CRow>\n                </form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"success\" size=\"sm\" onClick={handleSubmit}>\n                  Save\n                </CButton>{\" \"}\n                <CButton\n                  color=\"warning\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Reset\n                </CButton>\n                <CButton\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Cancel\n                </CButton>\n              </CModalFooter>\n            </CModal>\n\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <caption>Grades</caption>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>Number</th>\n                    <th>Unit</th>\n                    <th>Department</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody className=\"\">\n                  {dataTouse.map((s, index) => (\n                    <tr key={s._id}>\n                      <td>{index + 1}</td>\n                      <td>{s.unit}</td>\n                      <td>{s.department.department}</td>\n                      <td className=\"float-right\">\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          onClick={(s) => handleEditClicked(s)}\n                        >\n                          Edit\n                        </CButton>\n\n                        {/*<CButton color=\"primary\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n                </CButton>\n                <CButton color=\"danger\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n              </CButton>*/}\n                      </td>\n                      {/*<td>\n                    <button\n                      className=\"but btn-houReject\"\n                      onClick={() => handleShow(s)}\n                    >\n                      Reject\n                    </button>\n                  </td>*/}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <p className=\"hou-p\">Showing {dataTouse.length} Units...</p>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default UnitSetup;\n\n//0243039436 - Bentum;\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending', ok: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 43, name: 'Ford Correct', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 44, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 45, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 46, name: 'Ford Good', registered: '2008/05/25', role: 'Avata', status: 'Don\\'t panic!'},\n  {id: 47, name: 'Ford Fine', registered: '2009/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n  \n]\n\nexport default usersData\n","import CIcon from \"@coreui/icons-react\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport Swal from \"sweetalert2\";\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  //CDropdownItem,\n  CForm,\n  //CCardFooter,\n  //CDropdownToggle,\n  //CInputRadio,\n  //CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  //CSelect,\n  //CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from \"@coreui/react\";\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from \"../users/UsersData\";\n\nconst DepartmentSetup = () => {\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Active\":\n        return \"success\";\n      case \"Inactive\":\n        return \"secondary\";\n      case \"Pending\":\n        return \"warning\";\n      case \"Banned\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n  const fields = [\n    \"name\",\n    \"Phone Number\",\n    \"GH-ID\",\n    \"registered\",\n    \"role\",\n    \"status\",\n  ];\n  const [visible, setVisible] = useState(false);\n\n  const [directorate, setDirectorate] = useState(\"\");\n  const [disableButton, setDisableButton] = useState(false);\n  const [allDirectorates, setAllDirectorates] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const joiDirectorateSchema = Joi.object().keys({\n    directorate: Joi.string().required().label(\"Directorate\"),\n  });\n\n  const validateEntry = () => {\n    const result = Joi.validate(directorate, joiDirectorateSchema);\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    async function getDirectorates() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/directorates\"\n      );\n      setAllDirectorates(results.data);\n    }\n    getDirectorates();\n  }, [allDirectorates]);\n\n  const handleDirectorateChange = (e) => {\n    setDirectorate(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    setDisableButton(true);\n    console.log(directorate);\n    const results = await axios.post(\n      \"https://ugmcservice.herokuapp.com/api/directorates\",\n      { directorate }\n    );\n\n    if (results.status === 200) {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Directorate Successfully Added\",\n        icon: \"success\",\n      });\n      setDisableButton(false);\n    } else {\n      Swal.fire({\n        title: \"OOPS\",\n        text: \"Directorate Setup Failed\",\n        icon: \"error\",\n      });\n      setDisableButton(false);\n    }\n    setDirectorate(\"\");\n  };\n\n  const handleSearch = (e) => {\n    setSearch(e.currentTarget.value);\n  };\n  const handleEditClicked = (s) => {\n    console.log(s);\n  };\n\n  const data = {\n    directorates: allDirectorates.filter((item) =>\n      item.directorate.toLowerCase().includes(search.toLowerCase())\n    ),\n  };\n\n  const dataTouse = search.length === 0 ? allDirectorates : data.directorates;\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <div>\n              <CModalHeader>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n                    <div className=\"controls\">\n                      <CInputGroup>\n                        <CInput\n                          id=\"appendedInputButtons\"\n                          size=\"16\"\n                          type=\"text\"\n                          onChange={handleSearch}\n                        />\n                        <CInputGroupAppend>\n                          <CCol>\n                            <CButton color=\"primary\">Search</CButton>\n                          </CCol>\n                          <CButton\n                            color=\"primary\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            + New Directorate\n                          </CButton>{\" \"}\n                          <CButton\n                            color=\"success\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            Export Report\n                          </CButton>\n                        </CInputGroupAppend>\n                      </CInputGroup>\n                    </div>\n                  </CFormGroup>\n                </CCol>\n              </CModalHeader>\n            </div>\n            <CModal\n              show={visible}\n              onClose={() => setVisible(!visible)}\n              color=\"primary\"\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Administration | Directorate Setup</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <form>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CCard>\n                        <CCardHeader>DIRECTORATE SETUP</CCardHeader>\n                        <CCardBody>\n                          <label htmlFor=\"Department\" className=\"form-label\">\n                            Directorate\n                          </label>{\" \"}\n                          <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={directorate}\n                            placeholder=\"Directorate\"\n                            onChange={handleDirectorateChange}\n                          />\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                  </CRow>\n                </form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"success\" size=\"sm\" onClick={handleSubmit}>\n                  Save\n                </CButton>{\" \"}\n                <CButton\n                  color=\"warning\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Reset\n                </CButton>\n                <CButton\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Cancel\n                </CButton>\n              </CModalFooter>\n            </CModal>\n\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <caption>Directorate</caption>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th></th>\n\n                    <th>Directorate</th>\n                  </tr>\n                </thead>\n                <tbody className=\"\">\n                  {dataTouse.map((s, index) => (\n                    <tr key={s._id}>\n                      <td>{index + 1}</td>\n                      <td>{s.directorate}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default DepartmentSetup;\n"],"sourceRoot":""}