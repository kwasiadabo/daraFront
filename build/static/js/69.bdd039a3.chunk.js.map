{"version":3,"sources":["views/pages/customerlist.jsx"],"names":["CustomerList","useState","image","setImage","display","setDisplay","setAllStaff","setUser","staffData","setStaffData","customers","setCustomers","search","setSearch","show","setShow","showReassign","setShowReassign","isUpdate","setIsUpdate","associationData","setAssociationData","buffer","setBuffer","imageChanged","setImageChanged","render","setRender","customer","officer","reason","reAssignment","setReAssignment","fullName","dob","phone","hometown","placeOfBirth","occupation","nationality","gender","residentialAddress","ghanaPostGPS","directions","idType","idNumber","marritalStatus","nameOfSpouse","phoneOfSpouse","occupationOfSpouse","religion","placeOfWorship","leaderOfPlaceOfWorship","phoneOfPlaceOfWorship","assignedOfficer","association","setCustomer","navigate","useHistory","useEffect","auth","getCurrentUser","a","axios","get","apiUrl","results","data","getAssociations","staff","getStaff","schemaMap","Joi","string","required","label","allow","number","integer","min","id","any","schema","object","validateForm","result","validate","error","console","log","details","message","getCustomers","scustomers","filter","item","toLowerCase","includes","dataTouse","length","bb","Buffer","from","toString","SubmitReassignment","post","status","Swal","fire","handleClearingObject","className","type","onClick","placeholder","onChange","event","target","value","url","reportUrl","window","open","map","c","index","key","Style","accountNumber","nameOfStaff","color","size","push","img","showCustomerForEdit","onClose","closeButton","src","alt","width","height","files","URL","createObjectURL","name","htmlFor","e","currentTarget","aria-label","defaultValue","s","preventDefault","fd","formData","append","put","headers","then","res","catch","err","ex"],"mappings":"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","file":"static/js/69.bdd039a3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { apiUrl, reportUrl } from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport formData from 'form-data'\n\n//import '../../table.css'\n\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  ButtonDropdowns,\n  //CForm,\n  CDropdownDivider,\n  CInputCheckbox,\n  CLink,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nimport CustomerView from './customerView'\n\nconst CustomerList = () => {\n  const [image, setImage] = useState(null)\n  const [display, setDisplay] = useState(null)\n  const [allStaff, setAllStaff] = useState([])\n  const [user, setUser] = useState({})\n  const [staffData, setStaffData] = useState([])\n  const [customers, setCustomers] = useState([])\n  const [search, setSearch] = useState('')\n  const [show, setShow] = useState(false)\n  const [showReassign, setShowReassign] = useState(false)\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [associationData, setAssociationData] = useState([])\n  const [pageSize, setPageSize] = useState(15)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [buffer, setBuffer] = useState('')\n  const [imageChanged, setImageChanged] = useState(false)\n  const [render, setRender] = useState(false)\n  const [reAssignment, setReAssignment] = useState({\n    customer: '',\n    officer: '',\n    reason: '',\n  })\n  const handleClose = () => {\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n\n  const [groups, setGroups] = useState([])\n  const [customer, setCustomer] = useState({\n    fullName: '',\n    dob: '',\n    phone: '',\n    hometown: '',\n    placeOfBirth: '',\n    occupation: '',\n    nationality: '',\n    gender: 'Male',\n    residentialAddress: '',\n    ghanaPostGPS: '',\n    directions: '',\n    idType: 'National ID',\n    idNumber: '',\n    marritalStatus: 'Single',\n    nameOfSpouse: '',\n    phoneOfSpouse: '',\n    occupationOfSpouse: '',\n    religion: 'N/A',\n    placeOfWorship: '',\n    leaderOfPlaceOfWorship: '',\n    phoneOfPlaceOfWorship: '',\n    assignedOfficer: '',\n    association: '',\n  })\n  let navigate = useHistory()\n  useEffect(() => {\n    const getIsAdmin = () => {\n      setUser(auth.getCurrentUser)\n    }\n    getIsAdmin()\n  }, [])\n  useEffect(() => {\n    async function getAssociations() {\n      const results = await axios.get(apiUrl + '/setup/association')\n      setAssociationData(results.data)\n    }\n    getAssociations()\n  }, [render])\n\n  useEffect(() => {\n    async function getStaff() {\n      const staff = await axios.get(apiUrl + '/setup/staff')\n      setAllStaff(staff.data)\n    }\n    getStaff()\n  }, [render])\n\n  const schemaMap = {\n    fullName: Joi.string().required().label('Name'),\n    dob: Joi.string().required().label('Date of Birth'),\n    phone: Joi.string().required().label('Phone Number'),\n    hometown: Joi.string().allow(''),\n    placeOfBirth: Joi.string().allow(''),\n    occupation: Joi.string().allow(''),\n    nationality: Joi.string().allow(''),\n    gender: Joi.string().required().label('Gender'),\n    residentialAddress: Joi.string().allow(''),\n    ghanaPostGPS: Joi.string().required().label('GPS Address'),\n    directions: Joi.string().allow(''),\n    idType: Joi.string().required().label('ID Type'),\n    idNumber: Joi.string().required().label('ID Number'),\n    marritalStatus: Joi.string().allow(''),\n    nameOfSpouse: Joi.string().allow(''),\n    phoneOfSpouse: Joi.string().allow(''),\n    occupationOfSpouse: Joi.string().allow(''),\n    religion: Joi.string().allow(''),\n    placeOfWorship: Joi.string().allow(''),\n    leaderOfPlaceOfWorship: Joi.string().allow(''),\n    phoneOfPlaceOfWorship: Joi.string().allow(''),\n    assignedOfficer: Joi.number()\n      .integer()\n      .min(0)\n      .required()\n      .label('Assigned Officer'),\n    association: Joi.number().integer().allow(null),\n    id: Joi.any().allow(),\n  }\n\n  const onImageChange = (event) => {\n    setImageChanged(true)\n    if (event.target.files && event.target.files[0]) {\n      setImage(event.target.files[0])\n      setDisplay(URL.createObjectURL(event.target.files[0]))\n    }\n  }\n\n  const schema = Joi.object(schemaMap)\n  const validateForm = () => {\n    const result = Joi.validate(customer, schema)\n    if (result.error) {\n      console.log(result.error)\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const onSubmit = (e) => {\n    console.log(customer)\n    e.preventDefault()\n    if (image === null) return Swal.fire('OOPS', 'Image is Required', 'error')\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error')\n    }\n    try {\n      const fd = new formData()\n      fd.append('img', image)\n      fd.append('fullName', customer.fullName)\n      fd.append('dob', customer.dob)\n      fd.append('phone', customer.phone)\n      fd.append('hometown', customer.hometown)\n      fd.append('placeOfBirth', customer.placeOfBirth)\n      fd.append('occupation', customer.occupation)\n      fd.append('nationality', customer.nationality)\n      fd.append('gender', customer.gender)\n      fd.append('residentialAddress', customer.residentialAddress)\n      fd.append('ghanaPostGPS', customer.ghanaPostGPS)\n      fd.append('directions', customer.directions)\n      fd.append('idType', customer.idType)\n      fd.append('idNumber', customer.idNumber)\n      fd.append('marritalStatus', customer.marritalStatus)\n      fd.append('nameOfSpouse', customer.nameOfSpouse)\n      fd.append('phoneOfSpouse', customer.phoneOfSpouse)\n      fd.append('occupationOfSpouse', customer.occupationOfSpouse)\n      fd.append('religion', customer.religion)\n      fd.append('placeOfWorship', customer.placeOfWorship)\n      fd.append('leaderOfPlaceOfWorship', customer.leaderOfPlaceOfWorship)\n      fd.append('phoneOfPlaceOfWorship', customer.phoneOfPlaceOfWorship)\n      fd.append('assignedOfficer', customer.assignedOfficer)\n      fd.append('association', customer.association)\n\n      //fd.append('createdBy', 1)\n\n      /* for (let [key, value] of fd.entries()) {\n        console.log(key, value)\n      }*/\n\n      axios\n        .post(apiUrl + '/customer', fd, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        })\n        .then((res) => {\n          Swal.fire(\n            'Success',\n            'Customer Details Submitted Successfully',\n            'success',\n          )\n          setCustomer({\n            fullName: '',\n            dob: '',\n            phone: '',\n            hometown: '',\n            placeOfBirth: '',\n            occupation: '',\n            nationality: '',\n            gender: '',\n            residentialAddress: '',\n            ghanaPostGPS: '',\n            directions: '',\n            idType: '',\n            idNumber: '',\n\n            marritalStatus: '',\n            nameOfSpouse: '',\n            phoneOfSpouse: '',\n            occupationOfSpouse: '',\n            religion: '',\n            placeOfWorship: '',\n            leaderOfPlaceOfWorship: '',\n            phoneOfPlaceOfWorship: '',\n            assignedOfficer: 0,\n            association: 0,\n          })\n          setDisplay(null)\n          setRender(!render)\n        })\n        .catch((err) => {\n          console.log(err.message)\n          Swal.fire('OOPS ! ', ' [ Customer Details Not Saved]', 'error')\n        })\n    } catch (ex) {\n      console.log(ex.message)\n      return Swal.fire(\n        'Warning',\n        'OOPS',\n        ex + '  [ Customer Details Not Saved, Please Review Entries]',\n        'error',\n      )\n    }\n  }\n\n  const onUpdate = (e) => {\n    e.preventDefault()\n    if (image === null) return Swal.fire('OOPS', 'Image is Required', 'error')\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error')\n    }\n    try {\n      const fd = new formData()\n      fd.append('id', customer.id)\n      fd.append('fullName', customer.fullName)\n      fd.append('img', image)\n      fd.append('dob', customer.dob)\n      fd.append('phone', customer.phone)\n      fd.append('hometown', customer.hometown)\n      fd.append('placeOfBirth', customer.placeOfBirth)\n      fd.append('nationality', customer.nationality)\n      fd.append('occupation', customer.occupation)\n      fd.append('gender', customer.gender)\n      fd.append('residentialAddress', customer.residentialAddress)\n      fd.append('ghanaPostGPS', customer.ghanaPostGPS)\n      fd.append('directions', customer.directions)\n      fd.append('idType', customer.idType)\n      fd.append('idNumber', customer.idNumber)\n      fd.append('marritalStatus', customer.marritalStatus)\n      fd.append('nameOfSpouse', customer.nameOfSpouse)\n      fd.append('phoneOfSpouse', customer.phoneOfSpouse)\n      fd.append('occupationOfSpouse', customer.occupationOfSpouse)\n      fd.append('religion', customer.religion)\n      fd.append('placeOfWorship', customer.placeOfWorship)\n      fd.append('leaderOfPlaceOfWorship', customer.leaderOfPlaceOfWorship)\n      fd.append('phoneOfPlaceOfWorship', customer.phoneOfPlaceOfWorship)\n      fd.append('assignedOfficer', customer.assignedOfficer)\n      fd.append('association', customer.association)\n      //fd.append('createdBy', 1)\n\n      /*for (let [key, value] of fd.entries()) {\n        console.log(key, value)\n      }*/\n\n      imageChanged\n        ? axios\n            .put(apiUrl + '/customer', fd, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            })\n            .then((res) => {\n              //console.log(res)\n              Swal.fire(\n                'Success',\n                'Customer Details Updated Successfully',\n                'success',\n              )\n              setCustomer({\n                fullName: '',\n                dob: '',\n                phone: '',\n                hometown: '',\n                placeOfBirth: '',\n                occupation: '',\n                nationality: '',\n                gender: '',\n                residentialAddress: '',\n                ghanaPostGPS: '',\n                directions: '',\n                idType: '',\n                idNumber: '',\n\n                marritalStatus: '',\n                nameOfSpouse: '',\n                phoneOfSpouse: '',\n                occupationOfSpouse: '',\n                religion: '',\n                placeOfWorship: '',\n                leaderOfPlaceOfWorship: '',\n                phoneOfPlaceOfWorship: '',\n                assignedOfficer: '',\n                association: 0,\n              })\n              setDisplay(null)\n              //setImage(null)\n              //setBuffer(null)\n              setIsUpdate(!isUpdate)\n              setImageChanged(false)\n              setRender(!render)\n              setShow(!show)\n            })\n        : axios\n            .put(apiUrl + '/customer/noimg', customer)\n\n            .then((res) => {\n              console.log(res)\n              Swal.fire(\n                'Success',\n                'Customer Details Updated Successfully',\n                'success',\n              )\n              setCustomer({\n                fullName: '',\n                dob: '',\n                phone: '',\n                hometown: '',\n                placeOfBirth: '',\n                occupation: '',\n                nationality: '',\n                gender: '',\n                residentialAddress: '',\n                ghanaPostGPS: '',\n                directions: '',\n                idType: '',\n                idNumber: '',\n\n                marritalStatus: '',\n                nameOfSpouse: '',\n                phoneOfSpouse: '',\n                occupationOfSpouse: '',\n                religion: '',\n                placeOfWorship: '',\n                leaderOfPlaceOfWorship: '',\n                phoneOfPlaceOfWorship: '',\n                assignedOfficer: '',\n                association: 0,\n              })\n              setDisplay(null)\n              //setImage(null)\n              //setBuffer(null)\n              setIsUpdate(!isUpdate)\n              setImageChanged(false)\n              setRender(!render)\n              setShow(!show)\n            })\n            .catch((err) => {\n              Swal.fire(\n                'OOPS ! ' + err.message + '  [ Customer Details Not Saved]',\n                'error',\n              )\n            })\n    } catch (ex) {\n      return Swal.fire('OOPS', ex + '  [ Customer Details Not Saved]', 'error')\n    }\n  }\n\n  useEffect(() => {\n    async function getStaff() {\n      const results = await axios.get(apiUrl + '/setup/staff')\n      setStaffData(results.data)\n    }\n    getStaff()\n  }, [staffData])\n\n  useEffect(() => {\n    async function getCustomers() {\n      const results = await axios.get(apiUrl + '/customer')\n      setCustomers(results.data)\n    }\n    getCustomers()\n  }, [render])\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  /*let customersList = customers.find(\n          (o) => o.fullName.toLowerCase() === search.toLowerCase()\n        );*/\n\n  //console.log(customersList);\n  //const allCustomers = paginate(customers, currentPage, pageSize)\n\n  const data = {\n    scustomers: customers.filter((item) =>\n      item.fullName.toLowerCase().includes(search.toLowerCase()),\n    ),\n  }\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page)\n  }\n\n  const dataTouse = search.length === 0 ? customers : data.scustomers\n\n  const customerRegistration = () => {\n    handleClearingObject()\n    setIsUpdate(false)\n    setShow(!show)\n  }\n\n  const customerView = (s) => {\n    setCustomer(s)\n    setBuffer(s.img.data)\n    setShow(true)\n    //console.log(s)\n  }\n\n  //const allCustomers = paginate(customers, currentPage, pageSize);\n  const bb = Buffer.from(buffer).toString('base64')\n  // const bbuffer = Buffer.from(buffer).toString('base64')\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n\n  const showCustomerForEdit = (c) => {\n    console.log(c)\n    setCustomer({\n      ...customer,\n      fullName: c.fullName,\n      dob: c.dob,\n      phone: c.phone,\n      hometown: c.hometown,\n      placeOfBirth: c.placeOfBirth,\n      occupation: c.occupation,\n      nationality: c.nationality,\n      gender: c.gender,\n      residentialAddress: c.residentialAddress,\n      ghanaPostGPS: c.ghanaPostGPS,\n      directions: c.directions,\n      idType: c.idType,\n      idNumber: c.idNumber,\n      marritalStatus: c.marritalStatus,\n      nameOfSpouse: c.nameOfSpouse,\n      phoneOfSpouse: c.phoneOfSpouse,\n      occupationOfSpouse: c.occupationOfSpouse,\n      religion: c.religion,\n      placeOfWorship: c.placeOfWorship,\n      leaderOfPlaceOfWorship: c.leaderOfPlaceOfWorship,\n      phoneOfPlaceOfWorship: c.phoneOfPlaceOfWorship,\n      assignedOfficer: c.assignedOfficer,\n      association: c.association,\n      id: c.id,\n    })\n    // setDisplay(URL.createObjectURL(c.image))\n    setImage(c.img)\n    setBuffer(c.img.data)\n    setIsUpdate(true)\n    setShow(!show)\n  }\n\n  const SubmitReassignment = async () => {\n    const results = await axios.post(\n      apiUrl + '/customer/assignOfficer',\n      reAssignment,\n    )\n    // console.log(reAssignment)\n    if (results.status === 200)\n      return Swal.fire(\n        'Success',\n        'Customer Re-assigned Successfully',\n        'success',\n      )\n    return Swal.fire('Failed', 'Customer Re-assigned Failed', 'error')\n  }\n\n  const handleClearingObject = () => {\n    setCustomer({\n      fullName: '',\n      dob: '',\n      phone: '',\n      hometown: '',\n      placeOfBirth: '',\n      occupation: '',\n      nationality: '',\n      gender: 'Male',\n      residentialAddress: '',\n      ghanaPostGPS: '',\n      directions: '',\n      idType: 'National ID',\n      idNumber: '',\n      marritalStatus: 'Single',\n      nameOfSpouse: '',\n      phoneOfSpouse: '',\n      occupationOfSpouse: '',\n      religion: 'N/A',\n      placeOfWorship: '',\n      leaderOfPlaceOfWorship: '',\n      phoneOfPlaceOfWorship: '',\n      assignedOfficer: 0,\n      association: 0,\n    })\n    setDisplay(null)\n    setImage(null)\n    //setBuffer(null)\n    setRender(!render)\n  }\n  return (\n    <div>\n      <div className=\"col-sm-12 mt-3\">\n        <div className=\"table-responsive\">\n          <CButton\n            type=\"submit\"\n            className=\"btn btn-success btn-block col-sm-3 float-right btn-sm\"\n            onClick={customerRegistration}\n          >\n            + New Customer\n          </CButton>\n          <Input\n            className=\"mt-3 mb-3 ms-3 col-sm-4\"\n            type=\"text\"\n            placeholder=\"Search with Customer Name or Phone\"\n            onChange={handleSearch}\n          />\n          <CLink\n            className=\"btn-block col-sm-4 float-left btn-sm mb-3\"\n            onClick={() =>\n              openCustomerListAsReport(reportUrl + '/CustomerList.aspx')\n            }\n          >\n            View Customers as Report\n          </CLink>\n          <Table className=\"table-sm\">\n            <thead>\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Account Number</th>\n                <th>Name</th>\n                <th>Gender</th>\n                <th>Phone</th>\n\n                <th>Officer</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((c, index) => (\n                <tr\n                  key={c.id}\n                  // onClick={() => customerView(c)}\n                  Style=\"cursor: pointer;\"\n                >\n                  <td>{index + 1}</td>\n                  <td>{c.accountNumber}</td>\n                  <td>{c.fullName}</td>\n                  <td>{c.gender}</td>\n                  <td>{c.phone}</td>\n                  <td>{c.nameOfStaff}</td>\n                  <td>\n                    <CDropdown className=\"m-1\">\n                      <CDropdownToggle color=\"info\" size=\"sm\">\n                        Actions\n                      </CDropdownToggle>\n                      <CDropdownMenu size=\"sm\">\n                        <CDropdownItem\n                          onClick={() =>\n                            navigate.push(\n                              '/customer/viewcustomerdetails/' + c.id,\n                            )\n                          }\n                        >\n                          View Customer Report\n                        </CDropdownItem>\n\n                        <CDropdownDivider />\n                        <CDropdownItem onClick={() => showCustomerForEdit(c)}>\n                          Edit Customer\n                        </CDropdownItem>\n\n                        <CDropdownDivider />\n                        <CDropdownItem\n                          onClick={() => {\n                            setCustomer(c)\n                            setReAssignment({ ...reAssignment, customer: c.id })\n                            setShowReassign(!showReassign)\n                          }}\n                        >\n                          Re-assign To Officer\n                        </CDropdownItem>\n                      </CDropdownMenu>\n                    </CDropdown>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          {/*<Pagination\n            itemsCount={customers.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n          />*/}\n\n          <CModal\n            show={show}\n            onClose={() => {\n              setShow(!show)\n              setIsUpdate(false)\n            }}\n            color=\"success\"\n            size=\"lg\"\n          >\n            <CModalHeader closeButton>\n              <CModalTitle>CUSTOMER MGT | ADD CUSTOMER </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <CFormGroup>\n                <div className=\"justify-content-right\">\n                  <CInputGroup>\n                    <img\n                      src={\n                        display === null\n                          ? `data:image/jpeg;base64,${bb}`\n                          : display\n                      }\n                      alt=\"preview image\"\n                      className=\"photo m-3 float-right\"\n                      width=\"80px\"\n                      height=\"80px\"\n                    />\n\n                    <input\n                      type=\"file\"\n                      onChange={onImageChange}\n                      className=\"col-sm-6 mt-3 float-right\"\n                      id=\"group_image\"\n                      name=\"img\"\n                    />\n                  </CInputGroup>\n                </div>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"fullName\" className=\"col-sm-3\">\n                    Full Name *\n                  </CLabel>\n\n                  <CInput\n                    name=\"fullName\"\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"fullName\"\n                    value={customer.fullName}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        fullName: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"hometown\" className=\"col-sm-3\">\n                    Hometown\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"hometown\"\n                    value={customer.hometown}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        hometown: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"Dob\" className=\"col-sm-3\">\n                    Date of Birth *\n                  </CLabel>\n                  <CInput\n                    type=\"date\"\n                    className=\"form-control col-sm-8\"\n                    id=\"Dob\"\n                    placeholder=\"dd-mm-yyyy\"\n                    min=\"1940-01-01\"\n                    value={customer.dob}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        dob: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"placeofbirth\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Place of Birth\n                  </CLabel>\n                  <input\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"placeofBirth\"\n                    value={customer.placeOfBirth}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        placeOfBirth: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"occupation\" className=\"form-label col-sm-3\">\n                    Occupation *\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"occupation\"\n                    value={customer.occupation}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        occupation: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"phone\" className=\"form-label col-sm-3\">\n                    Phone *\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    className=\"form-control col-sm-4\"\n                    id=\"Phone\"\n                    value={customer.phone}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phone: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"nationality\" className=\"form-label col-sm-3\">\n                    Nationality\n                  </CLabel>\n                  <input\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"nationality\"\n                    value={customer.nationality}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nationality: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"gender\" className=\"form-label col-sm-3\">\n                    Gender *\n                  </CLabel>\n                  <CSelect\n                    className=\"form-select col-sm-4\"\n                    aria-label=\"Default select example\"\n                    value={customer.gender}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        gender: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"Male\">Male</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </CSelect>\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"resaddress\" className=\"form-label col-sm-3\">\n                    Residential Address *\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"resaddress\"\n                    value={customer.residentialAddress}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        residentialAddress: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"gps\" className=\"form-label col-sm-3\">\n                    Ghana Post GPS *\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    value={customer.ghanaPostGPS}\n                    className=\"form-control col-sm-4\"\n                    id=\"gps\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        ghanaPostGPS: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"suburb\" className=\"form-label col-sm-3\">\n                    Suburb / Land Mark / Directions\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    value={customer.directions}\n                    className=\"form-control col-sm-8\"\n                    id=\"suburb\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        directions: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"idType\" className=\"form-label col-sm-3\">\n                    ID Type *\n                  </CLabel>\n                  <CSelect\n                    className=\"form-select col-sm-4\"\n                    aria-label=\"Default select example\"\n                    value={customer.idType}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        idType: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"National ID\">National ID</option>\n                    <option value=\"National ID\">National ID</option>\n                    {/*<option value=\"Voter ID\">Voter ID</option>\n                    <option value=\"Driver's License\">Driver's License</option>\n                  <option value=\"Passport\">Passport</option>*/}\n                  </CSelect>\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"idNumber\" className=\"form-label col-sm-3\">\n                    ID Number *\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    value={customer.idNumber}\n                    className=\"form-control col-sm-8\"\n                    id=\"idNumber\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        idNumber: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                {/* <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"tin\" className=\"form-label col-sm-3\">\n                    TIN *\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    value={customer.idNumber}\n                    className=\"form-control col-sm-8\"\n                    id=\"tin\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        tinNumber: e.currentTarget.value,\n                      })\n                    }\n                  />\n                  </CInputGroup>*/}\n                <CInputGroup className=\"mt-3\">\n                  <label htmlFor=\"married\" className=\"form-label col-sm-3\">\n                    Marrital Status\n                  </label>\n                  <CSelect\n                    className=\"form-select col-sm-4\"\n                    aria-label=\"Default select example\"\n                    value={customer.marritalStatus}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        marritalStatus: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"Single\">Single</option>\n                    <option value=\"Married\">Married</option>\n                    <option value=\"Single\">Single</option>\n                    <option value=\"Divorced\">Divorced</option>\n                    <option value=\"Widowed\">Widowed</option>\n                  </CSelect>\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"nameofspouse\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Name of Spouse\n                  </CLabel>\n                  <input\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"nameofspouse\"\n                    value={customer.nameOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nameOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"phoneofspouse\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Phone of Spouse\n                  </CLabel>\n                  <input\n                    type=\"text\"\n                    className=\"form-control col-sm-4\"\n                    id=\"phoneofspouse\"\n                    value={customer.phoneOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phoneOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"occupationofspouse\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Occu. Spouse\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    className=\"form-control col-sm-8\"\n                    id=\"occupationofspouse\"\n                    value={customer.occupationOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        occupationOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"religion\" className=\"form-label col-sm-3\">\n                    Religion\n                  </CLabel>\n                  <CSelect\n                    className=\"form-select col-sm-8\"\n                    aria-label=\"Default select example\"\n                    value={customer.religion}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        religion: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"N/A\">N/A</option>\n                    <option value=\"Christian\">Christian</option>\n                    <option value=\"Muslim\">Muslim</option>\n                    <option value=\"Traditionalist\">Traditionalist</option>\n                    <option value=\"Other\">Other</option>\n                  </CSelect>\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"placeofworship\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Place of Worship\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    value={customer.placeOfWorship}\n                    className=\"form-control col-sm-8\"\n                    id=\"placeofworship\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        placeOfWorship: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"worshipleader\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Leader of Place of Worship\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    value={customer.leaderOfPlaceOfWorship}\n                    className=\"form-control col-sm-8\"\n                    id=\"worshipleader\"\n                    onChange={(e) => {\n                      setCustomer({\n                        ...customer,\n                        leaderOfPlaceOfWorship: e.currentTarget.value,\n                      })\n                      console.log(e.currentTarget.value)\n                    }}\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Phone, Place of worship\n                  </CLabel>\n                  <CInput\n                    type=\"text\"\n                    value={customer.phoneOfPlaceOfWorship}\n                    className=\"form-control col-sm-4\"\n                    id=\"phoneworship\"\n                    onChange={(e) => {\n                      setCustomer({\n                        ...customer,\n                        phoneOfPlaceOfWorship: e.currentTarget.value,\n                      })\n                      console.log(e.currentTarget.value)\n                    }}\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Assigned Officer *\n                  </CLabel>\n                  <CSelect\n                    className=\"form-select col-sm-8\"\n                    aria-label=\"Default select example\"\n                    value={customer.assignedOfficer}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        assignedOfficer: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option value=\"\">Officer *</option>\n                    {staffData.map((s) => (\n                      <option key={s.id} value={s.id} id={s.id}>\n                        {s.nameOfStaff}\n                      </option>\n                    ))}\n                  </CSelect>\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <CLabel\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label col-sm-3\"\n                  >\n                    Group\n                  </CLabel>\n                  <CSelect\n                    className=\"form-select col-sm-8\"\n                    aria-label=\"Default select example\"\n                    value={customer.association}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        association: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option value=\"0\">N/A</option>\n                    {associationData.map((s) => (\n                      <option key={s.id} value={s.id} id={s.id}>\n                        {s.association}\n                      </option>\n                    ))}\n                  </CSelect>\n                </CInputGroup>\n              </CFormGroup>\n\n              <CButton\n                className=\"btn-sm col-sm-2 m-3 float-right\"\n                type=\"submit\"\n                onClick={() => {\n                  setShow(!show)\n                  //setIsUpdate(!isUpdate)\n                }}\n                color=\"danger\"\n              >\n                Close\n              </CButton>\n\n              <CButton\n                className=\"btn-sm col-sm-2 m-3 float-right\"\n                type=\"submit\"\n                onClick={isUpdate ? onUpdate : onSubmit}\n                color=\"success\"\n              >\n                {isUpdate ? 'Update' : 'Submit'}\n              </CButton>\n            </CModalBody>\n          </CModal>\n\n          <CModal\n            show={showReassign}\n            onClose={() => {\n              setShowReassign(!showReassign)\n            }}\n            color=\"info\"\n            size=\"md\"\n          >\n            <CModalHeader closeButton>\n              <CModalTitle>CUSTOMER MGT | RE-ASSIGN TO OFFICER</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"phoneworship\" className=\"form-label col-sm-3\">\n                  Customer\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  value={customer.fullName}\n                  className=\"form-control col-sm-10\"\n                  id=\"phoneworship\"\n                  onChange={null}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"phoneworship\" className=\"form-label col-sm-3\">\n                  Officer *\n                </CLabel>\n                <CSelect\n                  className=\"form-select col-sm-10\"\n                  aria-label=\"Default select example\"\n                  value={reAssignment.officer}\n                  onChange={(e) =>\n                    setReAssignment({\n                      ...reAssignment,\n                      officer: e.currentTarget.value,\n                    })\n                  }\n                >\n                  <option value=\"\">Officer *</option>\n                  {staffData.map((s) => (\n                    <option key={s.id} value={s.id} id={s.id}>\n                      {s.nameOfStaff}\n                    </option>\n                  ))}\n                </CSelect>\n              </CInputGroup>\n\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"reason\" className=\"form-label col-sm-3\">\n                  Reason\n                </CLabel>\n                <CInput\n                  type=\"textarea\"\n                  value={reAssignment.reason}\n                  className=\"form-control col-sm-10\"\n                  id=\"reason\"\n                  onChange={(e) =>\n                    setReAssignment({\n                      ...reAssignment,\n                      reason: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n              <CButton\n                className=\"btn-sm col-sm-4 m-3 float-right\"\n                type=\"submit\"\n                onClick={SubmitReassignment}\n                color=\"info\"\n              >\n                Re-assign\n              </CButton>\n            </CModalBody>\n          </CModal>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//  <td>{moment(s.startDate).format(\"DD,MMMM,YYYY\")}</td>\nexport default CustomerList\n"],"sourceRoot":""}