{"version":3,"sources":["views/setup/Holidays.js","views/users/UsersData.js"],"names":["HolidaySetup","useState","visible","setVisible","holiday","hdate","Date","year","holidays","setHolidays","iHolidays","setIHolidays","search","setSearch","setDisableButton","useEffect","a","axios","get","getFullYear","results","data","getHolidays","joiHolidaySchema","Joi","object","keys","string","required","label","date","number","validateEntry","result","validate","error","details","message","handleSubmit","console","log","post","status","Swal","fire","filter","item","toLowerCase","includes","dataTouse","length","htmlFor","className","id","size","type","onChange","e","currentTarget","value","color","onClick","show","onClose","closeButton","xs","md","target","placeholder","map","s","index","key","_id","moment","format","handleEditClicked","usersData","name","registered","role","ok"],"mappings":"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","file":"static/js/55.7b5687d2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CIcon from \"@coreui/icons-react\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport Swal from \"sweetalert2\";\nimport moment from \"moment\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  //CDropdownItem,\n  CForm,\n  //CCardFooter,\n  // CDropdownToggle,\n  //CInputRadio,\n  // CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  //CSelect,\n  //CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from \"@coreui/react\";\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from \"../users/UsersData\";\n\nconst HolidaySetup = () => {\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Active\":\n        return \"success\";\n      case \"Inactive\":\n        return \"secondary\";\n      case \"Pending\":\n        return \"warning\";\n      case \"Banned\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n  const fields = [\n    \"name\",\n    \"Phone Number\",\n    \"GH-ID\",\n    \"registered\",\n    \"role\",\n    \"status\",\n  ];\n  const [visible, setVisible] = useState(false);\n  const [holidays, setHolidays] = useState({\n    holiday: \"\",\n    hdate: new Date(),\n    year: null,\n  });\n  const [iHolidays, setIHolidays] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [disableButton, setDisableButton] = useState(false);\n\n  useEffect(() => {\n    async function getHolidays() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/holidays/days/\" +\n          new Date().getFullYear()\n      );\n      setIHolidays(results.data);\n    }\n    getHolidays();\n  }, [iHolidays]);\n\n  const joiHolidaySchema = Joi.object().keys({\n    holiday: Joi.string().required().label(\"Holiday\"),\n    hdate: Joi.date().required().label(\"date\"),\n    year: Joi.number().required().label(\"Year\"),\n  });\n\n  const validateEntry = () => {\n    const result = Joi.validate(holidays, joiHolidaySchema);\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  const handleSubmit = async () => {\n    validateEntry();\n    setDisableButton(true);\n    console.log(holidays);\n    try {\n      const results = await axios.post(\n        \"https://ugmcservice.herokuapp.com/api/holidays\",\n        holidays\n      );\n\n      if (results.status === 200) {\n        Swal.fire(\"Success\", \"Holiday Setup Successfully\", \"success\");\n        setDisableButton(false);\n      } else {\n        Swal.fire(\"OOPS\", \"Holiday Setup Failed\", \"error\");\n        setDisableButton(false);\n      }\n    } catch (err) {\n      Swal.fire(\"OOPS\", \"Holiday Setup Failed \" + err, \"error\");\n      setDisableButton(false);\n    }\n\n    setHolidays({ holiday: \"\", hdate: \"\", year: \"\" });\n  };\n  const handleEditClicked = (s) => {\n    console.log(s);\n  };\n  const handleSearch = (e) => {\n    setSearch(e.currentTarget.value);\n  };\n\n  const data = {\n    holidays: iHolidays.filter((item) =>\n      item.holiday.toLowerCase().includes(search.toLowerCase())\n    ),\n  };\n\n  const dataTouse = search.length === 0 ? iHolidays : data.holidays;\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <div>\n              <CModalHeader>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n                    <div className=\"controls\">\n                      <CInputGroup>\n                        <CInput\n                          id=\"appendedInputButtons\"\n                          size=\"16\"\n                          type=\"text\"\n                          onChange={handleSearch}\n                        />\n                        <CInputGroupAppend>\n                          <CCol>\n                            <CButton color=\"primary\">Search</CButton>\n                          </CCol>\n                          <CButton\n                            color=\"primary\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            + New Holidays\n                          </CButton>{\" \"}\n                          <CButton\n                            color=\"success\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            Export Report\n                          </CButton>\n                        </CInputGroupAppend>\n                      </CInputGroup>\n                    </div>\n                  </CFormGroup>\n                </CCol>\n              </CModalHeader>\n            </div>\n\n            <CModal\n              show={visible}\n              onClose={() => setVisible(!visible)}\n              color=\"primary\"\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Setup | Holidays</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <form>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CCard>\n                        <CCardHeader>HOLIDAYS SETUP</CCardHeader>\n                        <CCardBody>\n                          <div className=\"row justify-content-center\">\n                            <div className=\"col-6\">\n                              <div className=\"form-group\">\n                                <label\n                                  htmlFor=\"LeaveYear\"\n                                  className=\"form-label\"\n                                >\n                                  Holiday\n                                </label>\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  value={holidays.holiday}\n                                  // placeholder=\"Year\"\n                                  onChange={(e) =>\n                                    setHolidays({\n                                      ...holidays,\n                                      holiday: e.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n\n                              <div className=\"form-group\">\n                                <label htmlFor=\"date\" className=\"form-label\">\n                                  Holiday Date\n                                </label>{\" \"}\n                                <input\n                                  type=\"date\"\n                                  className=\"form-control myInput\"\n                                  value={holidays.hdate}\n                                  onChange={(e) =>\n                                    setHolidays({\n                                      ...holidays,\n                                      hdate: e.currentTarget.value,\n                                    })\n                                  }\n                                />\n                              </div>\n\n                              <div className=\"form-group\">\n                                <label\n                                  htmlFor=\"LeaveYear\"\n                                  className=\"form-label\"\n                                >\n                                  Year\n                                </label>\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  value={holidays.year}\n                                  placeholder=\"2001\"\n                                  onChange={(e) =>\n                                    setHolidays({\n                                      ...holidays,\n                                      year: e.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                  </CRow>\n                </form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Save\n                </CButton>{\" \"}\n                <CButton color=\"warning\" onClick={() => setVisible(!visible)}>\n                  Reset\n                </CButton>{\" \"}\n                <CButton color=\"danger\" onClick={() => setVisible(!visible)}>\n                  Close\n                </CButton>\n              </CModalFooter>\n            </CModal>\n\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <caption>Holidays</caption>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>Number</th>\n                    <th>Holiday</th>\n                    <th>Date</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody className=\"\">\n                  {dataTouse.map((s, index) => (\n                    <tr key={s._id}>\n                      <td>{index + 1}</td>\n                      <td>{s.holiday}</td>\n\n                      <td>{moment(s.hdate).format(\"DD,MMMM,YYYY\")}</td>\n                      <td className=\"float-right\">\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          onClick={(s) => handleEditClicked(s)}\n                        >\n                          Edit\n                        </CButton>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default HolidaySetup;\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending', ok: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 43, name: 'Ford Correct', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 44, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 45, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 46, name: 'Ford Good', registered: '2008/05/25', role: 'Avata', status: 'Don\\'t panic!'},\n  {id: 47, name: 'Ford Fine', registered: '2009/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n  \n]\n\nexport default usersData\n"],"sourceRoot":""}