{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","views/pages/loanRepayment.jsx"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","LoanRepayment","useState","loanees","setLoanees","auth","getCurrentUser","user","daysPayments","setDaysPayments","show","setShow","fullName","setFullName","amount","overage","shortage","bulkCash","setBulkCash","Date","payments","setPayments","search","setSearch","edit","setEdit","render","setRender","save","setSave","loanBal","setLoanBal","dateOfCollection","toISOString","slice","officer","customer","modeOfPayment","loanPayments","setLoanPayments","tdate","setTdate","useEffect","a","axios","get","apiUrl","staff","results","data","getActiveLoans","TotalSubmitted","getBulkCash","TotalDailyCollections","getPayments","getDaysPayments","formatter","Intl","NumberFormat","style","currency","handleCustomerSelect","c","id","loanBalance","filter","toLowerCase","includes","dataTouse","length","handleSubmit","Swal","fire","post","statusText","handleRemovePayment","p","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","delete","status","isDenied","handleUpdate","console","log","put","loanId","comment","entryBy","handleSubmitCollections","openCustomerListAsReport","reportUrl","url","window","open","type","name","onChange","e","currentTarget","classname","width","height","format","parseFloat","onClick","color","map","index","key","Customer","ModeOfPayment","Amount","Modal","size","data-backdrop","data-keyboard","placeholder","event","accountNumber","htmlFor","autoComplete","readOnly","aria-label"],"mappings":"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","file":"static/js/74.4955e530.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate, useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { apiUrl } from '../../config.json'\nimport { reportUrl } from '../../config.json'\nimport { Modal } from 'react-bootstrap'\nimport auth from '../../components/services/authService'\nimport Swal from 'sweetalert2'\n\nimport Card from 'react-bootstrap/Card'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n  //Modal,\n} from 'reactstrap'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\nconst LoanRepayment = () => {\n  const [loanees, setLoanees] = useState([])\n  const [user, setUser] = useState(auth.getCurrentUser())\n  const [staff, setStaff] = useState([])\n  //const user = auth.getCurrentUser();\n  const [daysPayments, setDaysPayments] = useState([])\n  const [show, setShow] = useState(false)\n  const [fullName, setFullName] = useState('')\n  const [bulkCash, setBulkCash] = useState({\n    amount: 0,\n    overage: 0,\n    shortage: 0,\n  })\n  const [todayDate, setTodayDate] = useState(new Date())\n  const [payments, setPayments] = useState(0)\n  const formatToday = (date) => date.toISOString().slice(0, 10)\n  const [pageSize, setPageSize] = useState(1)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [search, setSearch] = useState('')\n  const [edit, setEdit] = useState(false)\n  const [render, setRender] = useState(false)\n  const [save, setSave] = useState(true)\n  const [colPayments, setColPayments] = useState([])\n  const [todaysPayments, setTodaysPayments] = useState([])\n  const [loanBal, setLoanBal] = useState(0)\n  const [loanPayments, setLoanPayments] = useState({\n    dateOfCollection: new Date().toISOString().slice(0, 10),\n    officer: '',\n    customer: '',\n    amount: '',\n    modeOfPayment: '',\n  })\n  const [tdate, setTdate] = useState(new Date().toISOString().slice(0, 10))\n\n  useEffect(() => {\n    const getActiveLoans = async () => {\n      const results = await axios.get(\n        apiUrl + '/loan/dailycollections/' + user.staff,\n      )\n      setLoanees(results.data)\n    }\n    getActiveLoans()\n  }, [loanees, render])\n\n  useEffect(() => {\n    async function getBulkCash() {\n      try {\n        const results = await axios.get(\n          apiUrl + '/loan/bulkCash/submitted/' + tdate + '/' + user.staff,\n        )\n        setBulkCash({\n          ...bulkCash,\n          amount: results.data[0].TotalSubmitted,\n          // overage: results.data[0].overage,\n          // shortage: results.data[0].shortage,\n        })\n      } catch (ex) {}\n    }\n    getBulkCash()\n  }, [tdate, render])\n\n  useEffect(() => {\n    async function getPayments() {\n      const results = await axios.get(\n        apiUrl + '/loan/dailycollections/' + tdate + '/' + user.staff,\n      )\n      setPayments(results.data[0].TotalDailyCollections)\n      // console.log('Payments: ' + formatToday(todayDate))\n    }\n    getPayments()\n    //console.log(tdate)\n  }, [render, tdate])\n\n  useEffect(() => {\n    async function getDaysPayments() {\n      const results = await axios.get(\n        apiUrl +\n          '/loan/dailycollections/dayspayments/' +\n          tdate +\n          '/' +\n          user.staff,\n      )\n      setDaysPayments(results.data)\n      // console.log('Payments: ' + formatToday(todayDate))\n    }\n    getDaysPayments()\n    //console.log(daysPayments)\n  }, [render, tdate])\n\n  const handleAmountChange = (e) => {\n    setLoanPayments({\n      ...loanPayments,\n      amount: e.currentTarget.value,\n      officer: user.staff,\n    })\n  }\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleCustomerSelect = async (c) => {\n    const loanBalance = await axios.get(\n      apiUrl + '/loan/dailycollections/bal/' + c.id,\n    )\n    setFullName(c.fullName)\n    setLoanBal(loanBalance.data[0].loanBalance)\n    setLoanPayments({\n      customer: c.id,\n      dateOfCollection: tdate,\n      officer: user.staff,\n    })\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.currentTarget.value)\n  }\n\n  const data = {\n    customer: loanees.filter((c) =>\n      c.fullName.toLowerCase().includes(search.toLowerCase()),\n    ),\n  }\n\n  const dataTouse = search.length === 0 ? loanees : data.customer\n\n  const handleClose = () => {\n    setLoanPayments({\n      customer: '',\n      amount: '',\n      modeOfPayment: '',\n      officer: '',\n      dateOfCollection: '',\n    })\n    setFullName('')\n    setShow(false)\n  }\n\n  const handleSubmit = async () => {\n    if (bulkCash.amount - payments < loanPayments.amount)\n      return Swal.fire(\n        'OOPS',\n        'Payment Unsuccessful - Insufficient Bulk Amount',\n        'error',\n      )\n    try {\n      const results = await axios.post(\n        apiUrl + '/loan/dailycollections',\n        loanPayments,\n      )\n      if (results.statusText === 'OK') {\n        Swal.fire('Success', 'Payment Made', 'success')\n        setLoanPayments({\n          customer: '',\n          amount: '',\n          modeOfPayment: '',\n          officer: '',\n          dateOfCollection: '',\n        })\n        setRender(!render)\n      } else {\n        //console.log(results)\n        return Swal.fire('OOPS', 'Payment Unsuccessful', 'error')\n      }\n    } catch (ex) {\n      //console.log(ex)\n      return Swal.fire('OOPS', ex + ' [Payment Unsuccessful]', 'error')\n    }\n  }\n\n  const showForEdit = (p) => {\n    setLoanPayments({\n      loanId: p.loanId._id,\n      customer: p.customer._id,\n      fullName: p.customer.fullName,\n      entryBy: user._id,\n      dateOfCollection: new Date().toISOString().slice(0, 10),\n      modeOfPayment: p.modeOfPayment,\n      amount: p.amount,\n      officer: p.officer.id,\n      comment: p.comment,\n      id: p.id,\n    })\n    setShow(!show)\n    setEdit(true)\n    setSave(false)\n  }\n\n  const handleRemovePayment = async (p) => {\n    //console.log(p)\n    Swal.fire({\n      title: 'Do you want to remove this payment?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Remove',\n      denyButtonText: `Don't Remove`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        try {\n          const results = await axios.delete(\n            apiUrl + '/loan/dailycollections/' + p.id,\n          )\n\n          if (results.status === 200) {\n            Swal.fire('Success', 'Payment Removed', 'success')\n          }\n          setRender(!render)\n        } catch (ex) {\n          Swal.fire('Error', ex + ' Payment Removal Failed', 'error')\n        }\n      } else if (result.isDenied) {\n        Swal.fire('Payment Removal Failed', '', 'error')\n      }\n    })\n    setRender(!render)\n    //console.log(results)\n  }\n  const handleUpdate = async () => {\n    console.log(loanPayments)\n    try {\n      const results = await axios.put(\n        apiUrl + '/collectionsheet/' + loanPayments.id,\n        loanPayments,\n      )\n      if (results.status === 200) {\n        Swal.fire('Success', 'Payment Updated', 'success')\n        setLoanPayments({\n          customer: '',\n          fullName: '',\n          amount: '',\n          modeOfPayment: '',\n          loanId: '',\n          officer: '',\n          comment: '',\n          entryBy: '',\n          dateOfCollection: '',\n        })\n        setRender(!render)\n      } else {\n        return Swal.fire('OOPS', 'Payment Update Unsuccessful', 'error')\n      }\n    } catch (ex) {\n      return Swal.fire('OOPS', ex + ' [Payment Update Unsuccessful]', 'error')\n    }\n  }\n\n  const handleMakePayment = () => {\n    if (bulkCash.amount <= 0)\n      return Swal.fire(\n        'OOPS',\n        'You have NOT submitted Bulk Cash for ' + tdate,\n        'error',\n      )\n    setSave(true)\n    setEdit(false)\n    setShow(true)\n  }\n\n  const handleSubmitCollections = async () => {\n    try {\n      await axios.post(\n        apiUrl + '/loan/dailycollections/' + user.staff + '/' + tdate,\n      )\n      Swal.fire('Submission Done', 'Days Collections Submitted!', 'success')\n      setRender(!render)\n      openCustomerListAsReport(\n        reportUrl + '/dailyEntry.aspx?' + user.staff + '?' + tdate,\n      )\n    } catch (ex) {\n      return Swal.fire('OOPS', ex + ' [Collections Submission Failed]', 'error')\n    }\n  }\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=380,height=320'\n    window.open(url, 'Daily Entry', 'popup', windowFeatures)\n  }\n  const handleSelectDate = (e) => {\n    setTdate(e.currentTarget.value)\n\n    console.log(\n      bulkCash.amount + bulkCash.shortage - bulkCash.overage - payments,\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"col-sm-12\">\n        <h3 className=\"centertext mt-\">Customer Loan Repayment</h3>\n        <CInput\n          type=\"date\"\n          name=\"dateToday\"\n          className=\"form-control text-center col-sm-12\"\n          id=\"dateToday\"\n          value={tdate}\n          onChange={handleSelectDate}\n        />\n        <div className=\"row text-center col-sm-12 justify-content-center\">\n          <div classname=\"m-3\">\n            <Card style={{ width: '12rem', height: '6rem' }} className=\"m-3\">\n              <Card.Body>\n                <Card.Title>Submitted</Card.Title>\n                {formatter.format(bulkCash.amount)}\n              </Card.Body>\n            </Card>\n          </div>\n\n          <div classname=\"m-3\">\n            <Card style={{ width: '12rem', height: '6rem' }} className=\"m-3\">\n              <Card.Body>\n                <Card.Title>Payments</Card.Title>\n                {formatter.format(payments)}\n              </Card.Body>\n            </Card>\n          </div>\n\n          <div classname=\"m-3 justify-content-right\">\n            <Card\n              style={{ width: '12rem', height: '6rem' }}\n              className={\n                parseFloat(bulkCash.amount - payments) > 0\n                  ? 'positivebalcolor m-3'\n                  : 'negativebalcolor m-3'\n              }\n            >\n              <Card.Body>\n                <Card.Title>\n                  {parseFloat(bulkCash.amount - payments) < 0\n                    ? 'Overage'\n                    : 'Balance'}\n                </Card.Title>\n                {formatter.format(parseFloat(bulkCash.amount - payments))}\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n\n        <CButton\n          className=\"mt-3 mb-2 float-right\"\n          onClick={handleMakePayment}\n          color=\"success\"\n        >\n          Make Loan Payments\n        </CButton>\n        <Table className=\"table align-left mb-0 bg-white table-sm\">\n          <thead>\n            <tr className=\"fs-sm\">\n              <th></th>\n              <th>Customer</th>\n              <th>Mode</th>\n              <th>Amount</th>\n              <th>Status</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {daysPayments.map((c, index) => (\n              <tr key={c.id}>\n                <td>{index + 1}</td>\n\n                <td>{c.Customer}</td>\n                <td>{c.ModeOfPayment}</td>\n                <td>{formatter.format(c.Amount)}</td>\n                <td>{c.status}</td>\n                {c.status === 'Not Submitted' ? (\n                  <td>\n                    <CButton\n                      className=\"btn-sm\"\n                      color=\"danger\"\n                      onClick={() => handleRemovePayment(c)}\n                    >\n                      remove\n                    </CButton>\n                  </td>\n                ) : null}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <div className=\"d-flex mt-5 justify-content-center\">\n          {bulkCash.amount + bulkCash.shortage - bulkCash.overage - payments ==\n            0 && (\n            <CButton\n              className=\"col-sm-3 float-center\"\n              color=\"danger\"\n              onClick={handleSubmitCollections}\n            >\n              Submit Days Collections\n            </CButton>\n          )}\n        </div>\n      </div>\n\n      <Modal\n        className=\"modalCustomer fade \"\n        size=\"md\"\n        show={show}\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n      >\n        <Modal.Body className=\"modal-body col-sm-12\">\n          <div className=\"float-center mb-2\">\n            <CInput\n              className=\"col-sm-12 mb-2 text-center\"\n              placeholder=\" Search Loan Customer\"\n              onChange={handleSearch}\n            />\n          </div>\n          <Table className=\"table mb-3 mt-2 align-middle mb-0 bg-white table-sm\">\n            <thead>\n              <tr className=\"fs-sm\">\n                <th>A/C No.</th>\n                <th>Name</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((c, index) => (\n                <tr key={c.id} onClick={() => handleCustomerSelect(c)}>\n                  <td>{c.accountNumber}</td>\n                  <td>{c.fullName}</td>\n                  <td>\n                    <CButton\n                      color=\"danger\"\n                      onClick={() => handleCustomerSelect(c)}\n                      className=\"btn-sm\"\n                    >\n                      Select\n                    </CButton>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n\n          <form>\n            <label htmlFor=\"nameOfOfficer\" className=\"form-label\">\n              Name of Customer\n            </label>\n            <CInput\n              name=\"nameOfCustomer\"\n              className=\"text-center\"\n              type=\"text\"\n              id=\"nameOfCustomer\"\n              value={fullName}\n              autoComplete=\"off\"\n              readOnly\n            />\n\n            <label htmlFor=\"Balance\" className=\"form-label\">\n              Current Loan Balance\n            </label>\n            <CInput\n              name=\"Balance\"\n              className=\"form-control  text-center\"\n              type=\"text\"\n              id=\"Balance\"\n              value={formatter.format(loanBal)}\n              autoComplete=\"off\"\n              readOnly\n            />\n\n            <CSelect\n              className=\"form-select  mb-3 mt-4 text-center\"\n              aria-label=\".form-select-lg\"\n              value={loanPayments.modeOfPayment}\n              onChange={(e) =>\n                setLoanPayments({\n                  ...loanPayments,\n                  modeOfPayment: e.currentTarget.value,\n                })\n              }\n            >\n              <option value=\"\">Select Mode of Payment</option>\n              <option value=\"Cash\">Cash</option>\n              {/* <option value=\"Mobile Money\">Mobile Money</option>*/}\n            </CSelect>\n\n            <label htmlFor=\"amountReceived\" className=\"form-label\">\n              Amount (GHS)\n            </label>\n            <CInput\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"amountReceived\"\n              className=\"form-control  text-right\"\n              id=\"amountReceived\"\n              value={loanPayments.amount}\n              onChange={handleAmountChange}\n            />\n\n            <label htmlFor=\"comment\" className=\"form-label\">\n              Comment\n            </label>\n            <CInput\n              autoComplete=\"off\"\n              type=\"textArea\"\n              name=\"comment\"\n              className=\"form-control text-center\"\n              id=\"comment\"\n              value={null}\n              autoComplete=\"off\"\n              onChange={(e) =>\n                setLoanPayments({\n                  ...loanPayments,\n                  //comment: e.currentTarget.value,\n                })\n              }\n            />\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          {save && (\n            <CButton onClick={handleSubmit} color=\"success\">\n              Submit\n            </CButton>\n          )}\n          {edit && (\n            <CButton onClick={handleUpdate} color=\"info\">\n              Update\n            </CButton>\n          )}\n          <CButton onClick={handleClose} color=\"danger\">\n            Close\n          </CButton>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\n\nexport default LoanRepayment\n"],"sourceRoot":""}