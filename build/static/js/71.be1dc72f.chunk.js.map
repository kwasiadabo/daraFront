{"version":3,"sources":["views/pages/holiday.js"],"names":["HolidaySetup","useState","holiday","hdate","year","setHoliday","holidays","setHolidays","Date","getFullYear","currentYear","setCurrentYear","editMode","setEditMode","render","setRender","useEffect","a","axios","get","baseUrl","apiUrl","results","data","getHolidays","joiHolidaySchema","Joi","object","keys","string","required","label","date","number","validateEntry","result","validate","error","details","message","handleSubmit","post","status","Swal","fire","handleUpdate","e","console","log","put","handleDelete","delete","id","className","htmlFor","aria-label","value","onChange","currentTarget","defaultValue","autoComplete","name","type","onClick","color","map","c","index","key","Style","p","toISOString","slice","moment","format"],"mappings":"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","file":"static/js/71.be1dc72f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Joi from 'joi-browser'\nimport moment from 'moment'\nimport momentBusinessDays from 'moment-business-days'\nimport baseUrl from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Swal from 'sweetalert2'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst HolidaySetup = () => {\n  const [holiday, setHoliday] = useState({\n    holiday: '',\n    hdate: '',\n    year: '',\n  })\n  const [holidays, setHolidays] = useState([])\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear())\n  const [editMode, setEditMode] = useState(false)\n  const [render, setRender] = useState(false)\n\n  useEffect(() => {\n    async function getHolidays() {\n      const yearInt = new Date()\n      const results = await axios.get(\n        baseUrl.apiUrl + '/setup/holiday/' + currentYear,\n      )\n      setHolidays(results.data)\n    }\n    getHolidays()\n  }, [currentYear, render])\n\n  const [disableButton, setDisableButton] = useState(false)\n\n  const joiHolidaySchema = Joi.object().keys({\n    holiday: Joi.string().required().label('Holiday'),\n    hdate: Joi.date().required().label('date'),\n    year: Joi.number().required().label('Holiday Year'),\n  })\n\n  const validateEntry = () => {\n    const result = Joi.validate(holidays, joiHolidaySchema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const handleDateChange = (e) => {\n    const year = new Date(e.currentTarget.value)\n    setHoliday({\n      ...holiday,\n      hdate: e.currentTarget.value,\n      year: year.getFullYear(),\n    })\n  }\n\n  const handleOnEdit = (p) => {\n    console.log(p)\n    setEditMode(true)\n    setHoliday({\n      id: p.id,\n      holiday: p.holiday,\n      hdate: new Date(p.hdate).toISOString().slice(0, 10),\n      year: p.year,\n    })\n    //setDisabled(!disabled);\n  }\n\n  const handleSubmit = async () => {\n    // console.log(holiday)\n    validateEntry()\n    try {\n      const results = await axios.post(\n        baseUrl.apiUrl + '/setup/holiday',\n        holiday,\n      )\n\n      if (results.status === 200) {\n        Swal.fire('Success', 'Holiday Saved', 'success')\n        setRender(!render)\n      } else {\n        Swal.fire('OOPS !', 'Saving Holiday, failed !', 'error')\n      }\n    } catch (err) {\n      Swal.fire(err + ' Saving Holiday, failed !', 'error')\n    }\n    setHoliday({ holiday: '', hdate: '' })\n  }\n\n  const handleUpdate = async (e) => {\n    console.log(holiday)\n    if (holiday.holiday !== '') {\n      try {\n        const results = await axios.put(\n          baseUrl.apiUrl + '/setup/holiday',\n          holiday,\n        )\n        if (results.status !== 200) {\n          return Swal.fire(\n            'OOPS !',\n            'Submission Failed ! Check Entries and try again !',\n            'error',\n          )\n        } else {\n          Swal.fire('Success', 'Holiday Updated Successfully', 'success')\n\n          setHoliday({\n            holiday: '',\n            hdate: '',\n            year: '',\n          })\n          setRender(!render)\n          setEditMode(false)\n          setRender(!render)\n        }\n      } catch (err) {\n        Swal.fire('OOPS ! ' + err.message, 'error')\n      }\n    } else {\n      return Swal.fire('OOPS', 'Enter all Details !', 'error')\n    }\n  }\n\n  const handleDelete = async () => {\n    if (holiday.holiday !== '') {\n      try {\n        const results = await axios.delete(\n          baseUrl.apiUrl + '/setup/holiday/' + holiday.id,\n        )\n        if (results.status !== 200) {\n          return Swal.fire(\n            'OOPS !',\n            'Submission Failed ! Check Entries and try again !',\n            'error',\n          )\n        } else {\n          Swal.fire('Success', 'Holiday Deleted Successfully', 'success')\n          setHoliday({\n            holiday: '',\n            hdate: '',\n            year: '',\n          })\n          setRender(!render)\n          setEditMode(false)\n          setRender(!render)\n        }\n      } catch (err) {\n        Swal.fire('OOPS ! ' + err.message, 'error')\n      }\n    } else {\n      return Swal.fire('OOPS', 'Select Holiday !', 'error')\n    }\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"centertext m-3\">Set up Holidays</h3>\n      <p className=\"centertext m-3\">\n        Set up public holidays here. NB: Holidays are to be setup every year.\n      </p>\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"dailysales\" className=\"col-sm-2\">\n          Year\n        </CLabel>\n        <CSelect\n          className=\"form-select col-sm-8 mb-3\"\n          aria-label=\"Default\"\n          value={currentYear}\n          onChange={(e) => setCurrentYear(e.currentTarget.value)}\n        >\n          <option value={new Date().getFullYear() - 4}>\n            {new Date().getFullYear() - 4}\n          </option>\n          <option value={new Date().getFullYear() - 3}>\n            {new Date().getFullYear() - 3}\n          </option>\n          <option value={new Date().getFullYear() - 2}>\n            {new Date().getFullYear() - 2}\n          </option>\n          <option value={new Date().getFullYear() - 1}>\n            {new Date().getFullYear() - 1}\n          </option>\n          <option defaultValue={new Date().getFullYear()}>\n            {new Date().getFullYear()}\n          </option>\n          <option value={new Date().getFullYear() + 1}>\n            {new Date().getFullYear() + 1}\n          </option>\n          <option value={new Date().getFullYear() + 2}>\n            {new Date().getFullYear() + 2}\n          </option>\n          <option value={new Date().getFullYear() + 3}>\n            {new Date().getFullYear() + 3}\n          </option>\n          <option value={new Date().getFullYear() + 4}>\n            {new Date().getFullYear() + 4}\n          </option>\n        </CSelect>\n      </CInputGroup>\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"holiday\" className=\"col-sm-2\">\n          Holiday\n        </CLabel>\n        <CInput\n          autoComplete=\"off\"\n          name=\"holiday\"\n          type=\"text\"\n          className=\"form-control col-sm-8\"\n          value={holiday.holiday}\n          onChange={(e) =>\n            setHoliday({\n              ...holiday,\n              holiday: e.currentTarget.value,\n            })\n          }\n        />\n      </CInputGroup>\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"dailysales\" className=\"col-sm-2\">\n          Holiday Date\n        </CLabel>\n        <CInput\n          name=\"hdate\"\n          type=\"date\"\n          className=\"form-control col-sm-8\"\n          value={holiday.hdate}\n          onChange={handleDateChange}\n        />\n      </CInputGroup>\n      <div className=\"row justify-content-center\">\n        {!editMode ? (\n          <CButton\n            className=\"btn btn-primary col-sm-2 mt-3 btn-sm\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </CButton>\n        ) : null}\n        {editMode ? (\n          <CButton\n            className=\"btn-sm m-3 col-sm-2\"\n            color=\"success\"\n            onClick={handleUpdate}\n          >\n            Update\n          </CButton>\n        ) : null}\n\n        {editMode && (\n          <CButton\n            className=\"btn btn-danger col-sm-2 m-3 btn-sm\"\n            onClick={handleDelete}\n          >\n            Delete\n          </CButton>\n        )}\n      </div>\n      <Table className=\"sm mt-3\">\n        <thead>\n          <tr className=\"fs-sm\">\n            <th></th>\n            <th>Holiday</th>\n            <th>Date</th>\n            <th>Year</th>\n          </tr>\n        </thead>\n        <tbody>\n          {holidays.map((c, index) => (\n            <tr\n              key={c.id}\n              Style=\"cursor: pointer;\"\n              onClick={() => handleOnEdit(c)}\n            >\n              <td>{index + 1}</td>\n              <td>{c.holiday}</td>\n              <td>{moment(c.hdate).format('DD-MMMM-YYYY')}</td>\n              <td>{c.year}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default HolidaySetup\n"],"sourceRoot":""}