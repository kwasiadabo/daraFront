{"version":3,"sources":["views/setup/Leave.js","views/users/UsersData.js"],"names":["LeaveSetup","useState","leaveData","setLeaveData","id","leave","leaveSetup","setLeaveSetup","visible","setVisible","search","setSearch","setLeave","useEffect","a","axios","get","results","data","getLeaves","Joi","object","keys","string","required","label","handleSubmit","post","status","Swal","fire","title","text","icon","leaves","filter","item","toLowerCase","includes","dataTouse","length","handleUpdateLeave","put","htmlFor","className","size","type","onChange","event","target","value","color","onClick","show","onClose","closeButton","xs","md","action","method","row","name","placeholder","e","map","s","index","key","_id","handleEditClicked","usersData","registered","role","ok"],"mappings":"oUA4XeA,UA1UI,WAAO,IAAD,EACWC,mBAAS,IADpB,mBAChBC,EADgB,KACLC,EADK,OAEaF,mBAAS,CAC3CG,GAAI,GACJC,MAAO,KAJc,mBAEhBC,EAFgB,KAEJC,EAFI,OAwBON,oBAAS,GAxBhB,mBAwBhBO,EAxBgB,KAwBPC,EAxBO,OAyBKR,mBAAS,IAzBd,mBAyBhBS,EAzBgB,KAyBRC,EAzBQ,OA2BGV,mBAAS,IA3BZ,mBA2BhBI,EA3BgB,KA2BTO,EA3BS,OA4BmBX,oBAAS,GA5B5B,gCA6BWA,mBAAS,KA7BpB,6BA+BvBY,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBC,IAAMC,IAC1B,gDAFJ,OACQC,EADR,OAIEd,EAAac,EAAQC,MAJvB,4CADc,uBAAC,WAAD,wBASdC,KACC,CAACjB,IAEmBkB,IAAIC,SAASC,KAAK,CACvCjB,MAAOe,IAAIG,SAASC,WAAWC,MAAM,gBADvC,IAiBMC,EAAY,uCAAG,sBAAAZ,EAAA,sEACGC,IAAMY,KAC1B,+CACA,CAAEtB,MAAOA,IAHQ,OAMI,MANJ,OAMPuB,QACVC,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM,2BACNC,KAAM,YAERxB,GAAW,IAEXoB,IAAKC,KAAK,CAAEC,MAAO,QAASC,KAAM,eAAgBC,KAAM,WAE1DrB,EAAS,IAhBU,2CAAH,qDAsBZM,EAAO,CACXgB,OAAQhC,EAAUiC,QAAO,SAACC,GAAD,OACvBA,EAAK/B,MAAMgC,cAAcC,SAAS5B,EAAO2B,mBAIvCE,EAA8B,IAAlB7B,EAAO8B,OAAetC,EAAYgB,EAAKgB,OAQnDO,EAAiB,uCAAG,sBAAA3B,EAAA,sEACFC,IAAM2B,IAC1B,+CACApC,EAAWF,GACX,CAAEC,MAAOA,IAJa,OAOD,MAPC,OAOZuB,QACVC,IAAKC,KAAK,CACRC,MAAO,UACPC,KAAM,6BACNC,KAAM,YAERxB,GAAW,IAEXoB,IAAKC,KAAK,CACRC,MAAO,QACPC,KAAM,sBACNC,KAAM,WAGVrB,EAAS,IArBe,2CAAH,qDAwBvB,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,6BACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQ+B,QAAQ,yBAChB,yBAAKC,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACExC,GAAG,uBACHyC,KAAK,KACLC,KAAK,OACLC,SAzDH,SAACC,GACpBrC,EAAUqC,EAAMC,OAAOC,UA0DH,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,MAAM,WAAf,WAEF,kBAAC,IAAD,CACEA,MAAM,UACNC,QAAS,kBAAM3C,GAAYD,KAF7B,eAKW,IACX,kBAAC,IAAD,CACE2C,MAAM,UACNC,QAAS,kBAAM3C,GAAYD,KAF7B,wBAmBd,kBAAC,KAAD,CACE6C,KAAM7C,EACN8C,QAAS,kBAAM7C,GAAYD,IAC3B2C,MAAM,UACNN,KAAK,MAEL,kBAAC,KAAD,CAAcU,aAAW,GACvB,kBAAC,KAAD,+BAEF,kBAAC,KAAD,KACE,8BACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,MACf,kBAAC,IAAD,KACE,kBAAC,IAAD,yBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAO,GACPC,OAAO,OACPf,UAAU,mBAEV,kBAAC,IAAD,CAAYgB,KAAG,GACb,kBAAC,IAAD,CAAMH,GAAG,MACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASX,KAAK,UAAUK,MAAM,WAC5B,kBAAC,IAAD,CAAOU,KAAK,2BAGhB,kBAAC,IAAD,CACEzD,GAAG,YACHyD,KAAK,YACLC,YAAY,aACZZ,MAAO7C,EACP0C,SAjJR,SAACgB,GACzBnD,EAASmD,EAAEd,OAAOC,oBA4JR,kBAAC,KAAD,KACE,kBAAC,IAAD,CAASC,MAAM,UAAUN,KAAK,KAAKO,QAAS1B,GAA5C,QAEW,IACX,kBAAC,IAAD,CACEyB,MAAM,UACNN,KAAK,KACLO,QAAS,kBAAM3C,GAAYD,KAH7B,SAOA,kBAAC,IAAD,CAAS2C,MAAM,OAAON,KAAK,KAAKO,QAASX,GAAzC,UAEW,IACX,kBAAC,IAAD,CACEU,MAAM,SACNN,KAAK,KACLO,QAAS,kBAAM3C,GAAYD,KAH7B,YAUJ,kBAAC,IAAD,KAyCE,2BAAOoC,UAAU,0DACf,yDACA,2BAAOA,UAAU,eACf,4BACE,2CACA,qCACA,wCAGJ,2BAAOA,UAAU,IACdL,EAAUyB,KAAI,SAACC,EAAGC,GAAJ,OACb,wBAAIC,IAAKF,EAAEG,KACT,4BAAKF,EAAQ,GACb,4BAAKD,EAAE5D,OAEP,wBAAIuC,UAAU,eACZ,kBAAC,IAAD,CACEO,MAAM,OACNN,KAAK,KACLO,QAAS,kBA/MP,SAACa,GACzBrD,EAASqD,EAAE5D,OACXE,EAAc,2BAAKD,GAAN,IAAkBF,GAAI6D,EAAEG,OACrC3D,GAAYD,GA4MyB6D,CAAkBJ,KAHnC,eA2BV,uBAAGrB,UAAU,SAAb,WAA8BL,EAAUC,OAAxC,qB,iCCjVC8B,IAlCG,CAChB,CAAClE,GAAI,EAAGyD,KAAM,WAAYU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UAAW6C,GAAI,WAC1F,CAACrE,GAAI,EAAGyD,KAAM,cAAeU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,UAC/E,CAACxB,GAAI,EAAGyD,KAAM,gBAAiBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UAChF,CAACxB,GAAI,EAAGyD,KAAM,iBAAkBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,YACjF,CAACxB,GAAI,EAAGyD,KAAM,mBAAoBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,WACpF,CAACxB,GAAI,EAAGyD,KAAM,oBAAkBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UACjF,CAACxB,GAAI,EAAGyD,KAAM,kBAAmBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,UACnF,CAACxB,GAAI,EAAGyD,KAAM,iBAAkBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UACjF,CAACxB,GAAI,EAAGyD,KAAM,aAAcU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,YAC7E,CAACxB,GAAI,EAAGyD,KAAM,kBAAgBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,WAChF,CAACxB,GAAI,GAAIyD,KAAM,0BAAmBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UACnF,CAACxB,GAAI,GAAIyD,KAAM,iBAAkBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,UACnF,CAACxB,GAAI,GAAIyD,KAAM,kBAAmBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UACnF,CAACxB,GAAI,GAAIyD,KAAM,gBAAiBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,YACjF,CAACxB,GAAI,GAAIyD,KAAM,qBAAsBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,WACvF,CAACxB,GAAI,GAAIyD,KAAM,uBAAkBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UAClF,CAACxB,GAAI,GAAIyD,KAAM,mBAAiBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,UAClF,CAACxB,GAAI,GAAIyD,KAAM,mBAAeU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UAC/E,CAACxB,GAAI,GAAIyD,KAAM,oBAAqBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,YACrF,CAACxB,GAAI,GAAIyD,KAAM,oBAAqBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,WACtF,CAACxB,GAAI,GAAIyD,KAAM,oBAAgBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UAChF,CAACxB,GAAI,GAAIyD,KAAM,iBAAkBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,UACnF,CAACxB,GAAI,GAAIyD,KAAM,sBAAkBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UAClF,CAACxB,GAAI,GAAIyD,KAAM,gBAAiBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,WAClF,CAACxB,GAAI,GAAIyD,KAAM,eAAgBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,gBAChF,CAACxB,GAAI,GAAIyD,KAAM,eAAgBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,gBAChF,CAACxB,GAAI,GAAIyD,KAAM,sBAAkBU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,UAClF,CAACxB,GAAI,GAAIyD,KAAM,gBAAiBU,WAAY,aAAcC,KAAM,SAAU5C,OAAQ,WAClF,CAACxB,GAAI,GAAIyD,KAAM,YAAaU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ,gBAC7E,CAACxB,GAAI,GAAIyD,KAAM,YAAaU,WAAY,aAAcC,KAAM,QAAS5C,OAAQ","file":"static/js/30.b4fe7341.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport Swal from \"sweetalert2\";\n//import NavHeader from \"../../components/navHeader\";\n//import { toast } from \"react-toastify\";\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  //CDropdownItem,\n  CForm,\n  //CCardFooter,\n  //CDropdownToggle,\n  //CInputRadio,\n  //CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  //CSelect,\n  //CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from \"@coreui/react\";\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from \"../users/UsersData\";\n\nconst LeaveSetup = () => {\n  const [leaveData, setLeaveData] = useState([]);\n  const [leaveSetup, setLeaveSetup] = useState({\n    id: \"\",\n    leave: \"\",\n  });\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Active\":\n        return \"success\";\n      case \"Inactive\":\n        return \"secondary\";\n      case \"Pending\":\n        return \"warning\";\n      case \"Banned\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  //{id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending', ok: 'Pending'}\n  const fields = [\"_id\", \"leave\", \"Action\"];\n  const [visible, setVisible] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const [leave, setLeave] = useState(\"\");\n  const [disableButton, setDisableButton] = useState(false);\n  const [allLeaves, setAllLeaves] = useState({});\n\n  useEffect(() => {\n    async function getLeaves() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/leaves\"\n      );\n      setLeaveData(results.data);\n\n      //setLeaveData(\n    }\n    getLeaves();\n  }, [leaveData]);\n\n  const joiLeaveSchema = Joi.object().keys({\n    leave: Joi.string().required().label(\"Department\"),\n  });\n\n  const validateEntry = () => {\n    const result = Joi.validate(leave, joiLeaveSchema);\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  const handleLeaveChange = (e) => {\n    setLeave(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    const results = await axios.post(\n      \"https://ugmcservice.herokuapp.com/api/leaves\",\n      { leave: leave }\n    );\n\n    if (results.status === 200) {\n      Swal.fire({\n        title: \"Succss\",\n        text: \"Leave Successfully Added\",\n        icon: \"success\",\n      });\n      setVisible(false);\n    } else {\n      Swal.fire({ title: \"Oops!\", text: \"Leave Failed\", icon: \"danger\" });\n    }\n    setLeave(\"\");\n  };\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  };\n  const data = {\n    leaves: leaveData.filter((item) =>\n      item.leave.toLowerCase().includes(search.toLowerCase())\n    ),\n  };\n\n  const dataTouse = search.length === 0 ? leaveData : data.leaves;\n\n  const handleEditClicked = (s) => {\n    setLeave(s.leave);\n    setLeaveSetup({ ...leaveSetup, id: s._id });\n    setVisible(!visible);\n  };\n\n  const handleUpdateLeave = async () => {\n    const results = await axios.put(\n      \"https://ugmcservice.herokuapp.com/api/leaves\",\n      leaveSetup.id,\n      { leave: leave }\n    );\n\n    if (results.status === 200) {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Leave Successfully Updated\",\n        icon: \"success\",\n      });\n      setVisible(false);\n    } else {\n      Swal.fire({\n        title: \"Oops!\",\n        text: \"Leave Update Failed\",\n        icon: \"danger\",\n      });\n    }\n    setLeave(\"\");\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <div>\n              <CModalHeader>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n                    <div className=\"controls\">\n                      <CInputGroup>\n                        <CInput\n                          id=\"appendedInputButtons\"\n                          size=\"16\"\n                          type=\"text\"\n                          onChange={handleSearch}\n                        />\n                        <CInputGroupAppend>\n                          <CCol>\n                            <CButton color=\"primary\">Search</CButton>\n                          </CCol>\n                          <CButton\n                            color=\"primary\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            + New Leave\n                          </CButton>{\" \"}\n                          <CButton\n                            color=\"success\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            Export Report\n                          </CButton>\n                        </CInputGroupAppend>\n                      </CInputGroup>\n                    </div>\n                  </CFormGroup>\n                </CCol>\n              </CModalHeader>\n            </div>\n\n            {/*<CButton color=\"success\" onClick={() => setSuccess(!success)} className=\"mr-1\">Success modal</CButton>\n            <CButton color=\"warning\" onClick={() => setWarning(!warning)} className=\"mr-1\">Warning modal</CButton>\n            <CButton color=\"danger\" onClick={() => setDanger(!danger)} className=\"mr-1\">Danger modal</CButton>\n  <CButton color=\"info\" onClick={() => setInfo(!info)} className=\"mr-1\">Info modal</CButton>*/}\n\n            <CModal\n              show={visible}\n              onClose={() => setVisible(!visible)}\n              color=\"primary\"\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>System Setup | Leave </CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <form>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CCard>\n                        <CCardHeader>LEAVE MANAGEMENT</CCardHeader>\n                        <CCardBody>\n                          <CForm\n                            action=\"\"\n                            method=\"post\"\n                            className=\"form-horizontal\"\n                          >\n                            <CFormGroup row>\n                              <CCol md=\"12\">\n                                <CInputGroup>\n                                  <CInputGroupPrepend>\n                                    <CButton type=\"InsName\" color=\"primary\">\n                                      <CIcon name=\"cil-magnifying-glass\" />\n                                    </CButton>\n                                  </CInputGroupPrepend>\n                                  <CInput\n                                    id=\"LeaveName\"\n                                    name=\"LeaveName\"\n                                    placeholder=\"Leave Name\"\n                                    value={leave}\n                                    onChange={handleLeaveChange}\n                                  />\n                                </CInputGroup>\n                              </CCol>\n                            </CFormGroup>\n                          </CForm>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                  </CRow>\n                </form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"success\" size=\"sm\" onClick={handleSubmit}>\n                  Save\n                </CButton>{\" \"}\n                <CButton\n                  color=\"warning\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Reset\n                </CButton>\n                <CButton color=\"info\" size=\"sm\" onClick={handleUpdateLeave}>\n                  Update\n                </CButton>{\" \"}\n                <CButton\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Cancel\n                </CButton>\n              </CModalFooter>\n            </CModal>\n\n            <CCardBody>\n              {/* <CDataTable\n              items={dataTouse}\n              fields={fields}\n              dark\n              hover\n              striped\n              bordered\n              size=\"sm\"\n              itemsPerPage={20}\n              pagination\n              scopedSlots = {{\n                'Action':\n                  (item)=>(\n               \n                      \n                    <td>\n                      <tr>\n                      <CButton color=\"info\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n                </CButton>\n\n\n<CButton color=\"danger\" size=\"sm\" onClick={() => setVisible(!visible)}>\nCancel\n</CButton>\n\n<CButton color=\"primary\" size=\"sm\" onClick={() => setVisible(!visible)}>\nCancel\n</CButton>\n</tr>\n\n</td>\n\n\n                \n                    \n                  )\n              }}\n            />*/}\n\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <caption>Unapproved Schedules</caption>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>Line Number</th>\n                    <th>Leave</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody className=\"\">\n                  {dataTouse.map((s, index) => (\n                    <tr key={s._id}>\n                      <td>{index + 1}</td>\n                      <td>{s.leave}</td>\n\n                      <td className=\"float-right\">\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          onClick={() => handleEditClicked(s)}\n                        >\n                          Edit\n                        </CButton>\n\n                        {/*<CButton color=\"primary\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n                </CButton>\n                <CButton color=\"danger\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n              </CButton>*/}\n                      </td>\n                      {/*<td>\n                    <button\n                      className=\"but btn-houReject\"\n                      onClick={() => handleShow(s)}\n                    >\n                      Reject\n                    </button>\n                  </td>*/}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <p className=\"hou-p\">Showing {dataTouse.length} Leaves...</p>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default LeaveSetup;\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending', ok: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 43, name: 'Ford Correct', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'},\n  {id: 44, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 45, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 46, name: 'Ford Good', registered: '2008/05/25', role: 'Avata', status: 'Don\\'t panic!'},\n  {id: 47, name: 'Ford Fine', registered: '2009/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n  \n]\n\nexport default usersData\n"],"sourceRoot":""}