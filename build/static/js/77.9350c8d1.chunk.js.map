{"version":3,"sources":["views/pages/loansDisbursed.jsx"],"names":["LoansDisbursed","useState","loansDisbursed","setLoansDisbursed","Date","toISOString","slice","startDate","setStartDate","endDate","setEndDate","useHistory","useEffect","a","axios","get","apiUrl","results","data","getLoansDisbursed","formatter","Intl","NumberFormat","style","currency","totalPrincipal","reduce","i","principal","totalInterest","interestRate","totalProcessingFee","processingFee","totalRegistrationFee","registrationFee","totalCollateral","collateral","className","class","htmlFor","type","id","value","onChange","e","currentTarget","format","color","onClick","url","reportUrl","window","open","map","c","index","key","idNumber","Style","tDate","Customer","loanId"],"mappings":"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","file":"static/js/77.9350c8d1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Link, useHistory, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { apiUrl, reportUrl } from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport formData from 'form-data'\n\n//import '../../table.css'\n\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  ButtonDropdowns,\n  //CForm,\n  CDropdownDivider,\n  CInputCheckbox,\n  CLink,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nconst LoansDisbursed = () => {\n  const [loansDisbursed, setLoansDisbursed] = useState([])\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10))\n  let navigate = useHistory()\n\n  useEffect(() => {\n    async function getLoansDisbursed() {\n      const results = await axios.get(\n        apiUrl + '/loanreports/loansDisbursed/' + startDate + '/' + endDate,\n      )\n      setLoansDisbursed(results.data)\n    }\n    getLoansDisbursed()\n  }, [startDate, endDate])\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e.currentTarget.value)\n  }\n  const handleEndDateChange = (e) => {\n    setEndDate(e.currentTarget.value)\n  }\n\n  const totalPrincipal = loansDisbursed.reduce((a, i) => {\n    return a + i.principal\n  }, 0)\n\n  const totalInterest = loansDisbursed.reduce((a, i) => {\n    return a + i.interestRate\n  }, 0)\n\n  const totalProcessingFee = loansDisbursed.reduce((a, i) => {\n    return a + i.processingFee\n  }, 0)\n\n  const totalRegistrationFee = loansDisbursed.reduce((a, i) => {\n    return a + i.registrationFee\n  }, 0)\n\n  const totalCollateral = loansDisbursed.reduce((a, i) => {\n    return a + i.collateral\n  }, 0)\n\n  return (\n    <div>\n      <div className=\"col-sm-12 mt-3\">\n        <h3>Loans Disbursed</h3>\n        <div class=\"mb-3 row mt-5 col-sm-12\">\n          <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n            Start Date\n          </CLabel>\n          <div className=\"col-sm-3\">\n            <CInput\n              type=\"date\"\n              class=\"form-control\"\n              id=\"dateOnCheque\"\n              value={startDate}\n              onChange={handleStartDateChange}\n            />\n          </div>\n          <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n            End Date\n          </CLabel>\n          <div className=\"col-sm-3\">\n            <CInput\n              type=\"date\"\n              class=\"form-control\"\n              id=\"dateOnCheque\"\n              value={endDate}\n              onChange={handleEndDateChange}\n            />\n          </div>\n          <div className=\"row mt-3 \">\n            <div className=\"col-sm-4 text-right\">\n              Total Principal:{' '}\n              <strong>{formatter.format(totalPrincipal)}</strong>\n            </div>\n            <div className=\"col-sm-4 text-right\">\n              Total Interest Rate:{' '}\n              <strong>{formatter.format(totalInterest)}</strong>\n            </div>\n            <div className=\"col-sm-4 text-right\">\n              Total Processing Fee:{' '}\n              <strong>{formatter.format(totalProcessingFee)}</strong>\n            </div>\n            <div className=\"col-sm-4 text-right\">\n              Total registration Fee:{' '}\n              <strong>{formatter.format(totalRegistrationFee)}</strong>\n            </div>\n            <div className=\"col-sm-4 text-right\">\n              Total Collateral:{' '}\n              <strong>{formatter.format(totalCollateral)}</strong>\n            </div>\n          </div>\n        </div>\n        <div className=\"table-responsive\">\n          <CButton\n            color=\"success\"\n            className=\"col-sm-2 float-right btn-sm mb-3\"\n            onClick={() =>\n              openCustomerListAsReport(\n                reportUrl + '/loansDisbursed.aspx?' + startDate + '?' + endDate,\n              )\n            }\n          >\n            View as Report\n          </CButton>\n          <Table className=\"table-sm\">\n            <thead>\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Date</th>\n                <th>Customer</th>\n                <th>Loan ID</th>\n                <th>Principal</th>\n                <th>Interest Rate</th>\n                <th>Proc. Fee</th>\n                <th>Reg. Fee</th>\n                <th>Collateral</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loansDisbursed.map((c, index) => (\n                <tr\n                  key={c.idNumber}\n                  // onClick={() => customerView(c)}\n                  Style=\"cursor: pointer;\"\n                >\n                  <td>{index + 1}</td>\n                  <td>{c.tDate}</td>\n                  <td>{c.Customer}</td>\n                  <td>{c.loanId}</td>\n                  <td>{formatter.format(c.principal)}</td>\n                  <td>{formatter.format(c.interestRate)}</td>\n                  <td>{formatter.format(c.processingFee)}</td>\n                  <td>{formatter.format(c.registrationFee)}</td>\n                  <td>{formatter.format(c.collateral)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//  <td>{moment(s.startDate).format(\"DD,MMMM,YYYY\")}</td>\nexport default LoansDisbursed\n"],"sourceRoot":""}