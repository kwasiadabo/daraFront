{"version":3,"sources":["views/pages/bank.js"],"names":["Bank","useState","bank","setBank","banks","setBanks","editMode","setEditMode","render","setRender","useEffect","a","axios","get","baseUrl","apiUrl","results","data","getBanks","handleSubmit","post","status","Swal","fire","message","handleUpdate","e","put","handleDelete","delete","id","className","htmlFor","type","value","onChange","currentTarget","onClick","class","map","c","index","key","Style","p"],"mappings":"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","file":"static/js/62.6190b17e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport baseUrl from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Swal from 'sweetalert2'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst Bank = () => {\n  const [bank, setBank] = useState({\n    bank: '',\n  })\n  const [banks, setBanks] = useState([])\n  const [editMode, setEditMode] = useState(false)\n  const [render, setRender] = useState(false)\n\n  useEffect(() => {\n    async function getBanks() {\n      const results = await axios.get(baseUrl.apiUrl + '/setup/bank')\n      setBanks(results.data)\n    }\n    getBanks()\n    //console.log(banks)\n  }, [render])\n\n  const handleSubmit = async () => {\n    try {\n      const results = await axios.post(baseUrl.apiUrl + '/setup/bank', bank)\n\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPS',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire('Success', 'Bank Name Saved Successfully', 'success')\n        setBank({\n          bank: '',\n        })\n        setRender(!render)\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ' + err.message, 'error')\n    }\n  }\n  const handleOnEdit = (p) => {\n    setEditMode(true)\n    setBank({\n      bank: p.bank,\n      id: p.id,\n    })\n    //setDisabled(!disabled);\n  }\n\n  const handleUpdate = async (e) => {\n    if (bank.bank !== '') {\n      try {\n        const results = await axios.put(baseUrl.apiUrl + '/setup/bank', bank)\n        if (results.status !== 200) {\n          return Swal.fire(\n            'OOPS !',\n            'Submission Failed ! Check Entries and try again !',\n            'error',\n          )\n        } else {\n          Swal.fire('Success', 'Bank Updated Successfully', 'success')\n          setBank({\n            bank: '',\n          })\n          setEditMode(false)\n          setRender(!render)\n        }\n      } catch (err) {\n        Swal.fire('OOPS ! ' + err.message, 'error')\n      }\n    } else {\n      return Swal.fire('OOPS', 'Enter all Details !', 'error')\n    }\n  }\n\n  const handleDelete = async () => {\n    if (bank.bank !== '') {\n      try {\n        const results = await axios.delete(\n          baseUrl.apiUrl + '/setup/bank/' + bank.id,\n        )\n        if (results.status !== 200) {\n          return Swal.fire(\n            'OOPS !',\n            'Submission Failed ! Check Entries and try again !',\n            'error',\n          )\n        } else {\n          Swal.fire('Success', 'Bank Deleted Successfully', 'success')\n          setBank({\n            bank: '',\n          })\n          setEditMode(false)\n          setRender(!render)\n        }\n      } catch (err) {\n        Swal.fire('OOPS ! ' + err.message, 'error')\n      }\n    } else {\n      return Swal.fire('OOPS', 'Select a Bank !', 'error')\n    }\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"col-10 mt-3\">\n        <h1 className=\"centertext\">Our Banks</h1>\n        <p className=\"staffp\">The banks we transact business with</p>\n\n        <CLabel htmlFor=\"Bank\" className=\"form-label \">\n          Bank\n        </CLabel>\n        <CInputGroup className=\"mt-3\">\n          <CInput\n            type=\"text\"\n            className=\"form-control col-sm-10\"\n            id=\"Bank\"\n            value={bank.bank}\n            onChange={(e) =>\n              setBank({\n                ...bank,\n                bank: e.currentTarget.value,\n              })\n            }\n          />\n        </CInputGroup>\n        <div className=\"mb-3\">\n          {!editMode ? (\n            <CButton\n              className=\"btn btn-primary col-2 mt-3 btn-sm\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </CButton>\n          ) : null}\n          {editMode ? (\n            <CButton\n              type=\"submit\"\n              class=\"btn btn-success col-2 ms-5 mt-3 btn-sm\"\n              onClick={handleUpdate}\n            >\n              Update Bank\n            </CButton>\n          ) : null}\n\n          {editMode && (\n            <CButton\n              className=\"btn btn-danger mr-3 col-sm-2 mt-3 mb-3 float-left btn-sm\"\n              onClick={handleDelete}\n            >\n              Delete\n            </CButton>\n          )}\n        </div>\n\n        <Table className=\"table-sm col-sm-6 mt-3\">\n          <caption>Click on any bank to update or delete</caption>\n          <thead>\n            <tr className=\"fs-sm\">\n              <th></th>\n              <th>Bank</th>\n            </tr>\n          </thead>\n          <tbody>\n            {banks.map((c, index) => (\n              <tr\n                key={c.id}\n                Style=\"cursor: pointer;\"\n                onClick={() => handleOnEdit(c)}\n              >\n                <td>{index + 1}</td>\n                <td>{c.bank}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  )\n}\n\nexport default Bank\n"],"sourceRoot":""}