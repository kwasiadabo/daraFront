{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Modal}from'react-bootstrap';import{Link,useNavigate,Navigate,useHistory}from'react-router-dom';import axios from'axios';import moment from'moment';import Joi from'joi-browser';import CurrencyFormat from'react-currency-format';import Swal from'sweetalert2';import auth from'../../components/services/authService';import{apiUrl}from'../../config.json';import{reportUrl}from'../../config.json';import BookProduct from'./bookProduct';import LoanPrincipal from'./loanPrincipalEntry';import Guarantors from'./guarantors';import GuarantorTwo from'./guarantorTwo';import BusinessDetails from'./businessDetails';import Directions from'./directions';import AdaboSelect from'react-select';import{Row,Col,Table,Progress,Button,UncontrolledButtonDropdown,DropdownMenu,DropdownToggle,DropdownItem,Input,Label,Badge}from'reactstrap';import{CBadge,CCard,CCardBody//CCardHeader,\n,CCol,CDataTable,CRow,CButton,CModal,CModalFooter,CModalHeader,CModalBody,CCardHeader,CInputGroupAppend,CInputGroupPrepend,CDropdownItem,CForm//CCardFooter,\n,CDropdownToggle//CInputRadio,\n,CDropdown,CDropdownDivider,CModalTitle//CFormText,\n//CTextarea,\n,CFormGroup,CLabel// CSwitch,\n,CInput//CInputFile,\n,CSelect,CDropdownMenu//CCardFooter,\n,CInputGroup//CForm,\n}from'@coreui/react';import{now}from'moment';var LoanBalances=function LoanBalances(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),loanBookings=_useState2[0],setLoanBookings=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),render=_useState4[0],setRender=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),loanBalances=_useState6[0],setLoanBalances=_useState6[1];var user=auth.getCurrentUser();useEffect(function(){function viewLoanBalances(){return _viewLoanBalances.apply(this,arguments);}function _viewLoanBalances(){_viewLoanBalances=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(apiUrl+'/loanreports/balances');case 2:results=_context.sent;setLoanBalances(results.data);console.log(user);case 5:case\"end\":return _context.stop();}}},_callee);}));return _viewLoanBalances.apply(this,arguments);}viewLoanBalances();},[]);var openCustomerListAsReport=function openCustomerListAsReport(url){var windowFeatures='left=100,top=100,width=320,height=320';window.open(url,'customerlist','popup',windowFeatures);};var formatter=new Intl.NumberFormat('en-US',{style:'currency',currency:'GHS'// These options are needed to round to whole numbers if that's what you want.\n//minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n//maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});var totalAmt=loanBalances.reduce(function(a,i){return a+i.Balance;},0);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row justify-content-center mb-3\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mb-2\"},\"The list shows the balances of all active loans. View it a report by clicking on the 'view as report' button.\")),/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{lg:12},/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(CCardHeader,{className:\"text-right\"},user.userRole=='Management'&&/*#__PURE__*/React.createElement(CButton,{className:\"float-right m-3 col-sm-2 btn-sm\",color:\"success\",onClick:function onClick(){return openCustomerListAsReport(reportUrl+'/loanBalances.aspx');}},\"View As Report\")),/*#__PURE__*/React.createElement(\"h4\",{className:\"text-center mt-3\"},\"Customer Loan Balances\"),/*#__PURE__*/React.createElement(CCardBody,null,user.userRole=='Management'&&/*#__PURE__*/React.createElement(\"span\",null,\"Total of Balances : \",formatter.format(totalAmt)),/*#__PURE__*/React.createElement(Table,{className:\"table-sm\"},/*#__PURE__*/React.createElement(\"caption\",null,\"Loan Balances\"),/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"fs-sm\"},/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"Account Number\"),/*#__PURE__*/React.createElement(\"th\",null,\"Customer\"),/*#__PURE__*/React.createElement(\"th\",null,\"Loan ID\"),/*#__PURE__*/React.createElement(\"th\",null,\"Loan Amount\"),/*#__PURE__*/React.createElement(\"th\",null,\"Payments\"),/*#__PURE__*/React.createElement(\"th\",null,\"Balance\"))),/*#__PURE__*/React.createElement(\"tbody\",null,loanBalances.map(function(c,index){return/*#__PURE__*/React.createElement(\"tr\",{key:c.id},/*#__PURE__*/React.createElement(\"td\",null,index+1),/*#__PURE__*/React.createElement(\"td\",null,c.accountNumber),/*#__PURE__*/React.createElement(\"td\",null,c.Customer),/*#__PURE__*/React.createElement(\"td\",null,c.loanId),/*#__PURE__*/React.createElement(\"td\",null,formatter.format(c.LoanAmount)),/*#__PURE__*/React.createElement(\"td\",null,formatter.format(c.Payments)),/*#__PURE__*/React.createElement(\"td\",null,formatter.format(c.Balance)));}))))))));};export default LoanBalances;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/loanBalances.jsx"],"names":["React","useState","useEffect","Modal","Link","useNavigate","Navigate","useHistory","axios","moment","Joi","CurrencyFormat","Swal","auth","apiUrl","reportUrl","BookProduct","LoanPrincipal","Guarantors","GuarantorTwo","BusinessDetails","Directions","AdaboSelect","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","now","LoanBalances","loanBookings","setLoanBookings","render","setRender","loanBalances","setLoanBalances","user","getCurrentUser","viewLoanBalances","get","results","data","console","log","openCustomerListAsReport","url","windowFeatures","window","open","formatter","Intl","NumberFormat","style","currency","totalAmt","reduce","a","i","Balance","userRole","format","map","c","index","id","accountNumber","Customer","loanId","LoanAmount","Payments"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Link, useNavigate, Navigate, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport { reportUrl } from '../../config.json'\nimport BookProduct from './bookProduct'\nimport LoanPrincipal from './loanPrincipalEntry'\nimport Guarantors from './guarantors'\nimport GuarantorTwo from './guarantorTwo'\nimport BusinessDetails from './businessDetails'\nimport Directions from './directions'\nimport AdaboSelect from 'react-select'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\nimport { now } from 'moment'\n\nconst LoanBalances = () => {\n  const [loanBookings, setLoanBookings] = useState([])\n  const [render, setRender] = useState(false)\n  const [loanBalances, setLoanBalances] = useState([])\n  const user = auth.getCurrentUser()\n  useEffect(() => {\n    async function viewLoanBalances() {\n      const results = await axios.get(apiUrl + '/loanreports/balances')\n      setLoanBalances(results.data)\n      console.log(user)\n    }\n    viewLoanBalances()\n  }, [])\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const totalAmt = loanBalances.reduce((a, i) => {\n    return a + i.Balance\n  }, 0)\n  return (\n    <div>\n      <div className=\"row justify-content-center mb-3\">\n        <p className=\"mb-2\">\n          The list shows the balances of all active loans. View it a report by\n          clicking on the 'view as report' button.\n        </p>\n      </div>\n      <CRow>\n        <CCol lg={12}>\n          <CCard>\n            <CCardHeader className=\"text-right\">\n              {user.userRole == 'Management' && (\n                <CButton\n                  className=\"float-right m-3 col-sm-2 btn-sm\"\n                  color=\"success\"\n                  onClick={() =>\n                    openCustomerListAsReport(reportUrl + '/loanBalances.aspx')\n                  }\n                >\n                  View As Report\n                </CButton>\n              )}\n            </CCardHeader>\n            <h4 className=\"text-center mt-3\">Customer Loan Balances</h4>\n            <CCardBody>\n              {user.userRole == 'Management' && (\n                <span>Total of Balances : {formatter.format(totalAmt)}</span>\n              )}\n              <Table className=\"table-sm\">\n                <caption>Loan Balances</caption>\n                <thead>\n                  <tr className=\"fs-sm\">\n                    <th></th>\n                    <th>Account Number</th>\n                    <th>Customer</th>\n                    <th>Loan ID</th>\n                    <th>Loan Amount</th>\n                    <th>Payments</th>\n                    <th>Balance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {loanBalances.map((c, index) => (\n                    <tr key={c.id}>\n                      <td>{index + 1}</td>\n                      <td>{c.accountNumber}</td>\n                      <td>{c.Customer}</td>\n                      <td>{c.loanId}</td>\n                      <td>{formatter.format(c.LoanAmount)}</td>\n                      <td>{formatter.format(c.Payments)}</td>\n                      <td>{formatter.format(c.Balance)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default LoanBalances\n"]},"metadata":{},"sourceType":"module"}