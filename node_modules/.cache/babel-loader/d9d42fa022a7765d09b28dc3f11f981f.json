{"ast":null,"code":"import _objectSpread from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/bankAccount.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport baseUrl from '../../config.json';\nimport auth from '../../components/services/authService';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Label, Badge } from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\n\nvar BankAccount = function BankAccount() {\n  var _useState = useState({\n    bank: '',\n    branch: '',\n    accountNumber: '',\n    accountName: '',\n    typeOfAccount: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      bank = _useState2[0],\n      setBank = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      banks = _useState4[0],\n      setBanks = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bankAccounts = _useState6[0],\n      setBankAccounts = _useState6[1];\n\n  useEffect(function () {\n    function getBanks() {\n      return _getBanks.apply(this, arguments);\n    }\n\n    function _getBanks() {\n      _getBanks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(baseUrl.apiUrl + '/setup/bank');\n\n              case 2:\n                results = _context.sent;\n                setBanks(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getBanks.apply(this, arguments);\n    }\n\n    getBanks();\n  }, [banks]);\n  useEffect(function () {\n    function getBankAccounts() {\n      return _getBankAccounts.apply(this, arguments);\n    }\n\n    function _getBankAccounts() {\n      _getBankAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(baseUrl.apiUrl + '/setup/bankaccount');\n\n              case 2:\n                results = _context2.sent;\n                setBankAccounts(results.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getBankAccounts.apply(this, arguments);\n    }\n\n    getBankAccounts();\n  }, [bankAccounts]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios.post(baseUrl.apiUrl + '/setup/bankaccount', bank);\n\n            case 4:\n              results = _context3.sent;\n              console.log(results.status);\n\n              if (!(results.status !== 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", Swal.fire('OOPS', 'Submission Failed ! Check Entries and try again !', 'error'));\n\n            case 10:\n              Swal.fire('Success', 'Bank Account Details Saved Successfully', 'success');\n              setBank({\n                bank: '',\n                branch: '',\n                accountNumber: '',\n                accountName: '',\n                typeOfAccount: '',\n                contact: ''\n              });\n\n            case 12:\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](1);\n              Swal.fire('OOPS ! ' + _context3.t0.message, 'error');\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 14]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"centertext\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Bank Account Details\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"staffp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Giving your banks accounts details helps track your transactions with them.\"), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    for: \"inputPassword\",\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Bank\"), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-8\",\n    \"aria-label\": \"Default select example \",\n    value: bank.bank,\n    onChange: function onChange(e) {\n      return setBank(_objectSpread(_objectSpread({}, bank), {}, {\n        bank: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"--Select Bank--\"), banks.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, b.bank);\n  }))), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"appdate\",\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Branch\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    className: \"form-control  col-sm-8\",\n    id: \"appdate\",\n    value: bank.branch,\n    onChange: function onChange(e) {\n      return setBank(_objectSpread(_objectSpread({}, bank), {}, {\n        branch: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"phoneofgurantor1\",\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Account Name\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    className: \"form-control  col-sm-8\",\n    id: \"phoneofgurantor1\",\n    value: bank.accountName,\n    onChange: function onChange(e) {\n      return setBank(_objectSpread(_objectSpread({}, bank), {}, {\n        accountName: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"phone\",\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"Account Number\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    className: \"form-control col-sm-8\",\n    id: \"phone\",\n    value: bank.accountNumber,\n    onChange: function onChange(e) {\n      return setBank(_objectSpread(_objectSpread({}, bank), {}, {\n        accountNumber: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"qualification\",\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Type of Account\"), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-8\",\n    \"aria-label\": \"Default select example\",\n    value: bank.typeOfAccount,\n    onChange: function onChange(e) {\n      setBank(_objectSpread(_objectSpread({}, bank), {}, {\n        typeOfAccount: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"--Select Account Type--\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Savings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Savings\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Current Account\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \"Current\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    className: \"btn btn-danger col-sm-3 mt-3\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Table, {\n    className: \"mt-3 sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Bank\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"Account Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Branch\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"Type Of Account\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, \"Name of Account\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, bankAccounts.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c._id,\n      Style: \"cursor: pointer;\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, c.BankName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, c.accountNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, c.branch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, c.typeOfAccount), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, c.accountName));\n  }))));\n};\n\nexport default BankAccount;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/bankAccount.js"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","axios","moment","baseUrl","auth","Swal","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","BankAccount","bank","branch","accountNumber","accountName","typeOfAccount","setBank","banks","setBanks","bankAccounts","setBankAccounts","getBanks","get","apiUrl","results","data","getBankAccounts","handleSubmit","e","preventDefault","post","console","log","status","fire","contact","message","currentTarget","value","map","b","id","c","index","_id","BankName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport baseUrl from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Swal from 'sweetalert2'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst BankAccount = () => {\n  const [bank, setBank] = useState({\n    bank: '',\n    branch: '',\n    accountNumber: '',\n    accountName: '',\n    typeOfAccount: '',\n  })\n  const [banks, setBanks] = useState([])\n  const [bankAccounts, setBankAccounts] = useState([])\n\n  useEffect(() => {\n    async function getBanks() {\n      const results = await axios.get(baseUrl.apiUrl + '/setup/bank')\n      setBanks(results.data)\n    }\n    getBanks()\n  }, [banks])\n\n  useEffect(() => {\n    async function getBankAccounts() {\n      const results = await axios.get(baseUrl.apiUrl + '/setup/bankaccount')\n      setBankAccounts(results.data)\n    }\n    getBankAccounts()\n  }, [bankAccounts])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const results = await axios.post(\n        baseUrl.apiUrl + '/setup/bankaccount',\n        bank,\n      )\n      console.log(results.status)\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPS',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire(\n          'Success',\n          'Bank Account Details Saved Successfully',\n          'success',\n        )\n        setBank({\n          bank: '',\n          branch: '',\n          accountNumber: '',\n          accountName: '',\n          typeOfAccount: '',\n          contact: '',\n        })\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ' + err.message, 'error')\n    }\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"centertext\">Bank Account Details</h1>\n      <p className=\"staffp\">\n        Giving your banks accounts details helps track your transactions with\n        them.\n      </p>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel for=\"inputPassword\" className=\"col-sm-3\">\n          Bank\n        </CLabel>\n\n        <CSelect\n          className=\"form-select col-sm-8\"\n          aria-label=\"Default select example \"\n          value={bank.bank}\n          onChange={(e) => setBank({ ...bank, bank: e.currentTarget.value })}\n        >\n          <option defaultValue=\"\">--Select Bank--</option>\n          {banks.map((b) => (\n            <option key={b.id} value={b.id} id={b.id}>\n              {b.bank}\n            </option>\n          ))}\n        </CSelect>\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"appdate\" className=\"col-sm-3\">\n          Branch\n        </CLabel>\n\n        <CInput\n          type=\"text\"\n          className=\"form-control  col-sm-8\"\n          id=\"appdate\"\n          value={bank.branch}\n          onChange={(e) =>\n            setBank({\n              ...bank,\n              branch: e.currentTarget.value,\n            })\n          }\n        />\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"phoneofgurantor1\" className=\"col-sm-3\">\n          Account Name\n        </CLabel>\n\n        <CInput\n          type=\"text\"\n          className=\"form-control  col-sm-8\"\n          id=\"phoneofgurantor1\"\n          value={bank.accountName}\n          onChange={(e) =>\n            setBank({\n              ...bank,\n              accountName: e.currentTarget.value,\n            })\n          }\n        />\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"phone\" className=\"col-sm-3\">\n          Account Number\n        </CLabel>\n\n        <CInput\n          type=\"text\"\n          className=\"form-control col-sm-8\"\n          id=\"phone\"\n          value={bank.accountNumber}\n          onChange={(e) =>\n            setBank({\n              ...bank,\n              accountNumber: e.currentTarget.value,\n            })\n          }\n        />\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"qualification\" className=\"col-sm-3\">\n          Type of Account\n        </CLabel>\n\n        <CSelect\n          className=\"form-select col-sm-8\"\n          aria-label=\"Default select example\"\n          value={bank.typeOfAccount}\n          onChange={(e) => {\n            setBank({\n              ...bank,\n              typeOfAccount: e.currentTarget.value,\n            })\n          }}\n        >\n          <option defaultValue=\"\">--Select Account Type--</option>\n          <option value=\"Savings\">Savings</option>\n          <option value=\"Current Account\">Current</option>\n        </CSelect>\n      </CInputGroup>\n\n      <div className=\"row justify-content-center\">\n        <CButton\n          className=\"btn btn-danger col-sm-3 mt-3\"\n          onClick={handleSubmit}\n        >\n          Submit\n        </CButton>\n      </div>\n\n      <Table className=\"mt-3 sm\">\n        <thead>\n          <tr className=\"fs-sm\">\n            <th></th>\n            <th>Bank</th>\n            <th>Account Number</th>\n            <th>Branch</th>\n            <th>Type Of Account</th>\n            <th>Name of Account</th>\n          </tr>\n        </thead>\n        <tbody>\n          {bankAccounts.map((c, index) => (\n            <tr key={c._id} Style=\"cursor: pointer;\">\n              <td>{index + 1}</td>\n              <td>{c.BankName}</td>\n              <td>{c.accountNumber}</td>\n              <td>{c.branch}</td>\n              <td>{c.typeOfAccount}</td>\n              <td>{c.accountName}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default BankAccount\n"]},"metadata":{},"sourceType":"module"}