{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport http from './httpService';\nimport jwtDecode from 'jwt-decode'; //import baseUrl from '../../config.json'\n\nvar apiEndPoint = '/auth';\nvar tokenKey = 'token';\nhttp.setJwt(getJwt());\nexport function login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password) {\n    var _yield$http$post, jwt;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            logout();\n            _context.next = 3;\n            return http.post(apiEndPoint, {\n              username: username,\n              password: password\n            });\n\n          case 3:\n            _yield$http$post = _context.sent;\n            jwt = _yield$http$post.data;\n            localStorage.setItem(tokenKey, jwt);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nexport function loginWithJwt(jwt) {\n  logout();\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function getCurrentUser() {\n  try {\n    var jwt = localStorage.getItem(tokenKey); //console.log(jwtDecode(jwt));\n\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nvar exportAuth = {\n  login: login,\n  logout: logout,\n  getCurrentUser: getCurrentUser,\n  loginWithJwt: loginWithJwt,\n  getJwt: getJwt\n};\nexport default exportAuth;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/components/services/authService.js"],"names":["http","jwtDecode","apiEndPoint","tokenKey","setJwt","getJwt","login","username","password","logout","post","jwt","data","localStorage","setItem","loginWithJwt","getCurrentUser","getItem","ex","removeItem","exportAuth"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,IAAMC,WAAW,GAAG,OAApB;AACA,IAAMC,QAAQ,GAAG,OAAjB;AACAH,IAAI,CAACI,MAAL,CAAYC,MAAM,EAAlB;AAEA,gBAAsBC,KAAtB;AAAA;AAAA;;;oEAAO,iBAAqBC,QAArB,EAA+BC,QAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,MAAM;AADD;AAAA,mBAEuBT,IAAI,CAACU,IAAL,CAAUR,WAAV,EAAuB;AAAEK,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,QAAQ,EAARA;AAAZ,aAAvB,CAFvB;;AAAA;AAAA;AAESG,YAAAA,GAFT,oBAEGC,IAFH;AAGLC,YAAAA,YAAY,CAACC,OAAb,CAAqBX,QAArB,EAA+BQ,GAA/B;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,OAAO,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;AAChCF,EAAAA,MAAM;AACNI,EAAAA,YAAY,CAACC,OAAb,CAAqBX,QAArB,EAA+BQ,GAA/B;AACD;AAED,OAAO,SAASK,cAAT,GAA0B;AAC/B,MAAI;AACF,QAAML,GAAG,GAAGE,YAAY,CAACI,OAAb,CAAqBd,QAArB,CAAZ,CADE,CAEF;;AACA,WAAOF,SAAS,CAACU,GAAD,CAAhB;AACD,GAJD,CAIE,OAAOO,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAAST,MAAT,GAAkB;AACvBI,EAAAA,YAAY,CAACM,UAAb,CAAwBhB,QAAxB;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,SAAOQ,YAAY,CAACI,OAAb,CAAqBd,QAArB,CAAP;AACD;AAED,IAAMiB,UAAU,GAAG;AACjBd,EAAAA,KAAK,EAALA,KADiB;AAEjBG,EAAAA,MAAM,EAANA,MAFiB;AAGjBO,EAAAA,cAAc,EAAdA,cAHiB;AAIjBD,EAAAA,YAAY,EAAZA,YAJiB;AAKjBV,EAAAA,MAAM,EAANA;AALiB,CAAnB;AAQA,eAAee,UAAf","sourcesContent":["import http from './httpService'\nimport jwtDecode from 'jwt-decode'\n//import baseUrl from '../../config.json'\n\nconst apiEndPoint = '/auth'\nconst tokenKey = 'token'\nhttp.setJwt(getJwt())\n\nexport async function login(username, password) {\n  logout()\n  const { data: jwt } = await http.post(apiEndPoint, { username, password })\n  localStorage.setItem(tokenKey, jwt)\n}\n\nexport function loginWithJwt(jwt) {\n  logout()\n  localStorage.setItem(tokenKey, jwt)\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey)\n    //console.log(jwtDecode(jwt));\n    return jwtDecode(jwt)\n  } catch (ex) {\n    return null\n  }\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey)\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey)\n}\n\nconst exportAuth = {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n}\n\nexport default exportAuth\n"]},"metadata":{},"sourceType":"module"}