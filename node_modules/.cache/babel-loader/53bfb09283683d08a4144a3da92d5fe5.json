{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{Link,useHistory,useNavigate}from'react-router-dom';import axios from'axios';import moment from'moment';import{apiUrl,reportUrl}from'../../config.json';import auth from'../../components/services/authService';import Joi from'joi-browser';import Swal from'sweetalert2';import formData from'form-data';//import '../../table.css'\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport{CBadge,CCard,CCardBody//CCardHeader,\n,CCol,CDataTable,CRow,CButton,CModal,CModalFooter,CModalHeader,CModalBody,CCardHeader,CInputGroupAppend,CInputGroupPrepend,CDropdownItem,CForm//CCardFooter,\n,CDropdownToggle//CInputRadio,\n,CDropdown,CModalTitle//CFormText,\n//CTextarea,\n,CFormGroup,CLabel// CSwitch,\n,CInput//CInputFile,\n,CSelect,CDropdownMenu//CCardFooter,\n,CInputGroup,ButtonDropdowns//CForm,\n,CDropdownDivider,CInputCheckbox,CLink}from'@coreui/react';import{Row,Col,Table,Progress,Button,UncontrolledButtonDropdown,DropdownMenu,DropdownToggle,DropdownItem,Input,Label,Badge}from'reactstrap';var CustomerLoanStatement=function CustomerLoanStatement(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),arrears=_useState2[0],setArrears=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),customers=_useState4[0],setCustomers=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),search=_useState6[0],setSearch=_useState6[1];var navigate=useHistory();useEffect(function(){function getCustomers(){return _getCustomers.apply(this,arguments);}function _getCustomers(){_getCustomers=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(apiUrl+'/customer');case 2:results=_context.sent;setCustomers(results.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return _getCustomers.apply(this,arguments);}getCustomers();},[customers]);var openCustomerListAsReport=function openCustomerListAsReport(url){var windowFeatures='left=100,top=100,width=320,height=320';window.open(url,'customerlist','popup',windowFeatures);};var formatter=new Intl.NumberFormat('en-US',{style:'currency',currency:'GHS'// These options are needed to round to whole numbers if that's what you want.\n//minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n//maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});var data={scustomers:customers.filter(function(item){return item.fullName.toLowerCase().includes(search.toLowerCase());})};var dataTouse=search.length===0?customers:data.scustomers;var handleSearch=function handleSearch(event){setSearch(event.target.value);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-12 mt-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"table-responsive\"},/*#__PURE__*/React.createElement(Input,{className:\"mt-3 mb-3 ms-3 col-sm-4\",type:\"text\",placeholder:\"Search with Customer Name or Phone\",onChange:handleSearch}),/*#__PURE__*/React.createElement(Table,{className:\"table-sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"fs-sm\"},/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"Account Number\"),/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Gender\"),/*#__PURE__*/React.createElement(\"th\",null,\"Phone\"),/*#__PURE__*/React.createElement(\"th\",null,\"Res. Address\"),/*#__PURE__*/React.createElement(\"th\",null,\"Action\"))),/*#__PURE__*/React.createElement(\"tbody\",null,dataTouse.map(function(c,index){return/*#__PURE__*/React.createElement(\"tr\",{key:c.id// onClick={() => customerView(c)}\n// Style=\"cursor: pointer;\"\n},/*#__PURE__*/React.createElement(\"td\",null,index+1),/*#__PURE__*/React.createElement(\"td\",null,c.accountNumber),/*#__PURE__*/React.createElement(\"td\",null,c.fullName),/*#__PURE__*/React.createElement(\"td\",null,c.gender),/*#__PURE__*/React.createElement(\"td\",null,c.phone),/*#__PURE__*/React.createElement(\"td\",null,c.residentialAddress),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(CDropdown,{className:\"m-1\"},/*#__PURE__*/React.createElement(CDropdownToggle,{color:\"info\",size:\"sm\"},\"View Loan Statement\"),/*#__PURE__*/React.createElement(CDropdownMenu,{size:\"sm\"},/*#__PURE__*/React.createElement(CDropdownItem,{header:true},\"Statement\"),/*#__PURE__*/React.createElement(CDropdownDivider,null),/*#__PURE__*/React.createElement(CDropdownItem,{onClick:function onClick(){return openCustomerListAsReport(reportUrl+'/customerLoanStatement.aspx?'+c.id);}},\"View Loan Statement\"),/*#__PURE__*/React.createElement(CDropdownDivider,null)))));}))))));};//  <td>{moment(s.startDate).format(\"DD,MMMM,YYYY\")}</td>\nexport default CustomerLoanStatement;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/customerLoanStatement.jsx"],"names":["React","useState","useEffect","useRef","Link","useHistory","useNavigate","axios","moment","apiUrl","reportUrl","auth","Joi","Swal","formData","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","ButtonDropdowns","CDropdownDivider","CInputCheckbox","CLink","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CustomerLoanStatement","arrears","setArrears","customers","setCustomers","search","setSearch","navigate","getCustomers","get","results","data","openCustomerListAsReport","url","windowFeatures","window","open","formatter","Intl","NumberFormat","style","currency","scustomers","filter","item","fullName","toLowerCase","includes","dataTouse","length","handleSearch","event","target","value","map","c","index","id","accountNumber","gender","phone","residentialAddress"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Link, useHistory, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { apiUrl, reportUrl } from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport formData from 'form-data'\n\n//import '../../table.css'\n\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  ButtonDropdowns,\n  //CForm,\n  CDropdownDivider,\n  CInputCheckbox,\n  CLink,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nconst CustomerLoanStatement = () => {\n  const [arrears, setArrears] = useState([])\n  const [customers, setCustomers] = useState([])\n  const [search, setSearch] = useState('')\n  let navigate = useHistory()\n\n  useEffect(() => {\n    async function getCustomers() {\n      const results = await axios.get(apiUrl + '/customer')\n      setCustomers(results.data)\n    }\n    getCustomers()\n  }, [customers])\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const data = {\n    scustomers: customers.filter((item) =>\n      item.fullName.toLowerCase().includes(search.toLowerCase()),\n    ),\n  }\n  const dataTouse = search.length === 0 ? customers : data.scustomers\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n  return (\n    <div>\n      <div className=\"col-sm-12 mt-3\">\n        <div className=\"table-responsive\">\n          <Input\n            className=\"mt-3 mb-3 ms-3 col-sm-4\"\n            type=\"text\"\n            placeholder=\"Search with Customer Name or Phone\"\n            onChange={handleSearch}\n          />\n          <Table className=\"table-sm\">\n            <thead>\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Account Number</th>\n                <th>Name</th>\n                <th>Gender</th>\n\n                <th>Phone</th>\n                <th>Res. Address</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((c, index) => (\n                <tr\n                  key={c.id}\n                  // onClick={() => customerView(c)}\n                  // Style=\"cursor: pointer;\"\n                >\n                  <td>{index + 1}</td>\n                  <td>{c.accountNumber}</td>\n                  <td>{c.fullName}</td>\n                  <td>{c.gender}</td>\n                  <td>{c.phone}</td>\n                  <td>{c.residentialAddress}</td>\n                  <td>\n                    <CDropdown className=\"m-1\">\n                      <CDropdownToggle color=\"info\" size=\"sm\">\n                        View Loan Statement\n                      </CDropdownToggle>\n                      <CDropdownMenu size=\"sm\">\n                        <CDropdownItem header>Statement</CDropdownItem>\n                        <CDropdownDivider />\n                        <CDropdownItem\n                          onClick={() =>\n                            openCustomerListAsReport(\n                              reportUrl + '/customerLoanStatement.aspx?' + c.id,\n                            )\n                          }\n                        >\n                          View Loan Statement\n                        </CDropdownItem>\n                        <CDropdownDivider />\n                      </CDropdownMenu>\n                    </CDropdown>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//  <td>{moment(s.startDate).format(\"DD,MMMM,YYYY\")}</td>\nexport default CustomerLoanStatement\n"]},"metadata":{},"sourceType":"module"}