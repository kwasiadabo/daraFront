{"ast":null,"code":"'use strict';\n\nif (typeof require === 'function') {\n  var moment = require('moment');\n}\n\nmoment.fn.isHoliday = function () {\n  var locale = this.localeData();\n\n  if (locale._holidays) {\n    if (locale._holidays.indexOf(this.format(locale._holidayFormat)) >= 0) return true;\n  }\n\n  if (locale.holiday) {\n    if (locale.holiday(this)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return false;\n};\n\nmoment.fn.isBusinessDay = function () {\n  var locale = this.localeData();\n  var defaultWorkingWeekdays = [1, 2, 3, 4, 5];\n  var workingWeekdays = locale._workingWeekdays || defaultWorkingWeekdays;\n  if (this.isHoliday()) return false;\n  if (workingWeekdays.indexOf(this.day()) >= 0) return true;\n  return false;\n};\n\nmoment.fn.businessDaysIntoMonth = function () {\n  if (!this.isValid()) {\n    return NaN;\n  }\n\n  var businessDay = this.isBusinessDay() ? this : this.prevBusinessDay();\n  var monthBusinessDays = businessDay.monthBusinessDays();\n  var businessDaysIntoMonth;\n  monthBusinessDays.map(function (day, index) {\n    if (day.format('M/DD/YY') === businessDay.format('M/DD/YY')) {\n      businessDaysIntoMonth = index + 1;\n    }\n  });\n  return businessDaysIntoMonth;\n};\n\nmoment.fn.businessDiff = function (param, relative) {\n  var d1 = this.clone();\n  var d2 = param.clone();\n  var positive = d1 >= d2;\n  var start = d1 < d2 ? d1 : d2;\n  var end = d2 > d1 ? d2 : d1;\n  var daysBetween = 0;\n\n  if (start.format('DD/MM/YYYY') === end.format('DD/MM/YYYY')) {\n    return daysBetween;\n  }\n\n  while (start < end) {\n    if (start.isBusinessDay()) {\n      daysBetween++;\n    }\n\n    start.add(1, 'd');\n  }\n\n  if (relative) {\n    return positive ? daysBetween : -daysBetween;\n  }\n\n  return daysBetween;\n};\n\nmoment.fn.businessAdd = function (number, period) {\n  var day = this.clone();\n\n  if (!day.isValid()) {\n    return day;\n  }\n\n  if (number < 0) {\n    number = Math.round(-1 * number) * -1;\n  } else {\n    number = Math.round(number);\n  }\n\n  var signal = number < 0 ? -1 : 1;\n  period = typeof period !== 'undefined' ? period : 'days';\n  var remaining = Math.abs(number);\n\n  while (remaining > 0) {\n    day.add(signal, period);\n\n    if (day.isBusinessDay()) {\n      remaining--;\n    }\n  }\n\n  return day;\n};\n\nmoment.fn.businessSubtract = function (number, period) {\n  return this.businessAdd(-number, period);\n};\n\nmoment.fn.nextBusinessDay = function () {\n  var locale = this.localeData();\n  var loop = 1;\n  var defaultNextBusinessDayLimit = 7;\n  var limit = locale._nextBusinessDayLimit || defaultNextBusinessDayLimit;\n\n  while (loop < limit) {\n    if (this.add(1, 'd').isBusinessDay()) {\n      break;\n    }\n\n    loop++;\n  }\n\n  return this;\n};\n\nmoment.fn.prevBusinessDay = function () {\n  var locale = this.localeData();\n  var loop = 1;\n  var defaultPrevBusinessDayLimit = 7;\n  var limit = locale._prevBusinessDayLimit || defaultPrevBusinessDayLimit;\n\n  while (loop < limit) {\n    if (this.subtract(1, 'd').isBusinessDay()) {\n      break;\n    }\n\n    loop++;\n  }\n\n  return this;\n};\n\nmoment.fn.monthBusinessDays = function (partialEndDate) {\n  if (!this.isValid()) {\n    return [];\n  }\n\n  var me = this.clone();\n  var day = me.clone().startOf('month');\n  var end = partialEndDate ? partialEndDate : me.clone().endOf('month');\n  var daysArr = [];\n  var done = false;\n\n  while (!done) {\n    if (day.isBusinessDay()) {\n      daysArr.push(day.clone());\n    }\n\n    if (end.diff(day.add(1, 'd')) < 0) {\n      done = true;\n    }\n  }\n\n  return daysArr;\n};\n\nmoment.fn.monthNaturalDays = function (fromToday) {\n  if (!this.isValid()) {\n    return [];\n  }\n\n  var me = this.clone();\n  var day = fromToday ? me.clone() : me.clone().startOf('month');\n  var end = me.clone().endOf('month');\n  var daysArr = [];\n  var done = false;\n\n  while (!done) {\n    daysArr.push(day.clone());\n\n    if (end.diff(day.add(1, 'd')) < 0) {\n      done = true;\n    }\n  }\n\n  return daysArr;\n};\n\nmoment.fn.monthBusinessWeeks = function (fromToday) {\n  fromToday = fromToday || false;\n  var me = this.clone();\n  var startDate = fromToday ? me.clone() : me.clone().startOf('month');\n  return getBusinessWeeks(this, fromToday, null, startDate);\n};\n\nmoment.fn.businessWeeksBetween = function (endDate) {\n  var me = this.clone();\n  var startDate = me.clone();\n  return getBusinessWeeks(this, false, endDate, startDate);\n};\n\nvar getBusinessWeeks = function getBusinessWeeks(self, fromToday, endDate, startDate) {\n  if (!self.isValid()) {\n    return [];\n  }\n\n  var me = self.clone();\n  var day = startDate;\n  var end = endDate ? moment(endDate).clone() : me.clone().endOf('month');\n  var weeksArr = [];\n  var daysArr = [];\n  var done = false;\n\n  while (!done) {\n    if (day.day() >= 1 && day.day() < 6) {\n      daysArr.push(day.clone());\n    }\n\n    if (day.day() === 5) {\n      weeksArr.push(daysArr);\n      daysArr = [];\n    }\n\n    if (end.diff(day.add(1, 'd')) < 0) {\n      if (daysArr.length < 5) {\n        weeksArr.push(daysArr);\n      }\n\n      done = true;\n    }\n  }\n\n  return weeksArr;\n};\n\nmoment.fn.monthNaturalWeeks = function (fromToday) {\n  if (!this.isValid()) {\n    return [];\n  }\n\n  var me = this.clone();\n  var day = fromToday ? me.clone() : me.clone().startOf('month');\n  var end = me.clone().endOf('month');\n  var weeksArr = [];\n  var daysArr = [];\n  var done = false;\n\n  while (!done) {\n    daysArr.push(day.clone());\n\n    if (day.day() === 6) {\n      weeksArr.push(daysArr);\n      daysArr = [];\n    }\n\n    if (end.diff(day.add(1, 'd')) < 0) {\n      if (daysArr.length < 7) {\n        weeksArr.push(daysArr);\n      }\n\n      done = true;\n    }\n  }\n\n  return weeksArr;\n};\n\nif (typeof module != 'undefined' && module.exports) {\n  module.exports = moment;\n}","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/moment-business-days/index.js"],"names":["require","moment","fn","isHoliday","locale","localeData","_holidays","indexOf","format","_holidayFormat","holiday","isBusinessDay","defaultWorkingWeekdays","workingWeekdays","_workingWeekdays","day","businessDaysIntoMonth","isValid","NaN","businessDay","prevBusinessDay","monthBusinessDays","map","index","businessDiff","param","relative","d1","clone","d2","positive","start","end","daysBetween","add","businessAdd","number","period","Math","round","signal","remaining","abs","businessSubtract","nextBusinessDay","loop","defaultNextBusinessDayLimit","limit","_nextBusinessDayLimit","defaultPrevBusinessDayLimit","_prevBusinessDayLimit","subtract","partialEndDate","me","startOf","endOf","daysArr","done","push","diff","monthNaturalDays","fromToday","monthBusinessWeeks","startDate","getBusinessWeeks","businessWeeksBetween","endDate","self","weeksArr","length","monthNaturalWeeks","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nif (typeof require === 'function') {\n  var moment = require('moment');\n}\n\nmoment.fn.isHoliday = function () {\n  var locale = this.localeData();\n\n  if (locale._holidays) {\n    if (locale._holidays.indexOf(this.format(locale._holidayFormat)) >= 0)\n      return true;\n  }\n\n  if (locale.holiday) {\n    if (locale.holiday(this)) {\n      return true;\n    }\n    return false;\n  }\n\n  return false;\n};\n\nmoment.fn.isBusinessDay = function () {\n  var locale = this.localeData();\n  var defaultWorkingWeekdays = [1, 2, 3, 4, 5];\n  var workingWeekdays = locale._workingWeekdays || defaultWorkingWeekdays;\n\n  if (this.isHoliday()) return false;\n  if (workingWeekdays.indexOf(this.day()) >= 0) return true;\n\n  return false;\n};\n\nmoment.fn.businessDaysIntoMonth = function () {\n  if (!this.isValid()) {\n    return NaN;\n  }\n  var businessDay = this.isBusinessDay() ? this : this.prevBusinessDay();\n  var monthBusinessDays = businessDay.monthBusinessDays();\n  var businessDaysIntoMonth;\n  monthBusinessDays.map(function (day, index) {\n    if (day.format('M/DD/YY') === businessDay.format('M/DD/YY')) {\n      businessDaysIntoMonth = index + 1;\n    }\n  });\n  return businessDaysIntoMonth;\n};\n\nmoment.fn.businessDiff = function (param, relative) {\n  var d1 = this.clone();\n  var d2 = param.clone();\n  var positive = d1 >= d2;\n  var start = d1 < d2 ? d1 : d2;\n  var end = d2 > d1 ? d2 : d1;\n\n  var daysBetween = 0;\n\n  if (start.format('DD/MM/YYYY') === end.format('DD/MM/YYYY')) {\n    return daysBetween;\n  }\n\n  while (start < end) {\n    if (start.isBusinessDay()) {\n      daysBetween++;\n    }\n    start.add(1, 'd');\n  }\n\n  if (relative) {\n    return positive ? daysBetween : -daysBetween;\n  }\n\n  return daysBetween;\n};\n\nmoment.fn.businessAdd = function (number, period) {\n  var day = this.clone();\n  if (!day.isValid()) {\n    return day;\n  }\n\n  if (number < 0) {\n    number = Math.round(-1 * number) * -1;\n  } else {\n    number = Math.round(number);\n  }\n\n  var signal = number < 0 ? -1 : 1;\n  period = typeof period !== 'undefined' ? period : 'days';\n\n  var remaining = Math.abs(number);\n  while (remaining > 0) {\n    day.add(signal, period);\n\n    if (day.isBusinessDay()) {\n      remaining--;\n    }\n  }\n\n  return day;\n};\n\nmoment.fn.businessSubtract = function (number, period) {\n  return this.businessAdd(-number, period);\n};\n\nmoment.fn.nextBusinessDay = function () {\n  var locale = this.localeData();\n\n  var loop = 1;\n  var defaultNextBusinessDayLimit = 7;\n  var limit = locale._nextBusinessDayLimit || defaultNextBusinessDayLimit;\n  while (loop < limit) {\n    if (this.add(1, 'd').isBusinessDay()) {\n      break;\n    }\n    loop++;\n  }\n  return this;\n};\n\nmoment.fn.prevBusinessDay = function () {\n  var locale = this.localeData();\n\n  var loop = 1;\n  var defaultPrevBusinessDayLimit = 7;\n  var limit = locale._prevBusinessDayLimit || defaultPrevBusinessDayLimit;\n  while (loop < limit) {\n    if (this.subtract(1, 'd').isBusinessDay()) {\n      break;\n    }\n    loop++;\n  }\n  return this;\n};\n\nmoment.fn.monthBusinessDays = function (partialEndDate) {\n  if (!this.isValid()) {\n    return [];\n  }\n  var me = this.clone();\n  var day = me.clone().startOf('month');\n  var end = partialEndDate ? partialEndDate : me.clone().endOf('month');\n  var daysArr = [];\n  var done = false;\n  while (!done) {\n    if (day.isBusinessDay()) {\n      daysArr.push(day.clone());\n    }\n    if (end.diff(day.add(1, 'd')) < 0) {\n      done = true;\n    }\n  }\n  return daysArr;\n};\n\nmoment.fn.monthNaturalDays = function (fromToday) {\n  if (!this.isValid()) {\n    return [];\n  }\n  var me = this.clone();\n  var day = fromToday ? me.clone() : me.clone().startOf('month');\n  var end = me.clone().endOf('month');\n  var daysArr = [];\n  var done = false;\n  while (!done) {\n    daysArr.push(day.clone());\n    if (end.diff(day.add(1, 'd')) < 0) {\n      done = true;\n    }\n  }\n  return daysArr;\n};\n\nmoment.fn.monthBusinessWeeks = function (fromToday) {\n  fromToday = fromToday || false;\n  var me = this.clone();\n  var startDate = fromToday ? me.clone() : me.clone().startOf('month');\n  return getBusinessWeeks(this, fromToday, null, startDate);\n};\n\nmoment.fn.businessWeeksBetween = function (endDate) {\n  var me = this.clone();\n  var startDate = me.clone();\n  return getBusinessWeeks(this, false, endDate, startDate);\n};\n\nvar getBusinessWeeks = function (self, fromToday, endDate, startDate) {\n  if (!self.isValid()) {\n    return [];\n  }\n  var me = self.clone();\n  var day = startDate;\n  var end = endDate ? moment(endDate).clone() : me.clone().endOf('month');\n  var weeksArr = [];\n  var daysArr = [];\n  var done = false;\n\n  while (!done) {\n    if (day.day() >= 1 && day.day() < 6) {\n      daysArr.push(day.clone());\n    }\n    if (day.day() === 5) {\n      weeksArr.push(daysArr);\n      daysArr = [];\n    }\n    if (end.diff(day.add(1, 'd')) < 0) {\n      if (daysArr.length < 5) {\n        weeksArr.push(daysArr);\n      }\n      done = true;\n    }\n  }\n  return weeksArr;\n}\n\nmoment.fn.monthNaturalWeeks = function (fromToday) {\n  if (!this.isValid()) {\n    return [];\n  }\n  var me = this.clone();\n  var day = fromToday ? me.clone() : me.clone().startOf('month');\n  var end = me.clone().endOf('month');\n  var weeksArr = [];\n  var daysArr = [];\n  var done = false;\n\n  while (!done) {\n    daysArr.push(day.clone());\n    if (day.day() === 6) {\n      weeksArr.push(daysArr);\n      daysArr = [];\n    }\n    if (end.diff(day.add(1, 'd')) < 0) {\n      if (daysArr.length < 7) {\n        weeksArr.push(daysArr);\n      }\n      done = true;\n    }\n  }\n  return weeksArr;\n};\n\nif (typeof module != 'undefined' && module.exports) {\n  module.exports = moment;\n}\n"]},"metadata":{},"sourceType":"script"}