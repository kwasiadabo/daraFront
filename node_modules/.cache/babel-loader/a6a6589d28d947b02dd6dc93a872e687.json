{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import CIcon from'@coreui/icons-react';import{CBadge,CCard,CCardBody//CCardHeader,\n,CCol,CDataTable,CRow,CButton,CModal,CModalFooter,CModalHeader,CModalBody,CCardHeader,CInputGroupAppend,CInputGroupPrepend,CDropdownItem,CForm//CCardFooter,\n,CDropdownToggle//CInputRadio,\n,CDropdown,CModalTitle//CFormText,\n//CTextarea,\n,CFormGroup,CLabel// CSwitch,\n,CInput//CInputFile,\n//CSelect,\n,CDropdownMenu//CCardFooter,\n,CInputGroup//CForm,\n}from'@coreui/react';//import { DocsLink } from 'src/reusable'\n//import usersData from './psm/users/usersData';\nimport usersData from'../users/UsersData';var Tables=function Tables(){var getBadge=function getBadge(status){switch(status){case'Active':return'success';case'Inactive':return'secondary';case'Pending':return'warning';case'Banned':return'danger';default:return'primary';}};var fields=['name','Phone Number','GH-ID','registered','role','status'];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,null,/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CModalHeader,null,/*#__PURE__*/React.createElement(CCol,null,/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"appendedInputButtons\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"controls\"},/*#__PURE__*/React.createElement(CInputGroup,null,/*#__PURE__*/React.createElement(CInput,{id:\"appendedInputButtons\",size:\"16\",type:\"text\"}),/*#__PURE__*/React.createElement(CInputGroupAppend,null,/*#__PURE__*/React.createElement(CCol,null,/*#__PURE__*/React.createElement(CButton,{color:\"primary\"},\"Search\")),/*#__PURE__*/React.createElement(CButton,{color:\"primary\",onClick:function onClick(){return setVisible(!visible);}},\"+ New Academic Qualification\"),' ',/*#__PURE__*/React.createElement(CButton,{color:\"success\",onClick:function onClick(){return setVisible(!visible);}},\"Export Report\")))))))),/*#__PURE__*/React.createElement(CModal,{show:visible,onClose:function onClose(){return setVisible(!visible);},color:\"primary\",size:\"lg\"},/*#__PURE__*/React.createElement(CModalHeader,{closeButton:true},/*#__PURE__*/React.createElement(CModalTitle,null,\"Administration | Academic Qualifiction Setup\")),/*#__PURE__*/React.createElement(CModalBody,null,/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{xs:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(CCardHeader,null,\"ACADEMIC QUALIFICATION MANAGEMENT\"),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(CForm,{action:\"\",method:\"post\",className:\"form-horizontal\"},/*#__PURE__*/React.createElement(CFormGroup,{row:true},/*#__PURE__*/React.createElement(CCol,{md:\"12\"},/*#__PURE__*/React.createElement(CInputGroup,null,/*#__PURE__*/React.createElement(CInputGroupPrepend,null,/*#__PURE__*/React.createElement(CButton,{type:\"button\",color:\"primary\"},/*#__PURE__*/React.createElement(CIcon,{name:\"cil-magnifying-glass\"}))),/*#__PURE__*/React.createElement(CInput,{id:\"AcaQua\",name:\"AcaQua\",placeholder:\"Academic Qualification\"}))))))))))),/*#__PURE__*/React.createElement(CModalFooter,null,/*#__PURE__*/React.createElement(CButton,{color:\"primary\",onClick:function onClick(){return setVisible(!visible);}},\"Save\"),' ',/*#__PURE__*/React.createElement(CButton,{color:\"warning\",onClick:function onClick(){return setVisible(!visible);}},\"Reset\"),' ',/*#__PURE__*/React.createElement(CButton,{color:\"danger\",onClick:function onClick(){return setVisible(!visible);}},\"Close\"))),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(CDataTable,{items:usersData,fields:fields,dark:true,hover:true,striped:true,bordered:true,size:\"sm\",itemsPerPage:20,pagination:true,scopedSlots:{'status':function status(item){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(CBadge,{color:getBadge(item.status)},item.status));}}}))))));};export default Tables;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/setup/AcQua.js"],"names":["React","useState","CIcon","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CDropdownMenu","CInputGroup","usersData","Tables","getBadge","status","fields","visible","setVisible","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport CIcon from '@coreui/icons-react'\n\n import {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n // CSwitch,\n  CInput,\n //CInputFile,\n//CSelect,\nCDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from '../users/UsersData';\n\n\nconst Tables = () => {\n  const getBadge = status => {\n    switch (status) {\n      case 'Active': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n  const fields = ['name','Phone Number','GH-ID','registered', 'role', 'status']\n  const [visible, setVisible] = useState(false)\n  return (\n    <>\n   \n   <CRow>\n        <CCol>\n          <CCard>\n            \n\n     \n<div>\n<CModalHeader>\n\n<CCol>\n       <CFormGroup>\n              <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n              <div className=\"controls\">\n                <CInputGroup>\n                  <CInput id=\"appendedInputButtons\" size=\"16\" type=\"text\" />\n                  <CInputGroupAppend>\n                    <CCol>\n                    <CButton color=\"primary\">Search</CButton>\n                    </CCol>\n                 \n                    <CButton color=\"primary\" onClick={() => setVisible(!visible)}>\n          + New Academic Qualification\n        </CButton>{' '}\n         \n        <CButton color=\"success\" onClick={() => setVisible(!visible)}>\n          Export Report\n        </CButton>\n\n                   </CInputGroupAppend>\n                </CInputGroup>\n              </div>\n            </CFormGroup>\n\n\n     \n  </CCol>   \n\n</CModalHeader>\n  </div>\n\n  \n            {/*<CButton color=\"success\" onClick={() => setSuccess(!success)} className=\"mr-1\">Success modal</CButton>\n            <CButton color=\"warning\" onClick={() => setWarning(!warning)} className=\"mr-1\">Warning modal</CButton>\n            <CButton color=\"danger\" onClick={() => setDanger(!danger)} className=\"mr-1\">Danger modal</CButton>\n  <CButton color=\"info\" onClick={() => setInfo(!info)} className=\"mr-1\">Info modal</CButton>*/}\n\n            <CModal \n              show={visible} \n              onClose={() => setVisible(!visible)}\n              color=\"primary\"  \n              size='lg'\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Administration | Academic Qualifiction Setup</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n      <form>\n      <CRow>         \n      <CCol xs=\"12\" md=\"12\">\n          <CCard>\n            <CCardHeader>ACADEMIC QUALIFICATION MANAGEMENT</CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"12\">\n                    <CInputGroup>\n                      <CInputGroupPrepend>\n                        <CButton type=\"button\" color=\"primary\"><CIcon name=\"cil-magnifying-glass\" /></CButton>\n                      </CInputGroupPrepend>\n                      <CInput id=\"AcaQua\" name=\"AcaQua\" placeholder=\"Academic Qualification\" />\n                    </CInputGroup>\n                  </CCol>\n                </CFormGroup>\n  \n          </CForm>\n        </CCardBody>\n        \n      </CCard>\n    </CCol>\n    </CRow>\n\n     \n    </form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"primary\" onClick={() => setVisible(!visible)}>\n                  Save\n                </CButton>{' '}\n\n                <CButton color=\"warning\" onClick={() => setVisible(!visible)}>\n                  Reset\n                </CButton>{' '}\n                <CButton color=\"danger\" onClick={() => setVisible(!visible)}>\n                  Close\n                </CButton>\n              </CModalFooter>\n            </CModal>\n\n \n           \n          \n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              dark\n              hover\n              striped\n              bordered\n              size=\"sm\"\n              itemsPerPage={20}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Tables\n"]},"metadata":{},"sourceType":"module"}