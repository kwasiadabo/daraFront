{"ast":null,"code":"import _objectSpread from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link,useNavigate,Navigate}from'react-router-dom';import axios from'axios';import moment from'moment';import baseUrl from'../../config.json';import auth from'../../components/services/authService';import Swal from'sweetalert2';import{Row,Col,Table,Progress,Button,UncontrolledButtonDropdown,DropdownMenu,DropdownToggle,DropdownItem,Input,Label,Badge}from'reactstrap';import{CBadge,CCard,CCardBody//CCardHeader,\n,CCol,CDataTable,CRow,CButton,CModal,CModalFooter,CModalHeader,CModalBody,CCardHeader,CInputGroupAppend,CInputGroupPrepend,CDropdownItem,CForm//CCardFooter,\n,CDropdownToggle//CInputRadio,\n,CDropdown,CModalTitle//CFormText,\n//CTextarea,\n,CFormGroup,CLabel// CSwitch,\n,CInput//CInputFile,\n,CSelect,CDropdownMenu//CCardFooter,\n,CInputGroup//CForm,\n}from'@coreui/react';var BankAccount=function BankAccount(){var _useState=useState({bank:'',branch:'',accountNumber:'',accountName:'',typeOfAccount:''}),_useState2=_slicedToArray(_useState,2),bank=_useState2[0],setBank=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),banks=_useState4[0],setBanks=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),bankAccounts=_useState6[0],setBankAccounts=_useState6[1];useEffect(function(){function getBanks(){return _getBanks.apply(this,arguments);}function _getBanks(){_getBanks=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(baseUrl.apiUrl+'/setup/bank');case 2:results=_context.sent;setBanks(results.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return _getBanks.apply(this,arguments);}getBanks();},[banks]);useEffect(function(){function getBankAccounts(){return _getBankAccounts.apply(this,arguments);}function _getBankAccounts(){_getBankAccounts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var results;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(baseUrl.apiUrl+'/setup/bankaccount');case 2:results=_context2.sent;setBankAccounts(results.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _getBankAccounts.apply(this,arguments);}getBankAccounts();},[bankAccounts]);var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var results;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();_context3.prev=1;_context3.next=4;return axios.post(baseUrl.apiUrl+'/setup/bankaccount',bank);case 4:results=_context3.sent;console.log(results.status);if(!(results.status!==200)){_context3.next=10;break;}return _context3.abrupt(\"return\",Swal.fire('OOPS','Submission Failed ! Check Entries and try again !','error'));case 10:Swal.fire('Success','Bank Account Details Saved Successfully','success');setBank({bank:'',branch:'',accountNumber:'',accountName:'',typeOfAccount:'',contact:''});case 12:_context3.next=17;break;case 14:_context3.prev=14;_context3.t0=_context3[\"catch\"](1);Swal.fire('OOPS ! '+_context3.t0.message,'error');case 17:case\"end\":return _context3.stop();}}},_callee3,null,[[1,14]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"centertext\"},\"Bank Account Details\"),/*#__PURE__*/React.createElement(\"p\",{className:\"staffp\"},\"Giving your banks accounts details helps track your transactions with them.\"),/*#__PURE__*/React.createElement(CInputGroup,{className:\"mt-3\"},/*#__PURE__*/React.createElement(CLabel,{for:\"inputPassword\",className:\"col-sm-3\"},\"Bank\"),/*#__PURE__*/React.createElement(CSelect,{className:\"form-select col-sm-8\",\"aria-label\":\"Default select example \",value:bank.bank,onChange:function onChange(e){return setBank(_objectSpread(_objectSpread({},bank),{},{bank:e.currentTarget.value}));}},/*#__PURE__*/React.createElement(\"option\",{defaultValue:\"\"},\"--Select Bank--\"),banks.map(function(b){return/*#__PURE__*/React.createElement(\"option\",{key:b.id,value:b.id,id:b.id},b.bank);}))),/*#__PURE__*/React.createElement(CInputGroup,{className:\"mt-3\"},/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"appdate\",className:\"col-sm-3\"},\"Branch\"),/*#__PURE__*/React.createElement(CInput,{type:\"text\",className:\"form-control  col-sm-8\",id:\"appdate\",value:bank.branch,onChange:function onChange(e){return setBank(_objectSpread(_objectSpread({},bank),{},{branch:e.currentTarget.value}));}})),/*#__PURE__*/React.createElement(CInputGroup,{className:\"mt-3\"},/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"phoneofgurantor1\",className:\"col-sm-3\"},\"Account Name\"),/*#__PURE__*/React.createElement(CInput,{type:\"text\",className:\"form-control  col-sm-8\",id:\"phoneofgurantor1\",value:bank.accountName,onChange:function onChange(e){return setBank(_objectSpread(_objectSpread({},bank),{},{accountName:e.currentTarget.value}));}})),/*#__PURE__*/React.createElement(CInputGroup,{className:\"mt-3\"},/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"phone\",className:\"col-sm-3\"},\"Account Number\"),/*#__PURE__*/React.createElement(CInput,{type:\"text\",className:\"form-control col-sm-8\",id:\"phone\",value:bank.accountNumber,onChange:function onChange(e){return setBank(_objectSpread(_objectSpread({},bank),{},{accountNumber:e.currentTarget.value}));}})),/*#__PURE__*/React.createElement(CInputGroup,{className:\"mt-3\"},/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"qualification\",className:\"col-sm-3\"},\"Type of Account\"),/*#__PURE__*/React.createElement(CSelect,{className:\"form-select col-sm-8\",\"aria-label\":\"Default select example\",value:bank.typeOfAccount,onChange:function onChange(e){setBank(_objectSpread(_objectSpread({},bank),{},{typeOfAccount:e.currentTarget.value}));}},/*#__PURE__*/React.createElement(\"option\",{defaultValue:\"\"},\"--Select Account Type--\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Savings\"},\"Savings\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Current Account\"},\"Current\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row justify-content-center\"},/*#__PURE__*/React.createElement(CButton,{className:\"btn btn-danger col-sm-3 mt-3\",onClick:handleSubmit},\"Submit\")),/*#__PURE__*/React.createElement(Table,{className:\"mt-3 sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"fs-sm\"},/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"Bank\"),/*#__PURE__*/React.createElement(\"th\",null,\"Account Number\"),/*#__PURE__*/React.createElement(\"th\",null,\"Branch\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type Of Account\"),/*#__PURE__*/React.createElement(\"th\",null,\"Name of Account\"))),/*#__PURE__*/React.createElement(\"tbody\",null,bankAccounts.map(function(c,index){return/*#__PURE__*/React.createElement(\"tr\",{key:c._id,Style:\"cursor: pointer;\"},/*#__PURE__*/React.createElement(\"td\",null,index+1),/*#__PURE__*/React.createElement(\"td\",null,c.BankName),/*#__PURE__*/React.createElement(\"td\",null,c.accountNumber),/*#__PURE__*/React.createElement(\"td\",null,c.branch),/*#__PURE__*/React.createElement(\"td\",null,c.typeOfAccount),/*#__PURE__*/React.createElement(\"td\",null,c.accountName));}))));};export default BankAccount;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/bankAccount.js"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","axios","moment","baseUrl","auth","Swal","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","BankAccount","bank","branch","accountNumber","accountName","typeOfAccount","setBank","banks","setBanks","bankAccounts","setBankAccounts","getBanks","get","apiUrl","results","data","getBankAccounts","handleSubmit","e","preventDefault","post","console","log","status","fire","contact","message","currentTarget","value","map","b","id","c","index","_id","BankName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport baseUrl from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Swal from 'sweetalert2'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst BankAccount = () => {\n  const [bank, setBank] = useState({\n    bank: '',\n    branch: '',\n    accountNumber: '',\n    accountName: '',\n    typeOfAccount: '',\n  })\n  const [banks, setBanks] = useState([])\n  const [bankAccounts, setBankAccounts] = useState([])\n\n  useEffect(() => {\n    async function getBanks() {\n      const results = await axios.get(baseUrl.apiUrl + '/setup/bank')\n      setBanks(results.data)\n    }\n    getBanks()\n  }, [banks])\n\n  useEffect(() => {\n    async function getBankAccounts() {\n      const results = await axios.get(baseUrl.apiUrl + '/setup/bankaccount')\n      setBankAccounts(results.data)\n    }\n    getBankAccounts()\n  }, [bankAccounts])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const results = await axios.post(\n        baseUrl.apiUrl + '/setup/bankaccount',\n        bank,\n      )\n      console.log(results.status)\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPS',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire(\n          'Success',\n          'Bank Account Details Saved Successfully',\n          'success',\n        )\n        setBank({\n          bank: '',\n          branch: '',\n          accountNumber: '',\n          accountName: '',\n          typeOfAccount: '',\n          contact: '',\n        })\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ' + err.message, 'error')\n    }\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"centertext\">Bank Account Details</h1>\n      <p className=\"staffp\">\n        Giving your banks accounts details helps track your transactions with\n        them.\n      </p>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel for=\"inputPassword\" className=\"col-sm-3\">\n          Bank\n        </CLabel>\n\n        <CSelect\n          className=\"form-select col-sm-8\"\n          aria-label=\"Default select example \"\n          value={bank.bank}\n          onChange={(e) => setBank({ ...bank, bank: e.currentTarget.value })}\n        >\n          <option defaultValue=\"\">--Select Bank--</option>\n          {banks.map((b) => (\n            <option key={b.id} value={b.id} id={b.id}>\n              {b.bank}\n            </option>\n          ))}\n        </CSelect>\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"appdate\" className=\"col-sm-3\">\n          Branch\n        </CLabel>\n\n        <CInput\n          type=\"text\"\n          className=\"form-control  col-sm-8\"\n          id=\"appdate\"\n          value={bank.branch}\n          onChange={(e) =>\n            setBank({\n              ...bank,\n              branch: e.currentTarget.value,\n            })\n          }\n        />\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"phoneofgurantor1\" className=\"col-sm-3\">\n          Account Name\n        </CLabel>\n\n        <CInput\n          type=\"text\"\n          className=\"form-control  col-sm-8\"\n          id=\"phoneofgurantor1\"\n          value={bank.accountName}\n          onChange={(e) =>\n            setBank({\n              ...bank,\n              accountName: e.currentTarget.value,\n            })\n          }\n        />\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"phone\" className=\"col-sm-3\">\n          Account Number\n        </CLabel>\n\n        <CInput\n          type=\"text\"\n          className=\"form-control col-sm-8\"\n          id=\"phone\"\n          value={bank.accountNumber}\n          onChange={(e) =>\n            setBank({\n              ...bank,\n              accountNumber: e.currentTarget.value,\n            })\n          }\n        />\n      </CInputGroup>\n\n      <CInputGroup className=\"mt-3\">\n        <CLabel htmlFor=\"qualification\" className=\"col-sm-3\">\n          Type of Account\n        </CLabel>\n\n        <CSelect\n          className=\"form-select col-sm-8\"\n          aria-label=\"Default select example\"\n          value={bank.typeOfAccount}\n          onChange={(e) => {\n            setBank({\n              ...bank,\n              typeOfAccount: e.currentTarget.value,\n            })\n          }}\n        >\n          <option defaultValue=\"\">--Select Account Type--</option>\n          <option value=\"Savings\">Savings</option>\n          <option value=\"Current Account\">Current</option>\n        </CSelect>\n      </CInputGroup>\n\n      <div className=\"row justify-content-center\">\n        <CButton\n          className=\"btn btn-danger col-sm-3 mt-3\"\n          onClick={handleSubmit}\n        >\n          Submit\n        </CButton>\n      </div>\n\n      <Table className=\"mt-3 sm\">\n        <thead>\n          <tr className=\"fs-sm\">\n            <th></th>\n            <th>Bank</th>\n            <th>Account Number</th>\n            <th>Branch</th>\n            <th>Type Of Account</th>\n            <th>Name of Account</th>\n          </tr>\n        </thead>\n        <tbody>\n          {bankAccounts.map((c, index) => (\n            <tr key={c._id} Style=\"cursor: pointer;\">\n              <td>{index + 1}</td>\n              <td>{c.BankName}</td>\n              <td>{c.accountNumber}</td>\n              <td>{c.branch}</td>\n              <td>{c.typeOfAccount}</td>\n              <td>{c.accountName}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default BankAccount\n"]},"metadata":{},"sourceType":"module"}