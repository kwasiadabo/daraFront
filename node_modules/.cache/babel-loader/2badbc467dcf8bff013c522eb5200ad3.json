{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/paymentSchedules.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Joi from 'joi-browser';\nimport CurrencyFormat from 'react-currency-format';\nimport Swal from 'sweetalert2';\nimport auth from '../../components/services/authService';\nimport { apiUrl } from '../../config.json';\nimport { reportUrl } from '../../config.json';\nimport '../../../src/schedulecards.css';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Label, Badge } from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\n\nvar PaymentSchedule = function PaymentSchedule() {\n  var _useParams = useParams(),\n      disbursementId = _useParams.disbursementId,\n      customer = _useParams.customer;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      render = _useState2[0],\n      setRender = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      paymentSchedule = _useState4[0],\n      setPaymentSchedule = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fullName = _useState6[0],\n      setFullName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loanId = _useState8[0],\n      setLoanId = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      accountNumber = _useState10[0],\n      setAccountNumber = _useState10[1];\n\n  var navigate = useHistory();\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  useEffect(function () {\n    function getPaymentSchedule() {\n      return _getPaymentSchedule.apply(this, arguments);\n    }\n\n    function _getPaymentSchedule() {\n      _getPaymentSchedule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/loan/booking/paymentschedule/' + disbursementId + '/' + customer);\n\n              case 2:\n                results = _context.sent;\n                setPaymentSchedule(results.data);\n                setFullName(results.data[0].fullName);\n                setAccountNumber(results.data[0].accountNumber);\n                setLoanId(results.data[0].loanId);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPaymentSchedule.apply(this, arguments);\n    }\n\n    getPaymentSchedule(); // console.log(paymentSchedule[0])\n  }, [render]);\n  var totalAmt = paymentSchedule.reduce(function (a, i) {\n    return a + i.dailyAmt;\n  }, 0);\n\n  var openCustomerListAsReport = function openCustomerListAsReport(url) {\n    var windowFeatures = 'left=100,top=100,width=320,height=320';\n    window.open(url, 'Payment Schedule', 'popup', windowFeatures);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3 text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Loan Payment Schedule\"), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"float-right m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Account Number : \", accountNumber), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Loan ID : \", loanId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Customer : \", fullName)), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"float-right mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Total Payment Expected : \", formatter.format(totalAmt)), /*#__PURE__*/React.createElement(Table, {\n    className: \"table-sm text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"No.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Day\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Daily Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, paymentSchedule.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.idNumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, moment(c.paymentDate).format('DD-MMMM-YYYY')), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }, c.dayNam), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, formatter.format(c.dailyAmt)));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    className: \"col-sm-2 btn-sm float-right mb-3 mr-3\",\n    color: \"danger\",\n    onClick: function onClick() {\n      return openCustomerListAsReport(reportUrl + '/paymentSchedule.aspx?' + disbursementId + '?' + customer);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Show as Report\"))))));\n};\n\nexport default PaymentSchedule;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/paymentSchedules.jsx"],"names":["React","useState","useEffect","useParams","useHistory","axios","moment","Joi","CurrencyFormat","Swal","auth","apiUrl","reportUrl","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","PaymentSchedule","disbursementId","customer","render","setRender","paymentSchedule","setPaymentSchedule","fullName","setFullName","loanId","setLoanId","accountNumber","setAccountNumber","navigate","formatter","Intl","NumberFormat","style","currency","getPaymentSchedule","get","results","data","totalAmt","reduce","a","i","dailyAmt","openCustomerListAsReport","url","windowFeatures","window","open","format","map","c","index","idNumber","paymentDate","dayNam"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,gCAAP;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,0BANF,EAOEC,YAPF,EAQEC,cARF,EASEC,YATF,EAUEC,KAVF,EAWEC,KAXF,EAYEC,KAZF,QAaO,YAbP;AAcA,SACEC,MADF,EAEEC,KAFF,EAGEC,SAHF,CAIE;AAJF,EAKEC,IALF,EAMEC,UANF,EAOEC,IAPF,EAQEC,OARF,EASEC,MATF,EAUEC,YAVF,EAWEC,YAXF,EAYEC,UAZF,EAaEC,WAbF,EAcEC,iBAdF,EAeEC,kBAfF,EAgBEC,aAhBF,EAiBEC,KAjBF,CAkBE;AAlBF,EAmBEC,eAnBF,CAoBE;AApBF,EAqBEC,SArBF,EAsBEC,gBAtBF,EAuBEC,WAvBF,CAwBE;AACA;AAzBF,EA0BEC,UA1BF,EA2BEC,MA3BF,CA4BE;AA5BF,EA6BEC,MA7BF,CA8BE;AA9BF,EA+BEC,OA/BF,EAgCEC,aAhCF,CAiCE;AAjCF,EAkCEC,WAlCF,CAmCE;AAnCF,OAoCO,eApCP;;AAsCA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,mBACShD,SAAS,EADlB;AAAA,MACpBiD,cADoB,cACpBA,cADoB;AAAA,MACJC,QADI,cACJA,QADI;;AAAA,kBAEApD,QAAQ,CAAC,KAAD,CAFR;AAAA;AAAA,MAErBqD,MAFqB;AAAA,MAEbC,SAFa;;AAAA,mBAGkBtD,QAAQ,CAAC,EAAD,CAH1B;AAAA;AAAA,MAGrBuD,eAHqB;AAAA,MAGJC,kBAHI;;AAAA,mBAIIxD,QAAQ,CAAC,EAAD,CAJZ;AAAA;AAAA,MAIrByD,QAJqB;AAAA,MAIXC,WAJW;;AAAA,mBAKA1D,QAAQ,CAAC,EAAD,CALR;AAAA;AAAA,MAKrB2D,MALqB;AAAA,MAKbC,SALa;;AAAA,mBAMc5D,QAAQ,CAAC,EAAD,CANtB;AAAA;AAAA,MAMrB6D,aANqB;AAAA,MAMNC,gBANM;;AAO5B,MAAMC,QAAQ,GAAG5D,UAAU,EAA3B;AACA,MAAI6D,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7CC,IAAAA,KAAK,EAAE,UADsC;AAE7CC,IAAAA,QAAQ,EAAE,KAFmC,CAI7C;AACA;AACA;;AAN6C,GAA/B,CAAhB;AASAnE,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCoE,kBADD;AAAA;AAAA;;AAAA;AAAA,qFACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACwBjE,KAAK,CAACkE,GAAN,CACpB5D,MAAM,GACJ,gCADF,GAEEyC,cAFF,GAGE,GAHF,GAIEC,QALkB,CADxB;;AAAA;AACQmB,gBAAAA,OADR;AAQEf,gBAAAA,kBAAkB,CAACe,OAAO,CAACC,IAAT,CAAlB;AACAd,gBAAAA,WAAW,CAACa,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBf,QAAjB,CAAX;AACAK,gBAAAA,gBAAgB,CAACS,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBX,aAAjB,CAAhB;AACAD,gBAAAA,SAAS,CAACW,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBb,MAAjB,CAAT;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAcdU,IAAAA,kBAAkB,GAdJ,CAed;AACD,GAhBQ,EAgBN,CAAChB,MAAD,CAhBM,CAAT;AAkBA,MAAMoB,QAAQ,GAAGlB,eAAe,CAACmB,MAAhB,CAAuB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChD,WAAOD,CAAC,GAAGC,CAAC,CAACC,QAAb;AACD,GAFgB,EAEd,CAFc,CAAjB;;AAIA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,GAAD,EAAS;AACxC,QAAMC,cAAc,GAAG,uCAAvB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,kBAAjB,EAAqC,OAArC,EAA8CC,cAA9C;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBnB,aAArB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,MAAd,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeF,QAAf,CAHF,CAFF,eASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC4BO,SAAS,CAACmB,MAAV,CAAiBV,QAAjB,CAD5B,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,eAAe,CAAC6B,GAAhB,CAAoB,UAACC,CAAD,EAAIC,KAAJ;AAAA,wBACnB;AAAI,MAAA,GAAG,EAAED,CAAC,CAACE,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,GAAG,CAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKjF,MAAM,CAACgF,CAAC,CAACG,WAAH,CAAN,CAAsBL,MAAtB,CAA6B,cAA7B,CAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKE,CAAC,CAACI,MAAP,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKzB,SAAS,CAACmB,MAAV,CAAiBE,CAAC,CAACR,QAAnB,CAAL,CAJF,CADmB;AAAA,GAApB,CADH,CAVF,CAJF,CATF,eAmCE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,uCADZ;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aACPC,wBAAwB,CACtBnE,SAAS,GACP,wBADF,GAEEwC,cAFF,GAGE,GAHF,GAIEC,QALoB,CADjB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,CAnCF,CADF,CADF,CAHF,CADF;AAsED,CAjHD;;AAmHA,eAAeF,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport { reportUrl } from '../../config.json'\nimport '../../../src/schedulecards.css'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst PaymentSchedule = () => {\n  const { disbursementId, customer } = useParams()\n  const [render, setRender] = useState(false)\n  const [paymentSchedule, setPaymentSchedule] = useState([])\n  const [fullName, setFullName] = useState('')\n  const [loanId, setLoanId] = useState('')\n  const [accountNumber, setAccountNumber] = useState('')\n  const navigate = useHistory()\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  useEffect(() => {\n    async function getPaymentSchedule() {\n      const results = await axios.get(\n        apiUrl +\n          '/loan/booking/paymentschedule/' +\n          disbursementId +\n          '/' +\n          customer,\n      )\n      setPaymentSchedule(results.data)\n      setFullName(results.data[0].fullName)\n      setAccountNumber(results.data[0].accountNumber)\n      setLoanId(results.data[0].loanId)\n    }\n    getPaymentSchedule()\n    // console.log(paymentSchedule[0])\n  }, [render])\n\n  const totalAmt = paymentSchedule.reduce((a, i) => {\n    return a + i.dailyAmt\n  }, 0)\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'Payment Schedule', 'popup', windowFeatures)\n  }\n  return (\n    <div className=\"container-fluid\">\n      <h4 className=\"mb-3 text-center\">Loan Payment Schedule</h4>\n\n      <CRow>\n        <CCol lg={12}>\n          <CCard>\n            {/*<CCardHeader className=\"text-right\">*/}\n            <strong className=\"float-right m-3\">\n              <p>Account Number : {accountNumber}</p>\n              <p>Loan ID : {loanId}</p>\n              <p>Customer : {fullName}</p>\n            </strong>\n            {/*</CCardHeader>*/}\n\n            <CCardBody>\n              <strong className=\"float-right mb-3\">\n                Total Payment Expected : {formatter.format(totalAmt)}\n              </strong>\n              <Table className=\"table-sm text-center\">\n                <thead>\n                  <tr className=\"fs-sm\">\n                    <th>No.</th>\n                    <th>Date</th>\n                    <th>Day</th>\n                    <th>Daily Amount</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {paymentSchedule.map((c, index) => (\n                    <tr key={c.idNumber}>\n                      <td>{index + 1}</td>\n                      <td>{moment(c.paymentDate).format('DD-MMMM-YYYY')}</td>\n                      <td>{c.dayNam}</td>\n                      <td>{formatter.format(c.dailyAmt)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CCardBody>\n            <div className=\"col-sm-12\">\n              {/* <CButton\n                className=\"col-sm-2 btn-sm float-right mb-3 mr-3\"\n                color=\"success\"\n                onClick={window.print}\n              >\n                Print\n             </CButton>*/}\n              <CButton\n                className=\"col-sm-2 btn-sm float-right mb-3 mr-3\"\n                color=\"danger\"\n                onClick={() =>\n                  openCustomerListAsReport(\n                    reportUrl +\n                      '/paymentSchedule.aspx?' +\n                      disbursementId +\n                      '?' +\n                      customer,\n                  )\n                }\n              >\n                Show as Report\n              </CButton>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default PaymentSchedule\n"]},"metadata":{},"sourceType":"module"}