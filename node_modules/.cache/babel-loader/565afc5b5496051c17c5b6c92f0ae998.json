{"ast":null,"code":"import _objectSpread from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/bulkCashReceipts.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { Link, useNavigate, Navigate, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Joi from 'joi-browser';\nimport CurrencyFormat from 'react-currency-format';\nimport Swal from 'sweetalert2';\nimport auth from '../../components/services/authService';\nimport { apiUrl } from '../../config.json';\nimport BookProduct from './bookProduct';\nimport LoanPrincipal from './loanPrincipalEntry';\nimport Guarantors from './guarantors';\nimport GuarantorTwo from './guarantorTwo';\nimport BusinessDetails from './businessDetails';\nimport Directions from './directions';\nimport AdaboSelect from 'react-select';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Badge, Card //Modal,\n} from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\nimport { render } from 'enzyme';\n\nvar BulkCashReceipts = function BulkCashReceipts() {\n  var _useState = useState(auth.getCurrentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      received = _useState4[0],\n      setReceived = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      staff = _useState6[0],\n      setStaff = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      officer = _useState8[0],\n      setOfficer = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      search = _useState10[0],\n      setSearch = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      show = _useState12[0],\n      setShow = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      reload = _useState14[0],\n      setReload = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      chartData = _useState16[0],\n      setChartData = _useState16[1];\n\n  var _useState17 = useState(new Date().toISOString().slice(0, 10)),\n      _useState18 = _slicedToArray(_useState17, 2),\n      chartDate = _useState18[0],\n      setChartDate = _useState18[1];\n\n  var _useState19 = useState(new Date()),\n      _useState20 = _slicedToArray(_useState19, 2),\n      todayDate = _useState20[0],\n      setTodayDate = _useState20[1];\n\n  var formatToday = function formatToday(date) {\n    return date.toISOString().slice(0, 10);\n  };\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      overageShortageChecked = _useState22[0],\n      setOverageShortageChecked = _useState22[1]; // const [shortageChecked, setShortageChecked] = useState(false);\n\n\n  var _useState23 = useState({\n    Officer: '',\n    dateOfReceipt: new Date().toISOString().slice(0, 10),\n    Momo: '',\n    Cash: '',\n    TotalAmount: '',\n    Overage: '',\n    Shortage: '',\n    receivedBy: user.nameOfStaff\n  }),\n      _useState24 = _slicedToArray(_useState23, 2),\n      bulkCash = _useState24[0],\n      setBulkCash = _useState24[1];\n\n  var _useState25 = useState(new Date().toISOString().slice(0, 10)),\n      _useState26 = _slicedToArray(_useState25, 2),\n      tdate = _useState26[0],\n      setTdate = _useState26[1];\n\n  useEffect(function () {\n    function getStaff() {\n      return _getStaff.apply(this, arguments);\n    }\n\n    function _getStaff() {\n      _getStaff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/setup/staff');\n\n              case 2:\n                results = _context.sent;\n                setStaff(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getStaff.apply(this, arguments);\n    }\n\n    getStaff();\n  }, []);\n  useEffect(function () {\n    function getBulkCash() {\n      return _getBulkCash.apply(this, arguments);\n    }\n\n    function _getBulkCash() {\n      _getBulkCash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(apiUrl + '/loan/bulkCash/' + tdate);\n\n              case 2:\n                results = _context2.sent;\n                setReceived(results.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getBulkCash.apply(this, arguments);\n    }\n\n    getBulkCash(); //console.log(received);\n  }, [tdate, reload]);\n  /*const handleSearch = (event) => {\n    setSearch(event.currentTarget.value);\n  };\n   const data = {\n    staff: staff.filter((c) =>\n      c.nameOfStaff.toLowerCase().includes(search.toLowerCase())\n    ),\n  };\n   const dataTouse = search.length === 0 ? staff : data.staff;\n  */\n\n  var handleOfficerSelect = function handleOfficerSelect(c) {\n    setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n      Officer: c.currentTarget.value,\n      Overage: 0,\n      Shortage: 0\n    })); //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  };\n\n  var handleSelectBulkCash = function handleSelectBulkCash(c) {\n    setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n      dateOfReceipt: c.dateOfReceipt,\n      Officer: c.Officer,\n      receivedBy: c.receivedBy,\n      overageshortage: c.overageshortage,\n      Momo: c.Momo,\n      Cash: c.Cash,\n      TotalAmount: c.TotalAmount,\n      Overage: 0,\n      Shortage: 0\n    }));\n    setShow(!show);\n  };\n\n  var handleMomoEntry = function handleMomoEntry(e) {\n    var TotalAmt = parseFloat(bulkCash.Cash) + parseFloat(e.currentTarget.value);\n    setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n      Momo: e.currentTarget.value,\n      TotalAmount: TotalAmt\n    }));\n  };\n\n  var handleCashEntry = function handleCashEntry(e) {\n    var TotalAmt = parseFloat(bulkCash.Momo) + parseFloat(e.currentTarget.value);\n    setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n      Cash: e.currentTarget.value,\n      TotalAmount: TotalAmt\n    }));\n  };\n\n  var schemaMap = {\n    Officer: Joi.string().required().label('Field Officer'),\n    dateOfReceipt: Joi.date().required().label('Date of Collection'),\n    Momo: Joi.number().required().label('Momo Received'),\n    Cash: Joi.number().required().label('Cash Received'),\n    TotalAmount: Joi.number().required().label('Total Amount'),\n    Overage: Joi.number().default(0),\n    Shortage: Joi.number().default(0),\n    receivedBy: Joi.string().allow('')\n  };\n  var schema = Joi.object(schemaMap);\n\n  var validateForm = function validateForm() {\n    var result = Joi.validate(bulkCash, schema);\n\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var validate, results;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(bulkCash);\n              validate = validateForm();\n\n              if (!(validate !== null)) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", Swal.fire('Validation', validate, 'error'));\n\n            case 4:\n              _context3.prev = 4;\n              _context3.next = 7;\n              return axios.post(apiUrl + '/loan/bulkcash', bulkCash);\n\n            case 7:\n              results = _context3.sent;\n\n              if (!(results.status !== 200)) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", Swal.fire('OOPs !', 'Submission Failed ! Check Entries and try again !', 'error'));\n\n            case 12:\n              Swal.fire('Good job!', 'Bulk Cash Received Successfully', 'success');\n              setBulkCash({\n                Officer: '',\n                dateOfReceipt: new Date().toISOString().slice(0, 10),\n                Momo: '',\n                Cash: '',\n                TotalAmount: '',\n                Overage: '',\n                Shortage: '',\n                receivedBy: user.nameOfStaff\n              });\n              setReload(!reload);\n\n            case 15:\n              _context3.next = 20;\n              break;\n\n            case 17:\n              _context3.prev = 17;\n              _context3.t0 = _context3[\"catch\"](4);\n              Swal.fire('OOPS ! ', 'Bulk Cash NOT Received', 'error');\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[4, 17]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n\n  var handleRemove = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(c) {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(c);\n              _context4.prev = 1;\n              _context4.next = 4;\n              return axios.delete(apiUrl + '/loan/bulkCash/' + c.id + '/' + c.officerId + '/' + c.dateOfReceipt);\n\n            case 4:\n              results = _context4.sent;\n\n              if (!(results.status === 200)) {\n                _context4.next = 12;\n                break;\n              }\n\n              Swal.fire('OK', 'Bulk Cash Deleted', 'success');\n              setBulkCash({\n                Officer: '',\n                dateOfReceipt: new Date().toISOString().slice(0, 10),\n                Momo: '',\n                Cash: '',\n                TotalAmount: '',\n                Overage: '',\n                Shortage: '',\n                receivedBy: user.nameOfStaff\n              });\n              setReload(!reload);\n              setTdate(new Date().toISOString().slice(0, 10));\n              _context4.next = 13;\n              break;\n\n            case 12:\n              return _context4.abrupt(\"return\", Swal.fire('OOPS', 'Bulk Cash NOT Deleted', 'error'));\n\n            case 13:\n              _context4.next = 18;\n              break;\n\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](1);\n              return _context4.abrupt(\"return\", Swal.fire('OOPS', _context4.t0 + '  [Bulk Cash NOT Deleted]', 'error'));\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 15]]);\n    }));\n\n    return function handleRemove(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    setBulkCash({\n      Officer: '',\n      dateOfReceipt: new Date().toISOString().slice(0, 10),\n      Momo: '',\n      Cash: '',\n      TotalAmount: '',\n      Overage: '',\n      Shortage: '',\n      receivedBy: user.nameOfStaff\n    });\n    setOfficer('');\n    setShow(false);\n  };\n\n  var handleOverage = function handleOverage(e) {\n    setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n      Overage: e.currentTarget.value,\n      Shortage: 0\n    }));\n  };\n\n  var handleShortage = function handleShortage(e) {\n    setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n      Shortage: e.currentTarget.value,\n      Overage: 0\n    }));\n  };\n\n  var myData = [];\n  var yData = chartData.map(function (m) {\n    var d = {\n      Officer: m.Officer.nameOfStaff,\n      Amount: m.amount\n    };\n    myData.push(d);\n  });\n\n  var handleDateChange = function handleDateChange(e) {\n    setChartDate(e.currentTarget.value);\n    setTdate(e.currentTarget.value);\n    setReload(!reload);\n  };\n\n  var handleEdit = function handleEdit(c) {\n    console.log(c);\n    setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n      dateOfReceipt: new Date(c.dateOfReceipt).toISOString().slice(0, 10),\n      Officer: c.Officer,\n      receivedBy: c.receivedBy,\n      Momo: c.Momo,\n      Cash: c.Cash,\n      TotalAmount: c.TotalAmount,\n      Overage: 0,\n      Shortage: 0,\n      id: c.id\n    }));\n    setShow(!show);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success btn-sm float-right\",\n    onClick: function onClick() {\n      setBulkCash({\n        dateOfReceipt: new Date().toISOString().slice(0, 10),\n        Officer: '',\n        receivedBy: user.nameOfStaff,\n        Momo: '',\n        Cash: '',\n        TotalAmount: '',\n        Overage: 0,\n        Shortage: 0\n      });\n      console.log(bulkCash);\n      setShow(!show);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, \"Receive Bulk Collections\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"dateOfReceipt\",\n    className: \"form-control col-sm-4 mb-3\",\n    id: \"dateOfReceipt\",\n    value: chartDate,\n    onChange: handleDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    className: \"table align-middle mb-0 table-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, \"Officer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }, \"Momo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, \"Cash\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, \"Overage\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, \"Shortage\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, received.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    }, moment(c.dateOfReceipt).format('DD-MMMM-YYYY')), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, c.Officer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, formatter.format(c.Momo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, formatter.format(c.Cash)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }\n    }, formatter.format(c.TotalAmount)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, formatter.format(c.Overage)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 15\n      }\n    }, formatter.format(c.Shortage)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }, c.status == null ? /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CButton, {\n      className: \"btn-sm\",\n      color: \"danger\",\n      onClick: function onClick() {\n        return handleRemove(c);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, \"Remove\")) : null));\n  }))), /*#__PURE__*/React.createElement(CModal, {\n    className: \"fade col-sm-10\",\n    size: \"md\",\n    show: show,\n    color: \"success\",\n    \"data-backdrop\": \"static\",\n    \"data-keyboard\": \"false\",\n    onClose: function onClose() {\n      setShow(!show);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    className: \"modal-header\",\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"centertext\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }\n  }, \"Receive Bulk Amount\"))), /*#__PURE__*/React.createElement(CModalBody, {\n    className: \"modal-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dateOfReceipt\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, \"Date of Receipt\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"dateOfReceipt\",\n    className: \"form-control text-center col-sm-12 mb-3\",\n    id: \"dateOfReceipt\",\n    value: bulkCash.dateOfReceipt,\n    onChange: function onChange(e) {\n      return setBulkCash(_objectSpread(_objectSpread({}, bulkCash), {}, {\n        dateOfReceipt: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default select example\",\n    value: bulkCash.Officer,\n    onChange: handleOfficerSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  }, \"--Select Loan Officer--\"), staff.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, b.nameOfStaff);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amountReceived\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, \"Momo Amount (GHS) *\"), /*#__PURE__*/React.createElement(\"input\", {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"amountReceived\",\n    className: \"form-control col-sm-12 mb-3\",\n    id: \"MomoAmount\",\n    value: bulkCash.Momo,\n    onChange: handleMomoEntry,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amountReceived\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }\n  }, \"Cash Amount (GHS) *\"), /*#__PURE__*/React.createElement(\"input\", {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"amountReceived\",\n    className: \"form-control  col-sm-12 mb-3\",\n    id: \"CashAmount\",\n    value: bulkCash.Cash,\n    onChange: handleCashEntry,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label mb-3 dispLabel float-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }\n  }, \"Total Amount : \", formatter.format(bulkCash.TotalAmount)), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"overage\",\n    className: \"form-label mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 13\n    }\n  }, \"Overage (if any)\"), /*#__PURE__*/React.createElement(\"input\", {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"overage\",\n    className: \"form-control  col-sm-12 mb-3\",\n    id: \"overage\",\n    value: bulkCash.Overage,\n    onChange: handleOverage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"shortage\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, \"Shortage (if any)\"), /*#__PURE__*/React.createElement(\"input\", {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"shortage\",\n    className: \"form-control  col-sm-12 mb-3\",\n    id: \"shortage\",\n    value: bulkCash.Shortage,\n    onChange: handleShortage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    onClick: handleSubmit,\n    color: \"success\",\n    className: \"btn-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(CButton, {\n    onClick: handleClose,\n    color: \"danger\",\n    className: \"btn-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default BulkCashReceipts;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/bulkCashReceipts.jsx"],"names":["React","useState","useEffect","Modal","Link","useNavigate","Navigate","useHistory","axios","moment","Joi","CurrencyFormat","Swal","auth","apiUrl","BookProduct","LoanPrincipal","Guarantors","GuarantorTwo","BusinessDetails","Directions","AdaboSelect","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Badge","Card","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","render","BulkCashReceipts","getCurrentUser","user","setUser","received","setReceived","staff","setStaff","officer","setOfficer","search","setSearch","show","setShow","reload","setReload","chartData","setChartData","Date","toISOString","slice","chartDate","setChartDate","todayDate","setTodayDate","formatToday","date","overageShortageChecked","setOverageShortageChecked","Officer","dateOfReceipt","Momo","Cash","TotalAmount","Overage","Shortage","receivedBy","nameOfStaff","bulkCash","setBulkCash","tdate","setTdate","getStaff","get","results","data","getBulkCash","handleOfficerSelect","c","currentTarget","value","handleSelectBulkCash","overageshortage","handleMomoEntry","e","TotalAmt","parseFloat","handleCashEntry","schemaMap","string","required","label","number","default","allow","schema","object","validateForm","result","validate","error","details","message","handleSubmit","console","log","fire","post","status","formatter","Intl","NumberFormat","style","currency","handleRemove","delete","id","officerId","handleClose","handleOverage","handleShortage","myData","yData","map","m","d","Amount","amount","push","handleDateChange","handleEdit","index","_id","format","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Link, useNavigate, Navigate, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport BookProduct from './bookProduct'\nimport LoanPrincipal from './loanPrincipalEntry'\nimport Guarantors from './guarantors'\nimport GuarantorTwo from './guarantorTwo'\nimport BusinessDetails from './businessDetails'\nimport Directions from './directions'\nimport AdaboSelect from 'react-select'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Badge,\n  Card,\n  //Modal,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\nimport { render } from 'enzyme'\n\nconst BulkCashReceipts = () => {\n  const [user, setUser] = useState(auth.getCurrentUser)\n  const [received, setReceived] = useState([])\n  const [staff, setStaff] = useState([])\n  const [officer, setOfficer] = useState('')\n  const [search, setSearch] = useState('')\n  const [show, setShow] = useState(false)\n  const [reload, setReload] = useState(false)\n  const [chartData, setChartData] = useState([])\n  const [chartDate, setChartDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const [todayDate, setTodayDate] = useState(new Date())\n  const formatToday = (date) => date.toISOString().slice(0, 10)\n  const [overageShortageChecked, setOverageShortageChecked] = useState(false)\n  // const [shortageChecked, setShortageChecked] = useState(false);\n  const [bulkCash, setBulkCash] = useState({\n    Officer: '',\n    dateOfReceipt: new Date().toISOString().slice(0, 10),\n    Momo: '',\n    Cash: '',\n    TotalAmount: '',\n    Overage: '',\n    Shortage: '',\n    receivedBy: user.nameOfStaff,\n  })\n  const [tdate, setTdate] = useState(new Date().toISOString().slice(0, 10))\n\n  useEffect(() => {\n    async function getStaff() {\n      const results = await axios.get(apiUrl + '/setup/staff')\n      setStaff(results.data)\n    }\n\n    getStaff()\n  }, [])\n\n  useEffect(() => {\n    async function getBulkCash() {\n      const results = await axios.get(apiUrl + '/loan/bulkCash/' + tdate)\n      setReceived(results.data)\n    }\n    getBulkCash()\n    //console.log(received);\n  }, [tdate, reload])\n\n  /*const handleSearch = (event) => {\n    setSearch(event.currentTarget.value);\n  };\n\n  const data = {\n    staff: staff.filter((c) =>\n      c.nameOfStaff.toLowerCase().includes(search.toLowerCase())\n    ),\n  };\n\n  const dataTouse = search.length === 0 ? staff : data.staff;\n*/\n  const handleOfficerSelect = (c) => {\n    setBulkCash({\n      ...bulkCash,\n      Officer: c.currentTarget.value,\n      Overage: 0,\n      Shortage: 0,\n    })\n    //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  }\n\n  const handleSelectBulkCash = (c) => {\n    setBulkCash({\n      ...bulkCash,\n      dateOfReceipt: c.dateOfReceipt,\n      Officer: c.Officer,\n      receivedBy: c.receivedBy,\n      overageshortage: c.overageshortage,\n      Momo: c.Momo,\n      Cash: c.Cash,\n      TotalAmount: c.TotalAmount,\n      Overage: 0,\n      Shortage: 0,\n    })\n    setShow(!show)\n  }\n\n  const handleMomoEntry = (e) => {\n    const TotalAmt =\n      parseFloat(bulkCash.Cash) + parseFloat(e.currentTarget.value)\n    setBulkCash({\n      ...bulkCash,\n      Momo: e.currentTarget.value,\n      TotalAmount: TotalAmt,\n    })\n  }\n\n  const handleCashEntry = (e) => {\n    const TotalAmt =\n      parseFloat(bulkCash.Momo) + parseFloat(e.currentTarget.value)\n    setBulkCash({\n      ...bulkCash,\n      Cash: e.currentTarget.value,\n      TotalAmount: TotalAmt,\n    })\n  }\n  const schemaMap = {\n    Officer: Joi.string().required().label('Field Officer'),\n    dateOfReceipt: Joi.date().required().label('Date of Collection'),\n    Momo: Joi.number().required().label('Momo Received'),\n    Cash: Joi.number().required().label('Cash Received'),\n    TotalAmount: Joi.number().required().label('Total Amount'),\n    Overage: Joi.number().default(0),\n    Shortage: Joi.number().default(0),\n    receivedBy: Joi.string().allow(''),\n  }\n\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(bulkCash, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const handleSubmit = async () => {\n    console.log(bulkCash)\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('Validation', validate, 'error')\n    }\n    try {\n      const results = await axios.post(apiUrl + '/loan/bulkcash', bulkCash)\n      if (results.status !== 200) {\n        return Swal.fire(\n          'OOPs !',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire('Good job!', 'Bulk Cash Received Successfully', 'success')\n        setBulkCash({\n          Officer: '',\n          dateOfReceipt: new Date().toISOString().slice(0, 10),\n          Momo: '',\n          Cash: '',\n          TotalAmount: '',\n          Overage: '',\n          Shortage: '',\n          receivedBy: user.nameOfStaff,\n        })\n        setReload(!reload)\n      }\n    } catch (err) {\n      Swal.fire('OOPS ! ', 'Bulk Cash NOT Received', 'error')\n    }\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleRemove = async (c) => {\n    console.log(c)\n    try {\n      const results = await axios.delete(\n        apiUrl +\n          '/loan/bulkCash/' +\n          c.id +\n          '/' +\n          c.officerId +\n          '/' +\n          c.dateOfReceipt,\n      )\n      if (results.status === 200) {\n        Swal.fire('OK', 'Bulk Cash Deleted', 'success')\n        setBulkCash({\n          Officer: '',\n          dateOfReceipt: new Date().toISOString().slice(0, 10),\n          Momo: '',\n          Cash: '',\n          TotalAmount: '',\n          Overage: '',\n          Shortage: '',\n          receivedBy: user.nameOfStaff,\n        })\n        setReload(!reload)\n        setTdate(new Date().toISOString().slice(0, 10))\n      } else {\n        return Swal.fire('OOPS', 'Bulk Cash NOT Deleted', 'error')\n      }\n    } catch (ex) {\n      return Swal.fire('OOPS', ex + '  [Bulk Cash NOT Deleted]', 'error')\n    }\n  }\n\n  const handleClose = () => {\n    setBulkCash({\n      Officer: '',\n      dateOfReceipt: new Date().toISOString().slice(0, 10),\n      Momo: '',\n      Cash: '',\n      TotalAmount: '',\n      Overage: '',\n      Shortage: '',\n      receivedBy: user.nameOfStaff,\n    })\n    setOfficer('')\n    setShow(false)\n  }\n\n  const handleOverage = (e) => {\n    setBulkCash({\n      ...bulkCash,\n      Overage: e.currentTarget.value,\n      Shortage: 0,\n    })\n  }\n\n  const handleShortage = (e) => {\n    setBulkCash({\n      ...bulkCash,\n      Shortage: e.currentTarget.value,\n      Overage: 0,\n    })\n  }\n\n  const myData = []\n  const yData = chartData.map((m) => {\n    let d = {\n      Officer: m.Officer.nameOfStaff,\n      Amount: m.amount,\n    }\n    myData.push(d)\n  })\n\n  const handleDateChange = (e) => {\n    setChartDate(e.currentTarget.value)\n    setTdate(e.currentTarget.value)\n    setReload(!reload)\n  }\n\n  const handleEdit = (c) => {\n    console.log(c)\n    setBulkCash({\n      ...bulkCash,\n      dateOfReceipt: new Date(c.dateOfReceipt).toISOString().slice(0, 10),\n      Officer: c.Officer,\n      receivedBy: c.receivedBy,\n      Momo: c.Momo,\n      Cash: c.Cash,\n      TotalAmount: c.TotalAmount,\n      Overage: 0,\n      Shortage: 0,\n      id: c.id,\n    })\n    setShow(!show)\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <button\n        type=\"button\"\n        className=\"btn btn-success btn-sm float-right\"\n        onClick={() => {\n          setBulkCash({\n            dateOfReceipt: new Date().toISOString().slice(0, 10),\n            Officer: '',\n            receivedBy: user.nameOfStaff,\n            Momo: '',\n            Cash: '',\n            TotalAmount: '',\n            Overage: 0,\n            Shortage: 0,\n          })\n          console.log(bulkCash)\n          setShow(!show)\n        }}\n      >\n        Receive Bulk Collections\n      </button>\n      <input\n        type=\"date\"\n        name=\"dateOfReceipt\"\n        className=\"form-control col-sm-4 mb-3\"\n        id=\"dateOfReceipt\"\n        value={chartDate}\n        onChange={handleDateChange}\n      />\n      <Table className=\"table align-middle mb-0 table-sm\">\n        <thead>\n          <tr className=\"fs-sm\">\n            <th></th>\n            <th>Date</th>\n            <th>Officer</th>\n            <th>Momo</th>\n            <th>Cash</th>\n            <th>Amount</th>\n            <th>Overage</th>\n            <th>Shortage</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {received.map((c, index) => (\n            <tr key={c._id}>\n              <td>{index + 1}</td>\n              <td>{moment(c.dateOfReceipt).format('DD-MMMM-YYYY')}</td>\n              <td>{c.Officer}</td>\n              <td>{formatter.format(c.Momo)}</td>\n              <td>{formatter.format(c.Cash)}</td>\n              <td>{formatter.format(c.TotalAmount)}</td>\n              <td>{formatter.format(c.Overage)}</td>\n              <td>{formatter.format(c.Shortage)}</td>\n              <td>\n                {c.status == null ? (\n                  <td>\n                    <CButton\n                      className=\"btn-sm\"\n                      color=\"danger\"\n                      onClick={() => handleRemove(c)}\n                    >\n                      Remove\n                    </CButton>\n                  </td>\n                ) : null}\n              </td>\n\n              {/*<td>\n                <CButton\n                  className=\"btn-sm\"\n                  color=\"info\"\n                  onClick={() => handleEdit(c)}\n                >\n                  Edit Entry\n                </CButton>\n              </td>*/}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n\n      <CModal\n        className=\"fade col-sm-10\"\n        size=\"md\"\n        show={show}\n        color=\"success\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setShow(!show)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <p>\n            <h3 className=\"centertext\">Receive Bulk Amount</h3>\n          </p>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body\">\n          <form>\n            <label htmlFor=\"dateOfReceipt\" className=\"form-label\">\n              Date of Receipt\n            </label>\n            <input\n              type=\"date\"\n              name=\"dateOfReceipt\"\n              className=\"form-control text-center col-sm-12 mb-3\"\n              id=\"dateOfReceipt\"\n              value={bulkCash.dateOfReceipt}\n              onChange={(e) =>\n                setBulkCash({\n                  ...bulkCash,\n                  dateOfReceipt: e.currentTarget.value,\n                })\n              }\n            />\n\n            <CSelect\n              className=\"form-select col-sm-12 mb-3\"\n              aria-label=\"Default select example\"\n              value={bulkCash.Officer}\n              onChange={handleOfficerSelect}\n            >\n              <option defaultValue=\"\">--Select Loan Officer--</option>\n              {staff.map((b) => (\n                <option key={b.id} value={b.id} id={b.id}>\n                  {b.nameOfStaff}\n                </option>\n              ))}\n            </CSelect>\n\n            <label htmlFor=\"amountReceived\" className=\"form-label\">\n              Momo Amount (GHS) *\n            </label>\n            <input\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"amountReceived\"\n              className=\"form-control col-sm-12 mb-3\"\n              id=\"MomoAmount\"\n              value={bulkCash.Momo}\n              onChange={handleMomoEntry}\n            />\n\n            <label htmlFor=\"amountReceived\" className=\"form-label\">\n              Cash Amount (GHS) *\n            </label>\n            <input\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"amountReceived\"\n              className=\"form-control  col-sm-12 mb-3\"\n              id=\"CashAmount\"\n              value={bulkCash.Cash}\n              onChange={handleCashEntry}\n            />\n\n            <label className=\"form-label mb-3 dispLabel float-right\">\n              Total Amount : {formatter.format(bulkCash.TotalAmount)}\n            </label>\n\n            <label htmlFor=\"overage\" className=\"form-label mt-3\">\n              Overage (if any)\n            </label>\n            <input\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"overage\"\n              className=\"form-control  col-sm-12 mb-3\"\n              id=\"overage\"\n              value={bulkCash.Overage}\n              onChange={handleOverage}\n            />\n\n            <label htmlFor=\"shortage\" className=\"form-label\">\n              Shortage (if any)\n            </label>\n            <input\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"shortage\"\n              className=\"form-control  col-sm-12 mb-3\"\n              id=\"shortage\"\n              value={bulkCash.Shortage}\n              onChange={handleShortage}\n            />\n          </form>\n        </CModalBody>\n        <CModalFooter>\n          <CButton onClick={handleSubmit} color=\"success\" className=\"btn-sm\">\n            Submit\n          </CButton>\n          <CButton onClick={handleClose} color=\"danger\" className=\"btn-sm\">\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default BulkCashReceipts\n"]},"metadata":{},"sourceType":"module"}