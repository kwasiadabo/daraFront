{"ast":null,"code":"import _objectSpread from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/investment.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Navigate, useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Modal } from 'react-bootstrap';\nimport auth from '../../components/services/authService';\nimport Joi from 'joi-browser';\nimport Swal from 'sweetalert2';\nimport { apiUrl } from '../../config.json';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Badge //Modal,\n} from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\nimport { LineChart, BarChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Label, Legend, ResponsiveContainer } from 'recharts';\nimport { GiSatelliteCommunication } from 'react-icons/gi';\n\nvar Investment = function Investment() {\n  var _useState = useState(auth.getCurrentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      investments = _useState4[0],\n      setInvestments = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showTransfer = _useState8[0],\n      setShowTransfer = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      render = _useState10[0],\n      setRender = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      customers = _useState14[0],\n      setCustomers = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      investmentItems = _useState16[0],\n      setInvestmentItems = _useState16[1];\n\n  var _useState17 = useState({\n    customer: '',\n    principal: '',\n    interest: '',\n    startDate: '',\n    duration: '',\n    madeBy: user.staff\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      investmentsData = _useState18[0],\n      setInvestmentsData = _useState18[1];\n\n  var _useState19 = useState(new Date().toISOString().slice(0, 10)),\n      _useState20 = _slicedToArray(_useState19, 2),\n      startDate = _useState20[0],\n      setStartDate = _useState20[1];\n\n  var _useState21 = useState(new Date().toISOString().slice(0, 10)),\n      _useState22 = _slicedToArray(_useState21, 2),\n      endDate = _useState22[0],\n      setEndDate = _useState22[1];\n\n  var navigate = useHistory(); // useEffect(() => {\n  //   async function getInvestments() {\n  //     const results = await axios.get(\n  //       apiUrl + '/transaction/investments/' + startDate + '/' + endDate,\n  //     )\n  //     setInvestments(results.data)\n  //   }\n  //   getInvestments()\n  // }, [startDate, endDate, render])\n\n  useEffect(function () {\n    function getInvestmentItems() {\n      return _getInvestmentItems.apply(this, arguments);\n    }\n\n    function _getInvestmentItems() {\n      _getInvestmentItems = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/investment/item');\n\n              case 2:\n                results = _context.sent;\n                setInvestmentItems(results.data); //console.log(results.data)\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getInvestmentItems.apply(this, arguments);\n    }\n\n    getInvestmentItems();\n    console.log(investmentItems);\n  }, []);\n  useEffect(function () {\n    function getCustomers() {\n      return _getCustomers.apply(this, arguments);\n    }\n\n    function _getCustomers() {\n      _getCustomers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(apiUrl + '/customer');\n\n              case 2:\n                results = _context2.sent;\n                setCustomers(results.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getCustomers.apply(this, arguments);\n    }\n\n    getCustomers();\n  }, [customers]);\n\n  var handleSearch = function handleSearch(event) {\n    setSearch(event.target.value);\n  };\n  /*let customersList = customers.find(\n      (o) => o.fullName.toLowerCase() === search.toLowerCase()\n    );*/\n  //console.log(customersList);\n  // const allCustomers = paginate(customers, currentPage, pageSize)\n\n\n  var data = {\n    allInvestments: investments.filter(function (item) {\n      return item.fullName.toLowerCase().includes(search.toLowerCase()) || item.madeBy.toLowerCase().includes(search.toLowerCase());\n    })\n  };\n  var dataTouse = search.length === 0 ? investments : data.allInvestments;\n  var schemaMap = {\n    customer: Joi.string().required().label('Customer'),\n    frequency: Joi.string().required().label('Frequency'),\n    principal: Joi.number().required().label('Principal'),\n    rate: Joi.number().required().label('Rate'),\n    interest: Joi.number().required().label('Interest'),\n    startDate: Joi.date().required().label('Start Date'),\n    duration: Joi.number().required().label('Duration'),\n    endDate: Joi.number().required().label('End Date'),\n    madeBy: Joi.number().required().label('Made by')\n  };\n  var schema = Joi.object(schemaMap);\n\n  var validateForm = function validateForm() {\n    var result = Joi.validate(investmentsData, schema);\n\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var validate, results;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(investmentsData);\n              validate = validateForm();\n\n              if (!(validate !== null)) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", Swal.fire('OOPS', validate, 'error'));\n\n            case 4:\n              _context3.next = 6;\n              return axios.post(apiUrl + '/transaction/investments', investmentsData);\n\n            case 6:\n              results = _context3.sent;\n\n              if (results.status === 200) {\n                Swal.fire('Success', 'Investment made Successfully', 'success');\n                setInvestmentsData({\n                  customer: '',\n                  frequency: '',\n                  principal: '',\n                  rate: '',\n                  interest: '',\n                  startDate: '',\n                  duration: '',\n                  endDate: '',\n                  madeBy: user.staff\n                });\n                setRender(!render);\n              }\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n\n  var handleAmountChanged = function handleAmountChanged(e) {\n    setInvestmentsData(_objectSpread(_objectSpread({}, investmentsData), {}, {\n      amount: e.currentTarget.value\n    }));\n  };\n\n  var handleClose = function handleClose() {\n    setInvestmentsData({\n      customer: '',\n      frequency: '',\n      principal: '',\n      rate: '',\n      interest: '',\n      startDate: '',\n      duration: '',\n      endDate: '',\n      madeBy: user.staff\n    });\n    setShow(false);\n    setShowTransfer(false);\n  };\n\n  var handleStartDateChange = function handleStartDateChange(e) {\n    setStartDate(e.currentTarget.value);\n  };\n\n  var handleEndDateChange = function handleEndDateChange(e) {\n    setEndDate(e.currentTarget.value);\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(c) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Swal.fire({\n                title: 'Do you want to Delete this Investment?',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: 'Delete',\n                denyButtonText: \"Don't\"\n              }).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(result) {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          if (!result.isConfirmed) {\n                            _context4.next = 7;\n                            break;\n                          }\n\n                          _context4.next = 3;\n                          return axios.delete(apiUrl + '/transaction/investments/' + c.id);\n\n                        case 3:\n                          Swal.fire('Deleted!', '', 'success');\n                          setRender(!render);\n                          _context4.next = 8;\n                          break;\n\n                        case 7:\n                          if (result.isDenied) {\n                            Swal.fire('Cancelled', '', 'info');\n                          }\n\n                        case 8:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var totalAmt = investments.reduce(function (a, i) {\n    return a + i.principal;\n  }, 0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"centertext mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"Investments Entry\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, \"NB: An investment is the cost of operations that a company incurs to generate revenue. As the popular saying goes, \\u201Cit costs money to make money.\\u201D\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    onClick: function onClick() {\n      return setShow(!show);\n    },\n    className: \"btn-sm float-right m-3 \",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, \"+ Make New Investment\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mb-3 row mt-5 col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: startDate,\n    onChange: handleStartDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, \"End Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: endDate,\n    onChange: handleEndDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3 text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, \"Total Investments: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 34\n    }\n  }, formatter.format(totalAmt)))), /*#__PURE__*/React.createElement(Table, {\n    className: \"table-sm col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, \"Mode Of Payment\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, \"Made By.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, dataTouse.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 19\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }, c.tdate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }, c.item), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }\n    }, c.modeOfPayment), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 19\n      }\n    }, c.narration), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }, formatter.format(c.amount)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, c.madeBy), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, !c.approved && /*#__PURE__*/React.createElement(CButton, {\n      onClick: function onClick() {\n        return handleDelete(c);\n      },\n      className: \"btn-sm float-right\",\n      color: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 23\n      }\n    }, \"Remove\")));\n  }))))), /*#__PURE__*/React.createElement(CModal, {\n    className: \"fade col-sm-8\",\n    size: \"md\",\n    show: show,\n    color: \"success\",\n    \"data-backdrop\": \"static\",\n    \"data-keyboard\": \"false\",\n    onClose: function onClose() {\n      setShow(!show);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    className: \"modal-header\",\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"centertext\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, \"INVESTMENT BOOKING\"))), /*#__PURE__*/React.createElement(CModalBody, {\n    className: \"modal-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"customer\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 17\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: investmentsData.customer,\n    onChange: function onChange(e) {\n      return setInvestmentsData(_objectSpread(_objectSpread({}, investmentsData), {}, {\n        customer: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }, customers.map(function (c) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: c.id,\n      value: c.id,\n      id: c.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, c.accountNumber + ' - ' + c.fullName);\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"customer\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, \"Investment Item\"), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: investmentsData.item,\n    onChange: function onChange(e) {\n      return setInvestmentsData(_objectSpread(_objectSpread({}, investmentsData), {}, {\n        item: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }\n  }, investmentItems.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    }, b.item);\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"duration\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  }, \"Duration (Days)\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    className: \"form-control  bold mb-3 col-sm-12\",\n    id: \"duration\",\n    placeholder: \"eg. 180 days\",\n    value: investmentsData.duration,\n    onChange: function onChange(e) {\n      return setInvestmentsData(_objectSpread(_objectSpread({}, investmentsData), {}, {\n        duration: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"principal\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, \"Principal (GHC)\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"principal\",\n    className: \"form-control text-right col-sm-12 mb-3\",\n    id: \"balance\",\n    value: investmentsData.amount,\n    onChange: function onChange(e) {\n      return setInvestmentsData(_objectSpread(_objectSpread({}, investmentsData), {}, {\n        amount: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"interest\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, \"Interest Per Annum (%)\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    className: \"form-control  bold mb-3 col-sm-12\",\n    id: \"interest\",\n    value: investmentsData.interest,\n    onChange: function onChange(e) {\n      return setInvestmentsData(_objectSpread(_objectSpread({}, investmentsData), {}, {\n        interest: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"startDate\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 17\n    }\n  }, \"Start Date *\"), /*#__PURE__*/React.createElement(CInput, {\n    autoComplete: \"off\",\n    type: \"date\",\n    name: \"startDate\",\n    className: \"form-control col-sm-12 mb-3\",\n    id: \"startDate\",\n    value: investmentsData.narration,\n    onChange: function onChange(e) {\n      return setInvestmentsData(_objectSpread(_objectSpread({}, investmentsData), {}, {\n        narration: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    onClick: handleSubmit,\n    className: \"btn-sm\",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    className: \"btn-sm\",\n    color: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default Investment;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/investment.jsx"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","useParams","useHistory","axios","moment","Modal","auth","Joi","Swal","apiUrl","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","LineChart","BarChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Label","Legend","ResponsiveContainer","GiSatelliteCommunication","Investment","getCurrentUser","user","setUser","investments","setInvestments","show","setShow","showTransfer","setShowTransfer","render","setRender","search","setSearch","customers","setCustomers","investmentItems","setInvestmentItems","customer","principal","interest","startDate","duration","madeBy","staff","investmentsData","setInvestmentsData","Date","toISOString","slice","setStartDate","endDate","setEndDate","navigate","getInvestmentItems","get","results","data","console","log","getCustomers","handleSearch","event","target","value","allInvestments","filter","item","fullName","toLowerCase","includes","dataTouse","length","schemaMap","string","required","label","frequency","number","rate","date","schema","object","validateForm","result","validate","error","details","message","handleSubmit","fire","post","status","formatter","Intl","NumberFormat","style","currency","handleAmountChanged","e","amount","currentTarget","handleClose","handleStartDateChange","handleEndDateChange","handleDelete","c","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","isConfirmed","delete","id","isDenied","totalAmt","reduce","a","i","format","map","index","tdate","modeOfPayment","narration","approved","accountNumber","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Link,\n  useNavigate,\n  Navigate,\n  useParams,\n  useHistory,\n} from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { Modal } from 'react-bootstrap'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport { apiUrl } from '../../config.json'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Badge,\n  //Modal,\n} from 'reactstrap'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nimport {\n  LineChart,\n  BarChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  Cell,\n  Label,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts'\nimport { GiSatelliteCommunication } from 'react-icons/gi'\n\nconst Investment = () => {\n  const [user, setUser] = useState(auth.getCurrentUser)\n  const [investments, setInvestments] = useState([])\n  const [show, setShow] = useState(false)\n  const [showTransfer, setShowTransfer] = useState(false)\n  const [render, setRender] = useState(false)\n\n  const [search, setSearch] = useState('')\n  const [customers, setCustomers] = useState([])\n  const [investmentItems, setInvestmentItems] = useState([])\n  const [investmentsData, setInvestmentsData] = useState({\n    customer: '',\n    principal: '',\n    interest: '',\n    startDate: '',\n    duration: '',\n    madeBy: user.staff,\n  })\n\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10))\n\n  let navigate = useHistory()\n\n  // useEffect(() => {\n  //   async function getInvestments() {\n  //     const results = await axios.get(\n  //       apiUrl + '/transaction/investments/' + startDate + '/' + endDate,\n  //     )\n  //     setInvestments(results.data)\n  //   }\n  //   getInvestments()\n  // }, [startDate, endDate, render])\n\n  useEffect(() => {\n    async function getInvestmentItems() {\n      const results = await axios.get(apiUrl + '/investment/item')\n      setInvestmentItems(results.data)\n      //console.log(results.data)\n    }\n    getInvestmentItems()\n    console.log(investmentItems)\n  }, [])\n\n  useEffect(() => {\n    async function getCustomers() {\n      const results = await axios.get(apiUrl + '/customer')\n      setCustomers(results.data)\n    }\n    getCustomers()\n  }, [customers])\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  /*let customersList = customers.find(\n      (o) => o.fullName.toLowerCase() === search.toLowerCase()\n    );*/\n\n  //console.log(customersList);\n  // const allCustomers = paginate(customers, currentPage, pageSize)\n\n  const data = {\n    allInvestments: investments.filter(\n      (item) =>\n        item.fullName.toLowerCase().includes(search.toLowerCase()) ||\n        item.madeBy.toLowerCase().includes(search.toLowerCase()),\n    ),\n  }\n\n  const dataTouse = search.length === 0 ? investments : data.allInvestments\n\n  const schemaMap = {\n    customer: Joi.string().required().label('Customer'),\n    frequency: Joi.string().required().label('Frequency'),\n    principal: Joi.number().required().label('Principal'),\n    rate: Joi.number().required().label('Rate'),\n    interest: Joi.number().required().label('Interest'),\n    startDate: Joi.date().required().label('Start Date'),\n    duration: Joi.number().required().label('Duration'),\n    endDate: Joi.number().required().label('End Date'),\n    madeBy: Joi.number().required().label('Made by'),\n  }\n\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(investmentsData, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const handleSubmit = async () => {\n    console.log(investmentsData)\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error')\n    }\n\n    const results = await axios.post(\n      apiUrl + '/transaction/investments',\n      investmentsData,\n    )\n    if (results.status === 200) {\n      Swal.fire('Success', 'Investment made Successfully', 'success')\n      setInvestmentsData({\n        customer: '',\n        frequency: '',\n        principal: '',\n        rate: '',\n        interest: '',\n        startDate: '',\n        duration: '',\n        endDate: '',\n        madeBy: user.staff,\n      })\n      setRender(!render)\n    }\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleAmountChanged = (e) => {\n    setInvestmentsData({\n      ...investmentsData,\n      amount: e.currentTarget.value,\n    })\n  }\n\n  const handleClose = () => {\n    setInvestmentsData({\n      customer: '',\n      frequency: '',\n      principal: '',\n      rate: '',\n      interest: '',\n      startDate: '',\n      duration: '',\n      endDate: '',\n      madeBy: user.staff,\n    })\n    setShow(false)\n    setShowTransfer(false)\n  }\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e.currentTarget.value)\n  }\n  const handleEndDateChange = (e) => {\n    setEndDate(e.currentTarget.value)\n  }\n\n  const handleDelete = async (c) => {\n    Swal.fire({\n      title: 'Do you want to Delete this Investment?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      denyButtonText: `Don't`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        await axios.delete(apiUrl + '/transaction/investments/' + c.id)\n        Swal.fire('Deleted!', '', 'success')\n        setRender(!render)\n      } else if (result.isDenied) {\n        Swal.fire('Cancelled', '', 'info')\n      }\n    })\n  }\n\n  const totalAmt = investments.reduce((a, i) => {\n    return a + i.principal\n  }, 0)\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 mt-2\">\n          <div className=\"row justify-content-center\">\n            <h4 className=\"centertext mb-3\">Investments Entry</h4>\n          </div>\n\n          <p className=\"text-center\">\n            NB: An investment is the cost of operations that a company incurs to\n            generate revenue. As the popular saying goes, “it costs money to\n            make money.”\n          </p>\n        </div>\n\n        <div className=\"col-sm-12\">\n          <CButton\n            onClick={() => setShow(!show)}\n            className=\"btn-sm float-right m-3 \"\n            color=\"success\"\n          >\n            + Make New Investment\n          </CButton>\n\n          <div class=\"mb-3 row mt-5 col-sm-12\">\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              Start Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={startDate}\n                onChange={handleStartDateChange}\n              />\n            </div>\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              End Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={endDate}\n                onChange={handleEndDateChange}\n              />\n            </div>\n            <div className=\"col-sm-3 text-right\">\n              Total Investments: <strong>{formatter.format(totalAmt)}</strong>\n            </div>\n          </div>\n\n          <Table className=\"table-sm col-sm-12\">\n            <thead className=\"\">\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Date</th>\n                <th>Item</th>\n                <th>Mode Of Payment</th>\n                <th>Description</th>\n                <th>Amount</th>\n                <th>Made By.</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((c, index) => (\n                <tr key={c.id}>\n                  <td>{index + 1}</td>\n                  <td>{c.tdate}</td>\n                  <td>{c.item}</td>\n                  <td>{c.modeOfPayment}</td>\n                  <td>{c.narration}</td>\n                  <td>{formatter.format(c.amount)}</td>\n                  <td>{c.madeBy}</td>\n                  <td>\n                    {!c.approved && (\n                      <CButton\n                        onClick={() => handleDelete(c)}\n                        className=\"btn-sm float-right\"\n                        color=\"danger\"\n                      >\n                        Remove\n                      </CButton>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n      <CModal\n        className=\"fade col-sm-8\"\n        size=\"md\"\n        show={show}\n        color=\"success\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setShow(!show)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <p>\n            <h3 className=\"centertext\">INVESTMENT BOOKING</h3>\n          </p>\n        </CModalHeader>\n        <CModalBody className=\"modal-body\">\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"customer\" className=\"form-label\">\n                  Customer\n                </CLabel>\n                <CSelect\n                  className=\"form-select col-sm-12 mb-3\"\n                  aria-label=\"Default\"\n                  value={investmentsData.customer}\n                  onChange={(e) =>\n                    setInvestmentsData({\n                      ...investmentsData,\n                      customer: e.currentTarget.value,\n                    })\n                  }\n                >\n                  {/* <option defaultValue=\"\">--Select Customer *--</option> */}\n                  {customers.map((c) => (\n                    <option key={c.id} value={c.id} id={c.id}>\n                      {c.accountNumber + ' - ' + c.fullName}\n                    </option>\n                  ))}\n                </CSelect>\n              </CFormGroup>\n            </CCol>\n          </CRow>\n\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"customer\" className=\"form-label\">\n                  Investment Item\n                </CLabel>\n                <CSelect\n                  className=\"form-select col-sm-12 mb-3\"\n                  aria-label=\"Default\"\n                  value={investmentsData.item}\n                  onChange={(e) =>\n                    setInvestmentsData({\n                      ...investmentsData,\n                      item: e.currentTarget.value,\n                    })\n                  }\n                >\n                  {/* <option defaultValue=\"\">--Select Investment Item*--</option> */}\n                  {investmentItems.map((b) => (\n                    <option key={b.id} value={b.id} id={b.id}>\n                      {b.item}\n                    </option>\n                  ))}\n                </CSelect>\n              </CFormGroup>\n            </CCol>\n          </CRow>\n\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"duration\" className=\"form-label\">\n                  Duration (Days)\n                </CLabel>\n\n                <CInput\n                  type=\"text\"\n                  className=\"form-control  bold mb-3 col-sm-12\"\n                  id=\"duration\"\n                  placeholder=\"eg. 180 days\"\n                  value={investmentsData.duration}\n                  onChange={(e) =>\n                    setInvestmentsData({\n                      ...investmentsData,\n                      duration: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <label htmlFor=\"principal\" className=\"form-label\">\n                  Principal (GHC)\n                </label>\n                <CInput\n                  type=\"text\"\n                  name=\"principal\"\n                  className=\"form-control text-right col-sm-12 mb-3\"\n                  id=\"balance\"\n                  value={investmentsData.amount}\n                  onChange={(e) =>\n                    setInvestmentsData({\n                      ...investmentsData,\n                      amount: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"interest\" className=\"form-label\">\n                  Interest Per Annum (%)\n                </CLabel>\n\n                <CInput\n                  type=\"text\"\n                  className=\"form-control  bold mb-3 col-sm-12\"\n                  id=\"interest\"\n                  value={investmentsData.interest}\n                  onChange={(e) =>\n                    setInvestmentsData({\n                      ...investmentsData,\n                      interest: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <label htmlFor=\"startDate\" className=\"form-label\">\n                  Start Date *\n                </label>\n                <CInput\n                  autoComplete=\"off\"\n                  type=\"date\"\n                  name=\"startDate\"\n                  className=\"form-control col-sm-12 mb-3\"\n                  id=\"startDate\"\n                  value={investmentsData.narration}\n                  onChange={(e) =>\n                    setInvestmentsData({\n                      ...investmentsData,\n                      narration: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n        </CModalBody>\n        <CModalFooter>\n          <CButton onClick={handleSubmit} className=\"btn-sm\" color=\"success\">\n            Submit\n          </CButton>\n          <Button onClick={handleClose} className=\"btn-sm\" color=\"danger\">\n            Close\n          </Button>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default Investment\n"]},"metadata":{},"sourceType":"module"}