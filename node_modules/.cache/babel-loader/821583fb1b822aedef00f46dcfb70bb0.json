{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/transferToBankApproval.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Navigate, useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Modal } from 'react-bootstrap';\nimport auth from '../../components/services/authService';\nimport Joi from 'joi-browser';\nimport Swal from 'sweetalert2';\nimport { apiUrl } from '../../config.json';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Badge //Modal,\n} from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\nimport { LineChart, BarChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Label, Legend, ResponsiveContainer } from 'recharts';\nimport { GiSatelliteCommunication } from 'react-icons/gi';\nimport { reportUrl } from '../../config.json';\n\nvar TransferToBankApproval = function TransferToBankApproval() {\n  var _useState = useState(auth.getCurrentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      deposits = _useState4[0],\n      setDeposits = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      details = _useState6[0],\n      setDetails = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showTransfer = _useState10[0],\n      setShowTransfer = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      render = _useState12[0],\n      setRender = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sumPaid = _useState14[0],\n      setSumPaid = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sumWithdrawn = _useState16[0],\n      setSumWithdrawn = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      search = _useState18[0],\n      setSearch = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      bal = _useState20[0],\n      setBal = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      loanBal = _useState22[0],\n      setLoanBal = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      expenseItems = _useState24[0],\n      setExpenseItems = _useState24[1];\n\n  var _useState25 = useState({\n    expenseItem: 0,\n    amount: 0,\n    narration: '',\n    madeBy: user.staff\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      expensesData = _useState26[0],\n      setExpensesData = _useState26[1];\n\n  var _useState27 = useState(5),\n      _useState28 = _slicedToArray(_useState27, 2),\n      pageSize = _useState28[0],\n      setPageSize = _useState28[1];\n\n  var _useState29 = useState(1),\n      _useState30 = _slicedToArray(_useState29, 2),\n      currentPage = _useState30[0],\n      setCurrentPage = _useState30[1];\n\n  var _useState31 = useState(new Date().toISOString().slice(0, 10)),\n      _useState32 = _slicedToArray(_useState31, 2),\n      startDate = _useState32[0],\n      setStartDate = _useState32[1];\n\n  var _useState33 = useState(new Date().toISOString().slice(0, 10)),\n      _useState34 = _slicedToArray(_useState33, 2),\n      endDate = _useState34[0],\n      setEndDate = _useState34[1];\n\n  var navigate = useHistory();\n  useEffect(function () {\n    function getUnApproved() {\n      return _getUnApproved.apply(this, arguments);\n    }\n\n    function _getUnApproved() {\n      _getUnApproved = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/banktrans/unapproved');\n\n              case 2:\n                results = _context.sent;\n                setDeposits(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getUnApproved.apply(this, arguments);\n    }\n\n    getUnApproved();\n  }, [render]);\n\n  var handleSearch = function handleSearch(event) {\n    setSearch(event.target.value);\n  };\n\n  var schemaMap = {\n    expenseItem: Joi.number().required().label('Expense Item'),\n    narration: Joi.string().required().label('Narration'),\n    amount: Joi.number().required().label('Withdrawal Amount'),\n    madeBy: Joi.number().required().label('Made by')\n  };\n  var schema = Joi.object(schemaMap);\n\n  var validateForm = function validateForm() {\n    var result = Joi.validate(expensesData, schema);\n\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var validate, results;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(expensesData);\n              validate = validateForm();\n\n              if (!(validate !== null)) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", Swal.fire('OOPS', validate, 'error'));\n\n            case 4:\n              _context2.next = 6;\n              return axios.post(apiUrl + '/transaction/expenses', expensesData);\n\n            case 6:\n              results = _context2.sent;\n\n              if (results.status === 200) {\n                Swal.fire('Success', 'Expense made Successfully', 'success');\n                setExpensesData({\n                  expenseItem: 0,\n                  narration: '',\n                  amount: 0,\n                  madeBy: user.staff\n                });\n                setRender(!render);\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n\n  var handleStartDateChange = function handleStartDateChange(e) {\n    setStartDate(e.currentTarget.value);\n  };\n\n  var handleEndDateChange = function handleEndDateChange(e) {\n    setEndDate(e.currentTarget.value);\n  };\n\n  var handleApprove = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(c) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              Swal.fire({\n                title: 'Do you want to Approve this Bank Deposit?',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: 'Approve',\n                denyButtonText: \"Don't Approve\"\n              }).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(result) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!result.isConfirmed) {\n                            _context3.next = 7;\n                            break;\n                          }\n\n                          _context3.next = 3;\n                          return axios.post(apiUrl + '/banktrans/approve', {\n                            tdate: c.tdate,\n                            cr: c.amount,\n                            narration: c.narration,\n                            bank: c.bankId,\n                            accountNo: c.AccountNo,\n                            userId: c.userId,\n                            approveBy: user.id,\n                            id: c.id\n                          });\n\n                        case 3:\n                          Swal.fire('Approved!', '', 'success');\n                          setRender(!render);\n                          _context3.next = 8;\n                          break;\n\n                        case 7:\n                          if (result.isDenied) {\n                            Swal.fire('Cancelled', '', 'info');\n                          }\n\n                        case 8:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleApprove(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleApproveAll = function handleApproveAll() {\n    Swal.fire({\n      title: 'Do you want to Approve all Expenses?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Approve',\n      denyButtonText: \"Don't Approve\"\n    }).then( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(result) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                /* Read more about isConfirmed, isDenied below */\n                if (result.isConfirmed) {\n                  deposits.map( /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(i) {\n                      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                        while (1) {\n                          switch (_context5.prev = _context5.next) {\n                            case 0:\n                              _context5.next = 2;\n                              return axios.put(apiUrl + '/transaction/expenses/' + i.id);\n\n                            case 2:\n                            case \"end\":\n                              return _context5.stop();\n                          }\n                        }\n                      }, _callee5);\n                    }));\n\n                    return function (_x4) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }());\n                  Swal.fire('Expenses Approved!', '', 'success');\n                  setRender(!render);\n                } else if (result.isDenied) {\n                  Swal.fire('Cancelled', '', 'info');\n                }\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  };\n\n  var totalAmt = deposits.reduce(function (a, i) {\n    return a + i.amount;\n  }, 0);\n\n  var openCustomerListAsReport = function openCustomerListAsReport(url) {\n    var windowFeatures = 'left=100,top=100,width=320,height=320';\n    window.open(url, 'customerlist', 'popup', windowFeatures);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"centertext mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, \"BANK DEPOSIT APPROVAL\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, \"NB: Bank Deposit entries not yet approved. Untill approved, transaction will not affect any account.\\u201D\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mb-3 row mt-5 col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: startDate,\n    onChange: handleStartDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"End Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: endDate,\n    onChange: handleEndDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CButton, {\n    onClick: function onClick() {\n      return openCustomerListAsReport(reportUrl + '/bankDeposits.aspx?' + startDate + '?' + endDate);\n    },\n    className: \"btn-sm float-right mb-3 \",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, \"View Report\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, \"Total UnApproved Deposits:\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, formatter.format(totalAmt))), /*#__PURE__*/React.createElement(Table, {\n    className: \"table-sm col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, \"Narration\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, \"Bank\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, \"Account Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }, \"Made By.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, deposits.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 19\n      }\n    }, c.tdate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 19\n      }\n    }, c.narration), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 19\n      }\n    }, c.bank), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    }, c.accountNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }, formatter.format(c.amount)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 19\n      }\n    }, c.userId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    }, !c.isApproved && /*#__PURE__*/React.createElement(CButton, {\n      onClick: function onClick() {\n        return handleApprove(c);\n      },\n      className: \"btn-sm float-right\",\n      color: \"success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, \"Approve\")));\n  }))))));\n};\n\nexport default TransferToBankApproval;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/transferToBankApproval.jsx"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","useParams","useHistory","axios","moment","Modal","auth","Joi","Swal","apiUrl","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","LineChart","BarChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Label","Legend","ResponsiveContainer","GiSatelliteCommunication","reportUrl","TransferToBankApproval","getCurrentUser","user","setUser","deposits","setDeposits","details","setDetails","show","setShow","showTransfer","setShowTransfer","render","setRender","sumPaid","setSumPaid","sumWithdrawn","setSumWithdrawn","search","setSearch","bal","setBal","loanBal","setLoanBal","expenseItems","setExpenseItems","expenseItem","amount","narration","madeBy","staff","expensesData","setExpensesData","pageSize","setPageSize","currentPage","setCurrentPage","Date","toISOString","slice","startDate","setStartDate","endDate","setEndDate","navigate","getUnApproved","get","results","data","handleSearch","event","target","value","schemaMap","number","required","label","string","schema","object","validateForm","result","validate","error","message","handleSubmit","console","log","fire","post","status","formatter","Intl","NumberFormat","style","currency","handleStartDateChange","e","currentTarget","handleEndDateChange","handleApprove","c","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","isConfirmed","tdate","cr","bank","bankId","accountNo","AccountNo","userId","approveBy","id","isDenied","handleApproveAll","map","i","put","totalAmt","reduce","a","openCustomerListAsReport","url","windowFeatures","window","open","format","index","accountNumber","isApproved"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Link,\n  useNavigate,\n  Navigate,\n  useParams,\n  useHistory,\n} from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { Modal } from 'react-bootstrap'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport { apiUrl } from '../../config.json'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Badge,\n  //Modal,\n} from 'reactstrap'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nimport {\n  LineChart,\n  BarChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  Cell,\n  Label,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts'\nimport { GiSatelliteCommunication } from 'react-icons/gi'\nimport { reportUrl } from '../../config.json'\n\nconst TransferToBankApproval = () => {\n  const [user, setUser] = useState(auth.getCurrentUser)\n  const [deposits, setDeposits] = useState([])\n  const [details, setDetails] = useState({})\n  const [show, setShow] = useState(false)\n  const [showTransfer, setShowTransfer] = useState(false)\n  const [render, setRender] = useState(false)\n  const [sumPaid, setSumPaid] = useState(0)\n  const [sumWithdrawn, setSumWithdrawn] = useState(0)\n  const [search, setSearch] = useState('')\n  const [bal, setBal] = useState(0)\n  const [loanBal, setLoanBal] = useState(0)\n  const [expenseItems, setExpenseItems] = useState([])\n  const [expensesData, setExpensesData] = useState({\n    expenseItem: 0,\n    amount: 0,\n    narration: '',\n    madeBy: user.staff,\n  })\n  const [pageSize, setPageSize] = useState(5)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10))\n  let navigate = useHistory()\n\n  useEffect(() => {\n    async function getUnApproved() {\n      const results = await axios.get(apiUrl + '/banktrans/unapproved')\n      setDeposits(results.data)\n    }\n    getUnApproved()\n  }, [render])\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const schemaMap = {\n    expenseItem: Joi.number().required().label('Expense Item'),\n    narration: Joi.string().required().label('Narration'),\n    amount: Joi.number().required().label('Withdrawal Amount'),\n    madeBy: Joi.number().required().label('Made by'),\n  }\n\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(expensesData, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const handleSubmit = async () => {\n    console.log(expensesData)\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error')\n    }\n\n    const results = await axios.post(\n      apiUrl + '/transaction/expenses',\n      expensesData,\n    )\n    if (results.status === 200) {\n      Swal.fire('Success', 'Expense made Successfully', 'success')\n      setExpensesData({\n        expenseItem: 0,\n        narration: '',\n        amount: 0,\n        madeBy: user.staff,\n      })\n      setRender(!render)\n    }\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e.currentTarget.value)\n  }\n  const handleEndDateChange = (e) => {\n    setEndDate(e.currentTarget.value)\n  }\n\n  const handleApprove = async (c) => {\n    Swal.fire({\n      title: 'Do you want to Approve this Bank Deposit?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Approve',\n      denyButtonText: `Don't Approve`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        await axios.post(apiUrl + '/banktrans/approve', {\n          tdate: c.tdate,\n          cr: c.amount,\n          narration: c.narration,\n          bank: c.bankId,\n          accountNo: c.AccountNo,\n          userId: c.userId,\n          approveBy: user.id,\n          id: c.id,\n        })\n        Swal.fire('Approved!', '', 'success')\n        setRender(!render)\n      } else if (result.isDenied) {\n        Swal.fire('Cancelled', '', 'info')\n      }\n    })\n  }\n\n  const handleApproveAll = () => {\n    Swal.fire({\n      title: 'Do you want to Approve all Expenses?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Approve',\n      denyButtonText: `Don't Approve`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        deposits.map(async (i) => {\n          await axios.put(apiUrl + '/transaction/expenses/' + i.id)\n        })\n        Swal.fire('Expenses Approved!', '', 'success')\n        setRender(!render)\n      } else if (result.isDenied) {\n        Swal.fire('Cancelled', '', 'info')\n      }\n    })\n  }\n\n  const totalAmt = deposits.reduce((a, i) => {\n    return a + i.amount\n  }, 0)\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <div className=\"row justify-content-center\">\n            <h4 className=\"centertext mb-3\">BANK DEPOSIT APPROVAL</h4>\n          </div>\n\n          <p className=\"text-center\">\n            NB: Bank Deposit entries not yet approved. Untill approved,\n            transaction will not affect any account.”\n          </p>\n        </div>\n\n        <div className=\"col-sm-12\">\n          {/*<CInput\n            type=\"text\"\n            name=\"searchCustomer\"\n            className=\"float-center col-sm-3 mb-3 mt-3\"\n            id=\"searchCustomer\"\n            value={null}\n            onChange={handleSearch}\n            placeholder=\"Search Customer\"\n          />*/}\n          <div class=\"mb-3 row mt-5 col-sm-12\">\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              Start Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={startDate}\n                onChange={handleStartDateChange}\n              />\n            </div>\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              End Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={endDate}\n                onChange={handleEndDateChange}\n              />\n            </div>\n            <CButton\n              onClick={() =>\n                openCustomerListAsReport(\n                  reportUrl + '/bankDeposits.aspx?' + startDate + '?' + endDate,\n                )\n              }\n              className=\"btn-sm float-right mb-3 \"\n              color=\"success\"\n            >\n              View Report\n            </CButton>\n          </div>\n          {/*<div className=\"col-sm-12\">\n            <CButton\n              onClick={handleApproveAll}\n              className=\"btn-sm float-right mb-3 \"\n              color=\"success\"\n            >\n              approve all\n            </CButton>\n        </div>*/}\n          <div className=\"col-sm-6 mb-3\">\n            Total UnApproved Deposits:{' '}\n            <strong>{formatter.format(totalAmt)}</strong>\n          </div>\n          <Table className=\"table-sm col-sm-12\">\n            <thead className=\"\">\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Date</th>\n                <th>Narration</th>\n                <th>Bank</th>\n                <th>Account Number</th>\n                <th>Amount</th>\n                <th>Made By.</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {deposits.map((c, index) => (\n                <tr key={c.id}>\n                  <td>{index + 1}</td>\n                  <td>{c.tdate}</td>\n                  <td>{c.narration}</td>\n                  <td>{c.bank}</td>\n                  <td>{c.accountNumber}</td>\n                  <td>{formatter.format(c.amount)}</td>\n                  <td>{c.userId}</td>\n                  <td>\n                    {!c.isApproved && (\n                      <CButton\n                        onClick={() => handleApprove(c)}\n                        className=\"btn-sm float-right\"\n                        color=\"success\"\n                      >\n                        Approve\n                      </CButton>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TransferToBankApproval\n"]},"metadata":{},"sourceType":"module"}