{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/defaulters.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { apiUrl, reportUrl } from '../../config.json';\nimport auth from '../../components/services/authService';\nimport Joi from 'joi-browser';\nimport Swal from 'sweetalert2';\nimport formData from 'form-data'; //import '../../table.css'\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n//import { ComponentToPrint } from \"./ComponentToPrint\";\n\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup, ButtonDropdowns //CForm,\n, CDropdownDivider, CInputCheckbox, CLink } from '@coreui/react';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Label, Badge } from 'reactstrap';\nimport CustomerView from './customerView';\n\nvar Defaulters = function Defaulters() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaulters = _useState2[0],\n      setDefaulters = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groups = _useState4[0],\n      setGroups = _useState4[1];\n\n  var navigate = useHistory();\n  useEffect(function () {\n    function getDefaulters() {\n      return _getDefaulters.apply(this, arguments);\n    }\n\n    function _getDefaulters() {\n      _getDefaulters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/loanreports/defaulters');\n\n              case 2:\n                results = _context.sent;\n                //console.log(results.data)\n                setDefaulters(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getDefaulters.apply(this, arguments);\n    }\n\n    getDefaulters();\n  }, []);\n\n  var openCustomerListAsReport = function openCustomerListAsReport(url) {\n    var windowFeatures = 'left=100,top=100,width=320,height=320';\n    window.open(url, 'customerlist', 'popup', windowFeatures);\n  };\n\n  var fields = ['fullName', 'phone', 'loanId', 'ExpectedAmount', 'Paid', 'DefaultAmount', 'lastDateForPayment', 'officer', 'daysDefaulted'];\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Defaulters\", /*#__PURE__*/React.createElement(CButton, {\n    onClick: function onClick() {\n      return openCustomerListAsReport(reportUrl + '/defaulters.aspx');\n    },\n    className: \"btn-sm float-right mb-3 col-2\",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Open Report\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: defaulters,\n    fields: fields,\n    itemsPerPage: 10,\n    pagination: true,\n    hover: true,\n    striped: true,\n    bordered: true,\n    scopedSlots: {\n      status: function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge('Active'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }\n        }, \"Active\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Defaulters;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/defaulters.jsx"],"names":["React","useState","useEffect","Link","useHistory","useNavigate","axios","apiUrl","reportUrl","auth","Joi","Swal","formData","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","ButtonDropdowns","CDropdownDivider","CInputCheckbox","CLink","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CustomerView","Defaulters","defaulters","setDefaulters","groups","setGroups","navigate","getDefaulters","get","results","data","openCustomerListAsReport","url","windowFeatures","window","open","fields","getBadge","status","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { apiUrl, reportUrl } from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport formData from 'form-data'\n\n//import '../../table.css'\n\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  ButtonDropdowns,\n  //CForm,\n  CDropdownDivider,\n  CInputCheckbox,\n  CLink,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nimport CustomerView from './customerView'\n\nconst Defaulters = () => {\n  const [defaulters, setDefaulters] = useState([])\n\n  const [groups, setGroups] = useState([])\n\n  let navigate = useHistory()\n  useEffect(() => {\n    async function getDefaulters() {\n      const results = await axios.get(apiUrl + '/loanreports/defaulters')\n      //console.log(results.data)\n      setDefaulters(results.data)\n    }\n    getDefaulters()\n  }, [])\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n  const fields = [\n    'fullName',\n    'phone',\n    'loanId',\n    'ExpectedAmount',\n    'Paid',\n    'DefaultAmount',\n    'lastDateForPayment',\n    'officer',\n    'daysDefaulted',\n  ]\n  const getBadge = (status) => {\n    switch (status) {\n      case 'Active':\n        return 'success'\n      case 'Inactive':\n        return 'secondary'\n      case 'Pending':\n        return 'warning'\n      case 'Banned':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  return (\n    <div>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              Defaulters\n              <CButton\n                onClick={() =>\n                  openCustomerListAsReport(reportUrl + '/defaulters.aspx')\n                }\n                className=\"btn-sm float-right mb-3 col-2\"\n                color=\"success\"\n              >\n                Open Report\n              </CButton>\n            </CCardHeader>\n\n            <CCardBody>\n              <CDataTable\n                items={defaulters}\n                fields={fields}\n                itemsPerPage={10}\n                pagination\n                hover\n                striped\n                bordered\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge('Active')}>Active</CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default Defaulters\n"]},"metadata":{},"sourceType":"module"}