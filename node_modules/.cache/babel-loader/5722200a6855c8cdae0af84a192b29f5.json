{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/setup/SysAdmin.js\";\n\nimport React, { useState } from 'react';\nimport CIcon from '@coreui/icons-react';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n//CSelect,\n, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react'; //import { DocsLink } from 'src/reusable'\n//import usersData from './psm/users/usersData';\n\nimport usersData from '../users/UsersData';\n\nvar Tables = function Tables() {\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n  };\n\n  var fields = ['name', 'Phone Number', 'GH-ID', 'registered', 'role', 'status'];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"appendedInputButtons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    id: \"appendedInputButtons\",\n    size: \"16\",\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CInputGroupAppend, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return setVisible(!visible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"+ New Admin Access\"), ' ', /*#__PURE__*/React.createElement(CButton, {\n    color: \"success\",\n    onClick: function onClick() {\n      return setVisible(!visible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Export Report\")))))))), /*#__PURE__*/React.createElement(CModal, {\n    show: visible,\n    onClose: function onClose() {\n      return setVisible(!visible);\n    },\n    color: \"primary\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CModalTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Setup | System Admin \")), /*#__PURE__*/React.createElement(CModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"ADMIN MANAGEMENT\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    action: \"\",\n    method: \"post\",\n    className: \"form-horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"button\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-magnifying-glass\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 64\n    }\n  }))), /*#__PURE__*/React.createElement(CInput, {\n    id: \"FileNumber\",\n    name: \"FileNumber\",\n    placeholder: \"Department\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"email\",\n    id: \"input2-group3\",\n    name: \"input2-group3\",\n    placeholder: \"Directorate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(CDropdown, {\n    className: \"input-group-append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CDropdownToggle, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(CDropdownMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CDropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 27\n    }\n  }, \"Dir 1\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 27\n    }\n  }, \"Dir 2\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 27\n    }\n  }, \"Dir 3\"))))))))))))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"success\",\n    size: \"sm\",\n    onClick: function onClick() {\n      return setVisible(!visible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Add\"), ' ', /*#__PURE__*/React.createElement(CButton, {\n    color: \"warning\",\n    size: \"sm\",\n    onClick: function onClick() {\n      return setVisible(!visible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(CButton, {\n    color: \"danger\",\n    size: \"sm\",\n    onClick: function onClick() {\n      return setVisible(!visible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    dark: true,\n    hover: true,\n    striped: true,\n    bordered: true,\n    size: \"sm\",\n    itemsPerPage: 20,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    dark: true,\n    hover: true,\n    striped: true,\n    bordered: true,\n    size: \"sm\",\n    itemsPerPage: 20,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default Tables;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/setup/SysAdmin.js"],"names":["React","useState","CIcon","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CDropdownMenu","CInputGroup","usersData","Tables","getBadge","status","fields","visible","setVisible","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n import CIcon from '@coreui/icons-react'\n\n import {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n // CSwitch,\n  CInput,\n //CInputFile,\n//CSelect,\nCDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from '../users/UsersData';\n\n\nconst Tables = () => {\n  const getBadge = status => {\n    switch (status) {\n      case 'Active': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n  const fields = ['name','Phone Number','GH-ID','registered', 'role', 'status']\n  const [visible, setVisible] = useState(false)\n  return (\n    <>\n   \n   <CRow>\n        <CCol>\n          <CCard>\n            \n\n     \n<div>\n<CModalHeader>\n\n<CCol>\n       <CFormGroup>\n              <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n              <div className=\"controls\">\n                <CInputGroup>\n                  <CInput id=\"appendedInputButtons\" size=\"16\" type=\"text\" />\n                  <CInputGroupAppend>\n                    <CCol>\n                    <CButton color=\"primary\">Search</CButton>\n                    </CCol>\n                 \n                    <CButton color=\"primary\" onClick={() => setVisible(!visible)}>\n          + New Admin Access\n        </CButton>{' '}\n         \n        <CButton color=\"success\" onClick={() => setVisible(!visible)}>\n          Export Report\n        </CButton>\n\n                   </CInputGroupAppend>\n                </CInputGroup>\n              </div>\n            </CFormGroup>\n\n\n     \n  </CCol>   \n\n</CModalHeader>\n  </div>\n\n  \n            {/*<CButton color=\"success\" onClick={() => setSuccess(!success)} className=\"mr-1\">Success modal</CButton>\n            <CButton color=\"warning\" onClick={() => setWarning(!warning)} className=\"mr-1\">Warning modal</CButton>\n            <CButton color=\"danger\" onClick={() => setDanger(!danger)} className=\"mr-1\">Danger modal</CButton>\n  <CButton color=\"info\" onClick={() => setInfo(!info)} className=\"mr-1\">Info modal</CButton>*/}\n\n            <CModal \n              show={visible} \n              onClose={() => setVisible(!visible)}\n              color=\"primary\"  \n              size='lg'\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Setup | System Admin </CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n      <form>\n      <CRow>         \n      <CCol xs=\"12\" md=\"12\">\n          <CCard>\n            <CCardHeader>ADMIN MANAGEMENT</CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"12\">\n                    <CInputGroup>\n                      <CInputGroupPrepend>\n                        <CButton type=\"button\" color=\"primary\"><CIcon name=\"cil-magnifying-glass\" /></CButton>\n                      </CInputGroupPrepend>\n                      <CInput id=\"FileNumber\" name=\"FileNumber\" placeholder=\"Department\" />\n                    </CInputGroup>\n                  </CCol>\n                </CFormGroup>\n\n                \n                <CFormGroup row>\n                  <CCol md=\"12\">\n                    <CInputGroup>\n                      <CInput type=\"email\" id=\"input2-group3\" name=\"input2-group3\" placeholder=\"Directorate\" />\n                      <CDropdown className=\"input-group-append\">\n                        <CDropdownToggle color=\"primary\">\n                          Select\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          <CDropdownItem>Dir 1</CDropdownItem>\n                          <CDropdownItem>Dir 2</CDropdownItem>\n                          <CDropdownItem>Dir 3</CDropdownItem>\n  \n                          </CDropdownMenu>\n                      </CDropdown>\n                    </CInputGroup>\n                  </CCol>\n                </CFormGroup>\n\n          </CForm>\n        </CCardBody>\n        \n      </CCard>\n    </CCol>\n    </CRow>\n\n</form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"success\" size=\"sm\" onClick={() => setVisible(!visible)}>\n                  Add\n                </CButton>{' '}\n                <CButton color=\"warning\" size=\"sm\" onClick={() => setVisible(!visible)}>\n                  Reset\n                </CButton>\n                <CButton color=\"danger\" size=\"sm\" onClick={() => setVisible(!visible)}>\n                  Cancel\n                </CButton>\n\n                \n              </CModalFooter>\n              <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              dark\n              hover\n              striped\n              bordered\n              size=\"sm\"\n              itemsPerPage={20}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n            </CModal>\n\n \n           \n          \n            <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={fields}\n              dark\n              hover\n              striped\n              bordered\n              size=\"sm\"\n              itemsPerPage={20}\n              pagination\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Tables\n"]},"metadata":{},"sourceType":"module"}