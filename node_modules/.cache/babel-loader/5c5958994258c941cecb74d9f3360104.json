{"ast":null,"code":"import _objectSpread from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/customerAssociations.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport baseUrl from '../../config.json';\nimport auth from '../../components/services/authService';\nimport Joi from 'joi-browser';\nimport Swal from 'sweetalert2';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Label, Badge } from 'reactstrap';\n\nvar Associations = function Associations() {\n  var _useState = useState({\n    association: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      association = _useState2[0],\n      setAssociation = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      associationData = _useState4[0],\n      setAssociationData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  useEffect(function () {\n    function getAssociations() {\n      return _getAssociations.apply(this, arguments);\n    }\n\n    function _getAssociations() {\n      _getAssociations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(baseUrl.apiUrl + '/setup/association');\n\n              case 2:\n                results = _context.sent;\n                setAssociationData(results.data); //console.log(customers);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getAssociations.apply(this, arguments);\n    }\n\n    getAssociations();\n  }, [associationData]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post(baseUrl.apiUrl + '/setup/association', association);\n\n            case 3:\n              results = _context2.sent;\n\n              if (!(results.status !== 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", Swal.fire('Failed', 'Submission Failed ! Check Entries and try again !', 'error'));\n\n            case 8:\n              Swal.fire('Success', 'Association/Group Saved Successfully', 'success');\n              setAssociation({\n                association: ''\n              });\n\n            case 10:\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              Swal.fire('Error', 'OOPS ! ' + _context2.t0.message, 'error');\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSearch = function handleSearch(event) {\n    setSearch(event.target.value);\n  };\n\n  var data = {\n    sAssociation: associationData.filter(function (item) {\n      return item.association.toLowerCase().includes(search.toLowerCase());\n    })\n  };\n\n  var staffView = function staffView(s) {\n    console.log(s);\n  };\n\n  var dataTouse = search.length === 0 ? associationData : data.sAssociation;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"centertext\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Group/Association\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"staffp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"People and their behaviors are what deliver results to your organization. Not systems, not processes, not computers, not machines.\", ' ', /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), \"\\\"Mark Hortsman\\\"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centreStaff row \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    className: \"btn btn-success btn-block col-sm-3 float-right btn-sm\",\n    onClick: function onClick() {\n      return setShow(!show);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"+ Setup New Association/Group\"), /*#__PURE__*/React.createElement(CInput, {\n    className: \"mt-3 mb-3 col-4\",\n    type: \"text\",\n    placeholder: \"Search with Staff Name or Phone\",\n    onChange: handleSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Association/Group\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, dataTouse.map(function (s, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: s._id,\n      onClick: function onClick() {\n        return staffView(s);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, s.association));\n  })))), /*#__PURE__*/React.createElement(CModal, {\n    show: show,\n    onClose: function onClose() {\n      setShow(!show);\n    },\n    color: \"success\",\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CModalTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"SETUP | ADD ASSOCIATION/GROUP \")), /*#__PURE__*/React.createElement(CModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"fullName\",\n    className: \"form-Label col-sm-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"Association / Group\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    className: \"form-control col-sm-8\",\n    id: \"fullName\",\n    value: association.association,\n    onChange: function onChange(e) {\n      return setAssociation(_objectSpread(_objectSpread({}, association), {}, {\n        association: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-3 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    className: \"btn btn-danger col-sm-3 mt-3 float-right btn-md\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Submit\")))))));\n};\n\nexport default Associations;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/customerAssociations.jsx"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","axios","moment","baseUrl","auth","Joi","Swal","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","Associations","association","setAssociation","associationData","setAssociationData","search","setSearch","show","setShow","getAssociations","get","apiUrl","results","data","handleSubmit","post","status","fire","message","handleSearch","event","target","value","sAssociation","filter","item","toLowerCase","includes","staffView","s","console","log","dataTouse","length","map","index","_id","e","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport baseUrl from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nconst Associations = () => {\n  const [association, setAssociation] = useState({\n    association: '',\n  })\n  const [associationData, setAssociationData] = useState([])\n  const [search, setSearch] = useState('')\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    async function getAssociations() {\n      const results = await axios.get(baseUrl.apiUrl + '/setup/association')\n      setAssociationData(results.data)\n      //console.log(customers);\n    }\n    getAssociations()\n  }, [associationData])\n\n  const handleSubmit = async () => {\n    try {\n      const results = await axios.post(\n        baseUrl.apiUrl + '/setup/association',\n        association,\n      )\n\n      if (results.status !== 200) {\n        return Swal.fire(\n          'Failed',\n          'Submission Failed ! Check Entries and try again !',\n          'error',\n        )\n      } else {\n        Swal.fire('Success', 'Association/Group Saved Successfully', 'success')\n        setAssociation({\n          association: '',\n        })\n      }\n    } catch (err) {\n      Swal.fire('Error', 'OOPS ! ' + err.message, 'error')\n    }\n  }\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const data = {\n    sAssociation: associationData.filter((item) =>\n      item.association.toLowerCase().includes(search.toLowerCase()),\n    ),\n  }\n\n  const staffView = (s) => {\n    console.log(s)\n  }\n\n  const dataTouse = search.length === 0 ? associationData : data.sAssociation\n  return (\n    <div className=\"col-sm-12 mt-3\">\n      <h1 className=\"centertext\">Group/Association</h1>\n      <p className=\"staffp\">\n        People and their behaviors are what deliver results to your\n        organization. Not systems, not processes, not computers, not machines.{' '}\n        <br />\n        \"Mark Hortsman\"\n      </p>\n\n      <div className=\"centreStaff row \">\n        <div className=\"table-responsive\">\n          <CButton\n            type=\"submit\"\n            className=\"btn btn-success btn-block col-sm-3 float-right btn-sm\"\n            onClick={() => setShow(!show)}\n          >\n            + Setup New Association/Group\n          </CButton>\n          <CInput\n            className=\"mt-3 mb-3 col-4\"\n            type=\"text\"\n            placeholder=\"Search with Staff Name or Phone\"\n            onChange={handleSearch}\n          />\n          <Table>\n            <thead>\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Association/Group</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((s, index) => (\n                <tr key={s._id} onClick={() => staffView(s)}>\n                  <td>{index + 1}</td>\n                  <td>{s.association}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n\n        <CModal\n          show={show}\n          onClose={() => {\n            setShow(!show)\n          }}\n          color=\"success\"\n          size=\"md\"\n        >\n          <CModalHeader closeButton>\n            <CModalTitle>SETUP | ADD ASSOCIATION/GROUP </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CFormGroup>\n              <CInputGroup className=\"mt-3\">\n                <CLabel htmlFor=\"fullName\" className=\"form-Label col-sm-4\">\n                  Association / Group\n                </CLabel>\n                <CInput\n                  type=\"text\"\n                  className=\"form-control col-sm-8\"\n                  id=\"fullName\"\n                  value={association.association}\n                  onChange={(e) =>\n                    setAssociation({\n                      ...association,\n                      association: e.currentTarget.value,\n                    })\n                  }\n                />\n              </CInputGroup>\n\n              <div className=\"d-flex justify-content-center mt-3 mb-3\">\n                <CButton\n                  className=\"btn btn-danger col-sm-3 mt-3 float-right btn-md\"\n                  onClick={handleSubmit}\n                >\n                  Submit\n                </CButton>\n              </div>\n            </CFormGroup>\n          </CModalBody>\n        </CModal>\n      </div>\n    </div>\n  )\n}\n\nexport default Associations\n"]},"metadata":{},"sourceType":"module"}