{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/dailyEntryReport.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { Link, useNavigate, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Joi from 'joi-browser';\nimport CurrencyFormat from 'react-currency-format';\nimport Swal from 'sweetalert2';\nimport auth from '../../components/services/authService';\nimport { apiUrl } from '../../config.json';\nimport { reportUrl } from '../../config.json';\nimport AdaboSelect from 'react-select';\nimport '../../../src/schedulecards.css';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Label, Badge } from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\n\nvar DailyEntryReport = function DailyEntryReport() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      render = _useState4[0],\n      setRender = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      collectionSheet = _useState6[0],\n      setCollectionSheet = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      officer = _useState8[0],\n      setOfficer = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      staff = _useState10[0],\n      setStaff = _useState10[1];\n\n  var _useState11 = useState(new Date().toISOString().slice(0, 10)),\n      _useState12 = _slicedToArray(_useState11, 2),\n      collectionDate = _useState12[0],\n      setCollectionDate = _useState12[1];\n\n  var user = auth.getCurrentUser();\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  useEffect(function () {\n    function getStaff() {\n      return _getStaff.apply(this, arguments);\n    }\n\n    function _getStaff() {\n      _getStaff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/setup/staff');\n\n              case 2:\n                results = _context.sent;\n                setStaff(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getStaff.apply(this, arguments);\n    }\n\n    getStaff();\n  }, []);\n  /*useEffect(() => {\n    async function getCollectionSheet() {\n      const results = await axios.get(\n        apiUrl + '/loanreports/dailyEntry/' + officer + '/' + collectionDate,\n      )\n      setCollectionSheet(results.data)\n    }\n    getCollectionSheet()\n    console.log(collectionSheet)\n  }, [collectionDate, officer])\n  */\n\n  var money = new Intl.NumberFormat('de-CH', {\n    style: 'currency',\n    currency: 'CHF'\n  });\n  var today = new Date(); // returns the month (from 0 to 11)\n\n  var month = today.toLocaleString('default', {\n    month: 'long'\n  }); // returns the day of the month (from 1 to 31)\n\n  var day = today.getDate(); // returns the year (four digits)\n\n  var year = today.getFullYear();\n\n  function add(accumulator, a) {\n    return accumulator + a;\n  }\n\n  var handleDateChange = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setCollectionDate(e.currentTarget.value);\n              _context2.next = 3;\n              return axios.get(apiUrl + '/loanreports/dailyEntry/' + officer + '/' + e.currentTarget.value);\n\n            case 3:\n              results = _context2.sent;\n              setCollectionSheet(results.data);\n              console.log(collectionSheet);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleDateChange(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var totalAmt = collectionSheet.reduce(function (a, i) {\n    return a + i.Amount;\n  }, 0);\n\n  var openCustomerListAsReport = function openCustomerListAsReport(url) {\n    var windowFeatures = 'left=100,top=100,width=350,height=320';\n    window.open(url, 'Daily Entry Report', 'popup', windowFeatures);\n  };\n\n  var handleOfficerSelect = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(c) {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setOfficer(c.currentTarget.value);\n              _context3.next = 3;\n              return axios.get(apiUrl + '/loanreports/dailyEntry/' + c.currentTarget.value + '/' + collectionDate);\n\n            case 3:\n              results = _context3.sent;\n              setCollectionSheet(results.data); //setOfficer(c.nameOfStaff);\n              // setShow(!show);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleOfficerSelect(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    className: \"text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"centertext mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, \"DAILY ENTRY REPORT\"))), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mb-3 row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default select example\",\n    value: officer,\n    onChange: handleOfficerSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, \"--Select Officer *--\"), staff.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, b.nameOfStaff);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Collection Date\"), /*#__PURE__*/React.createElement(CInput, {\n    id: \"collectionDate\",\n    type: \"date\",\n    className: \"form-control text-center col-sm-12 mb-3\",\n    \"aria-label\": \"Default select example\",\n    value: collectionDate,\n    onChange: handleDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4 mb-3 figureDisplay justify-content-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-sm-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"TOTAL OF ENTRIES : \", formatter.format(totalAmt))), /*#__PURE__*/React.createElement(Table, {\n    className: \"table-lg col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"Account Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, \"Loan ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, collectionSheet.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 27\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 27\n      }\n    }, c.accountNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 27\n      }\n    }, c.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    }, c.loanId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 27\n      }\n    }, formatter.format(c.Amount)));\n  }))))), /*#__PURE__*/React.createElement(CButton, {\n    className: \"float-right m-3 col-sm-2\",\n    color: \"success\",\n    onClick: function onClick() {\n      return openCustomerListAsReport(reportUrl + '/dailyEntry.aspx?' + officer + '?' + collectionDate);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, \"Show As Report\"))))));\n};\n\nexport default DailyEntryReport;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/dailyEntryReport.jsx"],"names":["React","useState","useEffect","Modal","Link","useNavigate","Navigate","axios","moment","Joi","CurrencyFormat","Swal","auth","apiUrl","reportUrl","AdaboSelect","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","DailyEntryReport","show","setShow","render","setRender","collectionSheet","setCollectionSheet","officer","setOfficer","staff","setStaff","Date","toISOString","slice","collectionDate","setCollectionDate","user","getCurrentUser","formatter","Intl","NumberFormat","style","currency","getStaff","get","results","data","money","today","month","toLocaleString","day","getDate","year","getFullYear","add","accumulator","a","handleDateChange","e","currentTarget","value","console","log","totalAmt","reduce","i","Amount","openCustomerListAsReport","url","windowFeatures","window","open","handleOfficerSelect","c","map","b","id","nameOfStaff","format","index","accountNumber","customer","loanId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport { reportUrl } from '../../config.json'\nimport AdaboSelect from 'react-select'\nimport '../../../src/schedulecards.css'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst DailyEntryReport = () => {\n  const [show, setShow] = useState(false)\n  const [render, setRender] = useState(false)\n  const [collectionSheet, setCollectionSheet] = useState([])\n  const [officer, setOfficer] = useState(0)\n  const [staff, setStaff] = useState([])\n  const [collectionDate, setCollectionDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const user = auth.getCurrentUser()\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  useEffect(() => {\n    async function getStaff() {\n      const results = await axios.get(apiUrl + '/setup/staff')\n      setStaff(results.data)\n    }\n\n    getStaff()\n  }, [])\n\n  /*useEffect(() => {\n    async function getCollectionSheet() {\n      const results = await axios.get(\n        apiUrl + '/loanreports/dailyEntry/' + officer + '/' + collectionDate,\n      )\n      setCollectionSheet(results.data)\n    }\n    getCollectionSheet()\n    console.log(collectionSheet)\n  }, [collectionDate, officer])\n  */\n\n  const money = new Intl.NumberFormat('de-CH', {\n    style: 'currency',\n    currency: 'CHF',\n  })\n\n  var today = new Date()\n\n  // returns the month (from 0 to 11)\n  const month = today.toLocaleString('default', { month: 'long' })\n\n  // returns the day of the month (from 1 to 31)\n  const day = today.getDate()\n\n  // returns the year (four digits)\n  const year = today.getFullYear()\n\n  function add(accumulator, a) {\n    return accumulator + a\n  }\n\n  const handleDateChange = async (e) => {\n    setCollectionDate(e.currentTarget.value)\n    const results = await axios.get(\n      apiUrl +\n        '/loanreports/dailyEntry/' +\n        officer +\n        '/' +\n        e.currentTarget.value,\n    )\n    setCollectionSheet(results.data)\n    console.log(collectionSheet)\n  }\n\n  const totalAmt = collectionSheet.reduce((a, i) => {\n    return a + i.Amount\n  }, 0)\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=350,height=320'\n    window.open(url, 'Daily Entry Report', 'popup', windowFeatures)\n  }\n\n  const handleOfficerSelect = async (c) => {\n    setOfficer(c.currentTarget.value)\n    const results = await axios.get(\n      apiUrl +\n        '/loanreports/dailyEntry/' +\n        c.currentTarget.value +\n        '/' +\n        collectionDate,\n    )\n    setCollectionSheet(results.data)\n    //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"m-3\">\n        <div className=\"mb-3\">\n          <CRow>\n            <CCol lg={12}>\n              <CCard lg={12}>\n                <CCardHeader className=\"text-right\">\n                  <div className=\"row justify-content-center\">\n                    <h4 className=\"centertext mb-2\">DAILY ENTRY REPORT</h4>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                  <div class=\"mb-3 row\">\n                    <CSelect\n                      className=\"form-select col-sm-12 mb-3\"\n                      aria-label=\"Default select example\"\n                      value={officer}\n                      onChange={handleOfficerSelect}\n                    >\n                      <option defaultValue=\"\">--Select Officer *--</option>\n                      {staff.map((b) => (\n                        <option key={b.id} value={b.id} id={b.id}>\n                          {b.nameOfStaff}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </div>\n                  {/* <p className=\"mt-3\">\n                    Date: {moment(collectionDate).format('DD,MMMM,YYYY')}\n                      </p>*/}\n                  <div className=\"row mb-3\">\n                    <label>Collection Date</label>\n                    <CInput\n                      id=\"collectionDate\"\n                      type=\"date\"\n                      className=\"form-control text-center col-sm-12 mb-3\"\n                      aria-label=\"Default select example\"\n                      value={collectionDate}\n                      onChange={handleDateChange}\n                    />\n                  </div>\n\n                  <div className=\"col-sm-4 mb-3 figureDisplay justify-content-right\"></div>\n                  <div className=\"mb-3 col-sm-12\">\n                    <div className=\"mb-3 col-sm-4\">\n                      TOTAL OF ENTRIES : {formatter.format(totalAmt)}\n                    </div>\n                  </div>\n                  <Table className=\"table-lg col-sm-12\">\n                    <thead>\n                      <tr className=\"\">\n                        <th></th>\n                        <th>Account Number</th>\n                        <th>Name</th>\n                        <th>Loan ID</th>\n                        <th>Amount</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {collectionSheet.map((c, index) => (\n                        <tr key={c.id}>\n                          <td>{index + 1}</td>\n                          <td>{c.accountNumber}</td>\n                          <td>{c.customer}</td>\n                          <td>{c.loanId}</td>\n                          <td>{formatter.format(c.Amount)}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </CCardBody>\n              </CCard>\n              <CButton\n                className=\"float-right m-3 col-sm-2\"\n                color=\"success\"\n                onClick={() =>\n                  openCustomerListAsReport(\n                    reportUrl +\n                      '/dailyEntry.aspx?' +\n                      officer +\n                      '?' +\n                      collectionDate,\n                  )\n                }\n              >\n                Show As Report\n              </CButton>\n            </CCol>\n          </CRow>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DailyEntryReport\n"]},"metadata":{},"sourceType":"module"}