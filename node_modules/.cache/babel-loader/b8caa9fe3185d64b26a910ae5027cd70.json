{"ast":null,"code":"import _objectSpread from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/otherBankWithdrawals.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Navigate, useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Modal } from 'react-bootstrap';\nimport auth from '../../components/services/authService';\nimport Joi from 'joi-browser';\nimport Swal from 'sweetalert2';\nimport { apiUrl } from '../../config.json';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Badge //Modal,\n} from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\nimport { LineChart, BarChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Label, Legend, ResponsiveContainer } from 'recharts';\nimport { GiSatelliteCommunication } from 'react-icons/gi';\n\nvar WithdrawFromBank = function WithdrawFromBank() {\n  var _useState = useState(auth.getCurrentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateMode = _useState6[0],\n      setUpdateMode = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      id = _useState8[0],\n      setId = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      render = _useState10[0],\n      setRender = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      bankAccounts = _useState14[0],\n      setBankAccounts = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      banks = _useState16[0],\n      setBanks = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      bankWithdrawals = _useState18[0],\n      setBankWithdrawals = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      vaultBal = _useState20[0],\n      setVaultBal = _useState20[1];\n\n  var _useState21 = useState({\n    tdate: new Date().toISOString().slice(0, 10),\n    dr: '',\n    narration: '',\n    bank: 0,\n    accountNo: 0,\n    userId: user.staff\n  }),\n      _useState22 = _slicedToArray(_useState21, 2),\n      data = _useState22[0],\n      setData = _useState22[1];\n\n  var _useState23 = useState(new Date().toISOString().slice(0, 10)),\n      _useState24 = _slicedToArray(_useState23, 2),\n      startDate = _useState24[0],\n      setStartDate = _useState24[1];\n\n  var _useState25 = useState(new Date().toISOString().slice(0, 10)),\n      _useState26 = _slicedToArray(_useState25, 2),\n      endDate = _useState26[0],\n      setEndDate = _useState26[1];\n\n  var navigate = useHistory();\n  useEffect(function () {\n    function getBankWithdrawals() {\n      return _getBankWithdrawals.apply(this, arguments);\n    }\n\n    function _getBankWithdrawals() {\n      _getBankWithdrawals = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/withdrawals/' + startDate + '/' + endDate);\n\n              case 2:\n                results = _context.sent;\n                setBankWithdrawals(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getBankWithdrawals.apply(this, arguments);\n    }\n\n    getBankWithdrawals();\n  }, [startDate, endDate, render]);\n  useEffect(function () {\n    function getBanks() {\n      return _getBanks.apply(this, arguments);\n    }\n\n    function _getBanks() {\n      _getBanks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var results, vaultResults;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(apiUrl + '/setup/bank');\n\n              case 2:\n                results = _context2.sent;\n                setBanks(results.data);\n                _context2.next = 6;\n                return axios.get(apiUrl + '/vault/balance');\n\n              case 6:\n                vaultResults = _context2.sent;\n                //console.log(vaultResults.data[0].VaultBalance)\n                setVaultBal(vaultResults.data[0].VaultBalance); // setUser(auth.getCurrentUser)\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getBanks.apply(this, arguments);\n    }\n\n    getBanks();\n  }, []);\n\n  var getWithdrawalDetails = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(d) {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(d);\n              setData({\n                tdate: new Date(d.tdate).toISOString().slice(0, 10),\n                dr: d.amount,\n                narration: d.narration,\n                bank: d.bankId,\n                accountNo: d.accountNo,\n                userId: d.userId\n              });\n              setId(d.id);\n              setUpdateMode(!updateMode);\n              _context3.next = 6;\n              return axios.get(apiUrl + '/setup/bankaccount/' + d.bankId);\n\n            case 6:\n              results = _context3.sent;\n              setBankAccounts(results.data);\n              setShow(!show);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getWithdrawalDetails(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleBankChange = function handleBankChange(e) {\n    getBankAccounts(e.currentTarget.value);\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      bank: e.currentTarget.value\n    }));\n  };\n\n  var getBankAccounts = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(bank) {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.get(apiUrl + '/setup/bankaccount/' + bank);\n\n            case 2:\n              results = _context4.sent;\n              setBankAccounts(results.data); //console.log(results.data)\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getBankAccounts(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSearch = function handleSearch(event) {\n    setSearch(event.target.value);\n  };\n  /*let customersList = customers.find(\n      (o) => o.fullName.toLowerCase() === search.toLowerCase()\n    );*/\n  //console.log(customersList);\n  // const allCustomers = paginate(customers, currentPage, pageSize)\n\n\n  var schemaMap = {\n    tdate: Joi.date().required().label('Date Expected'),\n    dr: Joi.number().required().label('Amount Required'),\n    narration: Joi.string().required().label('Narration'),\n    bank: Joi.number().required().label('Bank'),\n    accountNo: Joi.number().required().label('Account Number'),\n    userId: Joi.number()\n  };\n  var schema = Joi.object(schemaMap);\n\n  var validateForm = function validateForm() {\n    var result = Joi.validate(data, schema);\n\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var validate, results;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              validate = validateForm();\n\n              if (!(validate !== null)) {\n                _context5.next = 3;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", Swal.fire('OOPS', validate, 'error'));\n\n            case 3:\n              _context5.next = 5;\n              return axios.post(apiUrl + '/withdrawals', data);\n\n            case 5:\n              results = _context5.sent;\n\n              if (results.status === 200) {\n                Swal.fire('Success', 'Bank Withdrawal made Successfully', 'success');\n                setData({\n                  tdate: new Date().toISOString().slice(0, 10),\n                  dr: '',\n                  narration: '',\n                  bank: '',\n                  accountNo: '',\n                  userId: user.staff\n                });\n                setRender(!render);\n                setUpdateMode(false);\n              } else {\n                Swal.fire('OOPS', 'Withdrawal Failed', 'error');\n              }\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdateWithdrawal = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              console.log(data);\n              _context6.next = 3;\n              return axios.put(apiUrl + '/withdrawals/' + id, data);\n\n            case 3:\n              results = _context6.sent;\n\n              if (results.status === 200) {\n                Swal.fire('Success', 'Bank Withdrawal Updated Successfully', 'success');\n                setData({\n                  tdate: new Date().toISOString().slice(0, 10),\n                  dr: '',\n                  narration: '',\n                  bank: '',\n                  accountNo: '',\n                  userId: user.staff\n                });\n                setRender(!render);\n                setId(0);\n                setUpdateMode(false);\n              } else {\n                Swal.fire('OOPS', 'Withdrawal Update Failed', 'error');\n              }\n\n              setShow(!show);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleUpdateWithdrawal() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n\n  var handleAmountChanged = function handleAmountChanged(e) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      amount: e.currentTarget.value\n    }));\n  };\n\n  var handleClose = function handleClose() {\n    setData({\n      tdate: new Date().toISOString().slice(0, 10),\n      dr: '',\n      narration: '',\n      bank: '',\n      accountNo: '',\n      userId: user.staff\n    });\n    setUpdateMode(false);\n    setShow(false);\n  };\n\n  var handleStartDateChange = function handleStartDateChange(e) {\n    setStartDate(e.currentTarget.value);\n  };\n\n  var handleEndDateChange = function handleEndDateChange(e) {\n    setEndDate(e.currentTarget.value);\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(c) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              Swal.fire({\n                title: 'Do you want to Delete this Withdrawal?',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: 'Delete',\n                denyButtonText: \"Don't\"\n              }).then( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(result) {\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if (!result.isConfirmed) {\n                            _context7.next = 7;\n                            break;\n                          }\n\n                          _context7.next = 3;\n                          return axios.delete(apiUrl + '/banktrans/' + c.id);\n\n                        case 3:\n                          Swal.fire('Deleted!', '', 'success');\n                          setRender(!render);\n                          _context7.next = 8;\n                          break;\n\n                        case 7:\n                          if (result.isDenied) {\n                            Swal.fire('Cancelled', '', 'info');\n                          }\n\n                        case 8:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x4) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleDelete(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var totalAmt = bankWithdrawals.reduce(function (a, i) {\n    return a + i.amount;\n  }, 0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"centertext mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, \"Withdrawal From Bank\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, \"NB: Withdraw cash from various bank accounts\\u201D\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    onClick: function onClick() {\n      return setShow(!show);\n    },\n    className: \"btn-sm float-right m-3 \",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, \"+ Make New Withdrawal\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mb-3 row mt-5 col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: startDate,\n    onChange: handleStartDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, \"End Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: endDate,\n    onChange: handleEndDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3 text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, \"Total Withdrawal: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }, formatter.format(totalAmt)))), /*#__PURE__*/React.createElement(Table, {\n    className: \"table-sm col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }, \"Bank\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, \"Account\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, \"Reason\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, \"Drawer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, bankWithdrawals.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, c.tdate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    }, c.bank), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, c.accountNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }, c.narration), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 19\n      }\n    }, formatter.format(c.amount)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 19\n      }\n    }, c.nameOfStaff), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CButton, {\n      onClick: function onClick() {\n        return getWithdrawalDetails(c);\n      },\n      className: \"btn-sm float-right\",\n      color: \"warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, \"View\")));\n  }))))), /*#__PURE__*/React.createElement(CModal, {\n    className: \"fade col-sm-10\",\n    size: \"md\",\n    show: show,\n    \"data-backdrop\": \"static\",\n    \"data-keyboard\": \"false\",\n    color: \"danger\",\n    onClose: function onClose() {\n      setShow(!show);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    className: \"modal-header\",\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }, \"Bank Withdrawals\"))), /*#__PURE__*/React.createElement(CModalBody, {\n    className: \"modal-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tdate\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, \"Transaction Date\", ' '), /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    name: \"tdate\",\n    className: \"form-control text-center col-sm-12 mb-3\",\n    id: \"tdate\",\n    value: data.tdate,\n    onChange: function onChange(e) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        tdate: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: data.bank,\n    onChange: handleBankChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 15\n    }\n  }, \"--Select Bank *--\"), banks.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }, b.bank);\n  })), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: data.accountNo,\n    onChange: function onChange(e) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        accountNo: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  }, \"--Select Account *--\"), bankAccounts.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, b.accountNumber);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"balance\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, \"Amount (GHC)\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"balance\",\n    className: \"form-control text-right col-sm-12 mb-3\",\n    id: \"balance\",\n    value: data.dr,\n    onChange: function onChange(e) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        dr: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"withdrawalAmount\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }, \"Reason *\"), /*#__PURE__*/React.createElement(CInput, {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"withdrawalAmount\",\n    className: \"form-control col-sm-12 mb-3\",\n    id: \"withdrawalAmount\",\n    value: data.narration,\n    onChange: function onChange(e) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        narration: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }\n  }, !updateMode && /*#__PURE__*/React.createElement(CButton, {\n    onClick: handleSubmit,\n    className: \"btn-sm\",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }, \"Submit\"), updateMode && /*#__PURE__*/React.createElement(CButton, {\n    onClick: handleUpdateWithdrawal,\n    className: \"btn-sm\",\n    color: \"warning\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    className: \"btn-sm\",\n    color: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default WithdrawFromBank;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/otherBankWithdrawals.jsx"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","useParams","useHistory","axios","moment","Modal","auth","Joi","Swal","apiUrl","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","LineChart","BarChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Label","Legend","ResponsiveContainer","GiSatelliteCommunication","WithdrawFromBank","getCurrentUser","user","setUser","show","setShow","updateMode","setUpdateMode","id","setId","render","setRender","search","setSearch","bankAccounts","setBankAccounts","banks","setBanks","bankWithdrawals","setBankWithdrawals","vaultBal","setVaultBal","tdate","Date","toISOString","slice","dr","narration","bank","accountNo","userId","staff","data","setData","startDate","setStartDate","endDate","setEndDate","navigate","getBankWithdrawals","get","results","getBanks","vaultResults","VaultBalance","getWithdrawalDetails","d","console","log","amount","bankId","handleBankChange","e","getBankAccounts","currentTarget","value","handleSearch","event","target","schemaMap","date","required","label","number","string","schema","object","validateForm","result","validate","error","details","message","handleSubmit","fire","post","status","handleUpdateWithdrawal","put","formatter","Intl","NumberFormat","style","currency","handleAmountChanged","handleClose","handleStartDateChange","handleEndDateChange","handleDelete","c","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","isConfirmed","delete","isDenied","totalAmt","reduce","a","i","format","map","index","accountNumber","nameOfStaff","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Link,\n  useNavigate,\n  Navigate,\n  useParams,\n  useHistory,\n} from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { Modal } from 'react-bootstrap'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport { apiUrl } from '../../config.json'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Badge,\n  //Modal,\n} from 'reactstrap'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nimport {\n  LineChart,\n  BarChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  Cell,\n  Label,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts'\nimport { GiSatelliteCommunication } from 'react-icons/gi'\n\nconst WithdrawFromBank = () => {\n  const [user, setUser] = useState(auth.getCurrentUser)\n\n  const [show, setShow] = useState(false)\n  const [updateMode, setUpdateMode] = useState(false)\n\n  const [id, setId] = useState(0)\n\n  const [render, setRender] = useState(false)\n  const [search, setSearch] = useState('')\n  const [bankAccounts, setBankAccounts] = useState([])\n  const [banks, setBanks] = useState([])\n  const [bankWithdrawals, setBankWithdrawals] = useState([])\n  const [vaultBal, setVaultBal] = useState(0)\n  const [data, setData] = useState({\n    tdate: new Date().toISOString().slice(0, 10),\n    dr: '',\n    narration: '',\n    bank: 0,\n    accountNo: 0,\n    userId: user.staff,\n  })\n\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10))\n  let navigate = useHistory()\n\n  useEffect(() => {\n    async function getBankWithdrawals() {\n      const results = await axios.get(\n        apiUrl + '/withdrawals/' + startDate + '/' + endDate,\n      )\n      setBankWithdrawals(results.data)\n    }\n    getBankWithdrawals()\n  }, [startDate, endDate, render])\n\n  useEffect(() => {\n    async function getBanks() {\n      const results = await axios.get(apiUrl + '/setup/bank')\n      setBanks(results.data)\n\n      const vaultResults = await axios.get(apiUrl + '/vault/balance')\n      //console.log(vaultResults.data[0].VaultBalance)\n      setVaultBal(vaultResults.data[0].VaultBalance)\n      // setUser(auth.getCurrentUser)\n    }\n    getBanks()\n  }, [])\n\n  const getWithdrawalDetails = async (d) => {\n    console.log(d)\n    setData({\n      tdate: new Date(d.tdate).toISOString().slice(0, 10),\n      dr: d.amount,\n      narration: d.narration,\n      bank: d.bankId,\n      accountNo: d.accountNo,\n      userId: d.userId,\n    })\n    setId(d.id)\n    setUpdateMode(!updateMode)\n    const results = await axios.get(apiUrl + '/setup/bankaccount/' + d.bankId)\n    setBankAccounts(results.data)\n    setShow(!show)\n  }\n\n  const handleBankChange = (e) => {\n    getBankAccounts(e.currentTarget.value)\n    setData({\n      ...data,\n      bank: e.currentTarget.value,\n    })\n  }\n\n  const getBankAccounts = async (bank) => {\n    const results = await axios.get(apiUrl + '/setup/bankaccount/' + bank)\n    setBankAccounts(results.data)\n    //console.log(results.data)\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  /*let customersList = customers.find(\n      (o) => o.fullName.toLowerCase() === search.toLowerCase()\n    );*/\n\n  //console.log(customersList);\n  // const allCustomers = paginate(customers, currentPage, pageSize)\n\n  const schemaMap = {\n    tdate: Joi.date().required().label('Date Expected'),\n    dr: Joi.number().required().label('Amount Required'),\n    narration: Joi.string().required().label('Narration'),\n    bank: Joi.number().required().label('Bank'),\n    accountNo: Joi.number().required().label('Account Number'),\n    userId: Joi.number(),\n  }\n\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(data, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const handleSubmit = async () => {\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error')\n    }\n\n    const results = await axios.post(apiUrl + '/withdrawals', data)\n    if (results.status === 200) {\n      Swal.fire('Success', 'Bank Withdrawal made Successfully', 'success')\n      setData({\n        tdate: new Date().toISOString().slice(0, 10),\n        dr: '',\n        narration: '',\n        bank: '',\n        accountNo: '',\n        userId: user.staff,\n      })\n      setRender(!render)\n      setUpdateMode(false)\n    } else {\n      Swal.fire('OOPS', 'Withdrawal Failed', 'error')\n    }\n  }\n\n  const handleUpdateWithdrawal = async () => {\n    console.log(data)\n\n    const results = await axios.put(apiUrl + '/withdrawals/' + id, data)\n    if (results.status === 200) {\n      Swal.fire('Success', 'Bank Withdrawal Updated Successfully', 'success')\n      setData({\n        tdate: new Date().toISOString().slice(0, 10),\n        dr: '',\n        narration: '',\n        bank: '',\n        accountNo: '',\n        userId: user.staff,\n      })\n      setRender(!render)\n      setId(0)\n      setUpdateMode(false)\n    } else {\n      Swal.fire('OOPS', 'Withdrawal Update Failed', 'error')\n    }\n    setShow(!show)\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleAmountChanged = (e) => {\n    setData({\n      ...data,\n      amount: e.currentTarget.value,\n    })\n  }\n\n  const handleClose = () => {\n    setData({\n      tdate: new Date().toISOString().slice(0, 10),\n      dr: '',\n      narration: '',\n      bank: '',\n      accountNo: '',\n\n      userId: user.staff,\n    })\n    setUpdateMode(false)\n    setShow(false)\n  }\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e.currentTarget.value)\n  }\n  const handleEndDateChange = (e) => {\n    setEndDate(e.currentTarget.value)\n  }\n\n  const handleDelete = async (c) => {\n    Swal.fire({\n      title: 'Do you want to Delete this Withdrawal?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      denyButtonText: `Don't`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        await axios.delete(apiUrl + '/banktrans/' + c.id)\n        Swal.fire('Deleted!', '', 'success')\n        setRender(!render)\n      } else if (result.isDenied) {\n        Swal.fire('Cancelled', '', 'info')\n      }\n    })\n  }\n\n  const totalAmt = bankWithdrawals.reduce((a, i) => {\n    return a + i.amount\n  }, 0)\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 mt-2\">\n          <div className=\"row justify-content-center\">\n            <h4 className=\"centertext mb-3\">Withdrawal From Bank</h4>\n          </div>\n\n          <p className=\"text-center\">\n            NB: Withdraw cash from various bank accounts”\n          </p>\n        </div>\n\n        <div className=\"col-sm-12\">\n          <CButton\n            onClick={() => setShow(!show)}\n            className=\"btn-sm float-right m-3 \"\n            color=\"success\"\n          >\n            + Make New Withdrawal\n          </CButton>\n          {/*<CInput\n            type=\"text\"\n            name=\"searchCustomer\"\n            className=\"float-center col-sm-3 mb-3 mt-3\"\n            id=\"searchCustomer\"\n            value={null}\n            onChange={handleSearch}\n            placeholder=\"Search Customer\"\n          />*/}\n          <div class=\"mb-3 row mt-5 col-sm-12\">\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              Start Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={startDate}\n                onChange={handleStartDateChange}\n              />\n            </div>\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              End Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={endDate}\n                onChange={handleEndDateChange}\n              />\n            </div>\n            <div className=\"col-sm-3 text-right\">\n              Total Withdrawal: <strong>{formatter.format(totalAmt)}</strong>\n            </div>\n          </div>\n\n          <Table className=\"table-sm col-sm-12\">\n            <thead className=\"\">\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Date</th>\n                <th>Bank</th>\n                <th>Account</th>\n                <th>Reason</th>\n                <th>Amount</th>\n                <th>Drawer</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {bankWithdrawals.map((c, index) => (\n                <tr key={c.id}>\n                  <td>{index + 1}</td>\n                  <td>{c.tdate}</td>\n                  <td>{c.bank}</td>\n                  <td>{c.accountNumber}</td>\n                  <td>{c.narration}</td>\n                  <td>{formatter.format(c.amount)}</td>\n                  <td>{c.nameOfStaff}</td>\n                  <td>\n                    <CButton\n                      onClick={() => getWithdrawalDetails(c)}\n                      className=\"btn-sm float-right\"\n                      color=\"warning\"\n                    >\n                      View\n                    </CButton>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n      <CModal\n        className=\"fade col-sm-10\"\n        size=\"md\"\n        show={show}\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        color=\"danger\"\n        onClose={() => {\n          setShow(!show)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <p>\n            <h3>Bank Withdrawals</h3>\n          </p>\n        </CModalHeader>\n\n        <CModalBody className=\"modal-body\">\n          <form>\n            <label htmlFor=\"tdate\" className=\"form-label\">\n              Transaction Date{' '}\n            </label>\n            <CInput\n              type=\"date\"\n              name=\"tdate\"\n              className=\"form-control text-center col-sm-12 mb-3\"\n              id=\"tdate\"\n              value={data.tdate}\n              onChange={(e) =>\n                setData({\n                  ...data,\n                  tdate: e.currentTarget.value,\n                })\n              }\n            />\n\n            <CSelect\n              className=\"form-select col-sm-12 mb-3\"\n              aria-label=\"Default\"\n              value={data.bank}\n              onChange={handleBankChange}\n            >\n              <option defaultValue=\"\">--Select Bank *--</option>\n              {banks.map((b) => (\n                <option key={b.id} value={b.id} id={b.id}>\n                  {b.bank}\n                </option>\n              ))}\n            </CSelect>\n\n            <CSelect\n              className=\"form-select col-sm-12 mb-3\"\n              aria-label=\"Default\"\n              value={data.accountNo}\n              onChange={(e) =>\n                setData({ ...data, accountNo: e.currentTarget.value })\n              }\n            >\n              <option defaultValue=\"\">--Select Account *--</option>\n              {bankAccounts.map((b) => (\n                <option key={b.id} value={b.id} id={b.id}>\n                  {b.accountNumber}\n                </option>\n              ))}\n            </CSelect>\n\n            <label htmlFor=\"balance\" className=\"form-label\">\n              Amount (GHC)\n            </label>\n            <CInput\n              type=\"text\"\n              name=\"balance\"\n              className=\"form-control text-right col-sm-12 mb-3\"\n              id=\"balance\"\n              value={data.dr}\n              onChange={(e) =>\n                setData({\n                  ...data,\n                  dr: e.currentTarget.value,\n                })\n              }\n            />\n\n            <label htmlFor=\"withdrawalAmount\" className=\"form-label\">\n              Reason *\n            </label>\n            <CInput\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"withdrawalAmount\"\n              className=\"form-control col-sm-12 mb-3\"\n              id=\"withdrawalAmount\"\n              value={data.narration}\n              onChange={(e) =>\n                setData({\n                  ...data,\n                  narration: e.currentTarget.value,\n                })\n              }\n            />\n          </form>\n        </CModalBody>\n        <CModalFooter>\n          {!updateMode && (\n            <CButton onClick={handleSubmit} className=\"btn-sm\" color=\"success\">\n              Submit\n            </CButton>\n          )}\n          {updateMode && (\n            <CButton\n              onClick={handleUpdateWithdrawal}\n              className=\"btn-sm\"\n              color=\"warning\"\n            >\n              Update\n            </CButton>\n          )}\n\n          <Button onClick={handleClose} className=\"btn-sm\" color=\"danger\">\n            Close\n          </Button>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default WithdrawFromBank\n"]},"metadata":{},"sourceType":"module"}