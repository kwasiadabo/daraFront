{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/viewLoanAndPaymentHistory.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { Link, useNavigate, Navigate, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Joi from 'joi-browser';\nimport CurrencyFormat from 'react-currency-format';\nimport Swal from 'sweetalert2';\nimport auth from '../../components/services/authService';\nimport { apiUrl } from '../../config.json';\nimport { reportUrl } from '../../config.json';\nimport BookProduct from './bookProduct';\nimport LoanPrincipal from './loanPrincipalEntry';\nimport Guarantors from './guarantors';\nimport GuarantorTwo from './guarantorTwo';\nimport BusinessDetails from './businessDetails';\nimport Directions from './directions';\nimport AdaboSelect from 'react-select';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Label, Badge } from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\nimport { now } from 'moment';\n\nvar LoanAndPaymentHistory = function LoanAndPaymentHistory() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      loanBookings = _useState2[0],\n      setLoanBookings = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      render = _useState4[0],\n      setRender = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customerLoans = _useState6[0],\n      setCustomerLoans = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      customer = _useState8[0],\n      setCustomer = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      customers = _useState10[0],\n      setCustomers = _useState10[1];\n  /*useEffect(() => {\n    async function getCustomerLoans() {\n      const results = await axios.get(\n        apiUrl + '/loanreports/customer/' + customer,\n      )\n      setCustomerLoans(results.data)\n    }\n    getCustomerLoans()\n  }, [])\n  */\n\n\n  useEffect(function () {\n    function getCustomers() {\n      return _getCustomers.apply(this, arguments);\n    }\n\n    function _getCustomers() {\n      _getCustomers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/customer');\n\n              case 2:\n                results = _context.sent;\n                setCustomers(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getCustomers.apply(this, arguments);\n    }\n\n    getCustomers();\n  }, [customers]);\n\n  var openCustomerListAsReport = function openCustomerListAsReport(url) {\n    var windowFeatures = 'left=100,top=100,width=320,height=320';\n    window.open(url, 'customerlist', 'popup', windowFeatures);\n  };\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS'\n  });\n  /*const totalAmt = loanBalances.reduce((a, i) => {\n    return a + i.Balance\n  }, 0)\n  */\n\n  var customerName = customers.map(function (opt) {\n    return {\n      label: opt.fullName + ' - ' + opt.accountNumber,\n      value: opt.id\n    };\n  });\n\n  var handleCustomerSelected = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(opt) {\n      var optValue;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              optValue = opt.value;\n              setCustomer(optValue); // const results = await axios.get(\n              //   apiUrl + '/loanreports/customer/' + optValue,\n              // )\n              // console.log(results.data)\n              //setCustomerLoans(results.data)\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleCustomerSelected(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mb-3 row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"nameOfCustomer\",\n    className: \"col-sm-3 col-form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Select of Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdaboSelect, {\n    className: \"form-control-xl mb-2 mt-2\",\n    options: customerName,\n    onChange: handleCustomerSelected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    className: \"btn-sm\",\n    color: \"success\",\n    onClick: function onClick() {\n      return openCustomerListAsReport(reportUrl + '/rayPaymentHistory.aspx?' + customer);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"View History\")))));\n};\n\nexport default LoanAndPaymentHistory;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/viewLoanAndPaymentHistory.jsx"],"names":["React","useState","useEffect","Modal","Link","useNavigate","Navigate","useHistory","axios","moment","Joi","CurrencyFormat","Swal","auth","apiUrl","reportUrl","BookProduct","LoanPrincipal","Guarantors","GuarantorTwo","BusinessDetails","Directions","AdaboSelect","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","now","LoanAndPaymentHistory","loanBookings","setLoanBookings","render","setRender","customerLoans","setCustomerLoans","customer","setCustomer","customers","setCustomers","getCustomers","get","results","data","openCustomerListAsReport","url","windowFeatures","window","open","formatter","Intl","NumberFormat","style","currency","customerName","map","opt","label","fullName","accountNumber","value","id","handleCustomerSelected","optValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Link, useNavigate, Navigate, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport { reportUrl } from '../../config.json'\nimport BookProduct from './bookProduct'\nimport LoanPrincipal from './loanPrincipalEntry'\nimport Guarantors from './guarantors'\nimport GuarantorTwo from './guarantorTwo'\nimport BusinessDetails from './businessDetails'\nimport Directions from './directions'\nimport AdaboSelect from 'react-select'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\nimport { now } from 'moment'\n\nconst LoanAndPaymentHistory = () => {\n  const [loanBookings, setLoanBookings] = useState([])\n  const [render, setRender] = useState(false)\n  const [customerLoans, setCustomerLoans] = useState([])\n  const [customer, setCustomer] = useState(0)\n  const [customers, setCustomers] = useState([])\n\n  /*useEffect(() => {\n    async function getCustomerLoans() {\n      const results = await axios.get(\n        apiUrl + '/loanreports/customer/' + customer,\n      )\n      setCustomerLoans(results.data)\n    }\n    getCustomerLoans()\n  }, [])\n  */\n\n  useEffect(() => {\n    async function getCustomers() {\n      const results = await axios.get(apiUrl + '/customer')\n      setCustomers(results.data)\n    }\n    getCustomers()\n  }, [customers])\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n  })\n\n  /*const totalAmt = loanBalances.reduce((a, i) => {\n    return a + i.Balance\n  }, 0)\n  */\n\n  const customerName = customers.map((opt) => ({\n    label: opt.fullName + ' - ' + opt.accountNumber,\n    value: opt.id,\n  }))\n\n  const handleCustomerSelected = async (opt) => {\n    const optValue = opt.value\n    setCustomer(optValue)\n    // const results = await axios.get(\n    //   apiUrl + '/loanreports/customer/' + optValue,\n    // )\n    // console.log(results.data)\n    //setCustomerLoans(results.data)\n  }\n  return (\n    <div>\n      <div class=\"mb-3 row\">\n        <CLabel htmlFor=\"nameOfCustomer\" className=\"col-sm-3 col-form-label\">\n          Select of Customer\n        </CLabel>\n        <div class=\"col-sm-12\">\n          <AdaboSelect\n            className=\"form-control-xl mb-2 mt-2\"\n            options={customerName}\n            onChange={handleCustomerSelected}\n          />\n        </div>\n      </div>\n      <CRow>\n        <CCol lg={12}>\n          <CCard>\n            <CButton\n              className=\"btn-sm\"\n              color=\"success\"\n              onClick={() =>\n                openCustomerListAsReport(\n                  reportUrl + '/rayPaymentHistory.aspx?' + customer,\n                )\n              }\n            >\n              View History\n            </CButton>\n\n            {/* <Table className=\"table-sm\">\n                <caption>Customer Loans</caption>\n                <thead>\n                  <tr className=\"fs-sm\">\n                    <th></th>\n                    <th>Account Number</th>\n                    <th>Customer</th>\n                    <th>Loan ID</th>\n                    <th>Product</th>\n                    <th>Principal</th>\n                    <th>Interest</th>\n                    <th>Date Booked</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {customerLoans.map((c, index) => (\n                    <tr key={c.id}>\n                      <td>{index + 1}</td>\n                      <td>{c.accountNumber}</td>\n                      <td>{c.customer}</td>\n                      <td>{c.loanId}</td>\n                      <td>{c.product}</td>\n                      <td>{formatter.format(c.principal)}</td>\n                      <td>{formatter.format(c.interest)}</td>\n                      <td>{c.dateBooked}</td>\n                      <td>\n                        <CButton\n                          className=\"btn-sm float-right\"\n                          onClick={() =>\n                            openCustomerListAsReport(\n                              reportUrl +\n                                '/paymentHistory.aspx?' +\n                                customer +\n                                '?' +\n                                c.id,\n                            )\n                          }\n                        >\n                          View History\n                        </CButton>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table> */}\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default LoanAndPaymentHistory\n"]},"metadata":{},"sourceType":"module"}