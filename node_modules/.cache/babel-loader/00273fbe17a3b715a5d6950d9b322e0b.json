{"ast":null,"code":"import React,{Suspense}from'react';import{Redirect,Route,Switch}from'react-router-dom';import{CContainer,CFade}from'@coreui/react';import auth from'../components/services/authService';import{useHistory}from'react-router-dom';import{useIdleTimer}from'react-idle-timer';// routes config\nimport routes from'../routes';var loading=/*#__PURE__*/React.createElement(\"div\",{className:\"pt-3 text-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sk-spinner sk-spinner-pulse\"}));var TheContent=function TheContent(){var history=useHistory();var onIdle=function onIdle(){auth.logout();history.push('/login');};var _useIdleTimer=useIdleTimer({onIdle:onIdle,timeout:2000*60*1}),isIdle=_useIdleTimer.isIdle;return/*#__PURE__*/React.createElement(\"main\",{className:\"c-main\"},/*#__PURE__*/React.createElement(CContainer,{fluid:true},/*#__PURE__*/React.createElement(Suspense,{fallback:loading},/*#__PURE__*/React.createElement(Switch,null,routes.map(function(route,idx){return route.component&&/*#__PURE__*/React.createElement(Route,{key:idx,path:route.path,exact:route.exact,name:route.name,render:function render(props){return/*#__PURE__*/React.createElement(CFade,null,localStorage.getItem('token')?/*#__PURE__*/React.createElement(route.component,props):Redirect('/login'));}});}),/*#__PURE__*/React.createElement(Redirect,{from:\"/\",to:\"/dashboard\"})))));};export default React.memo(TheContent);","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/containers/TheContent.js"],"names":["React","Suspense","Redirect","Route","Switch","CContainer","CFade","auth","useHistory","useIdleTimer","routes","loading","TheContent","history","onIdle","logout","push","timeout","isIdle","map","route","idx","component","path","exact","name","props","localStorage","getItem","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,CAAmBC,KAAnB,CAA0BC,MAA1B,KAAwC,kBAAxC,CACA,OAASC,UAAT,CAAqBC,KAArB,KAAkC,eAAlC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oCAAjB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,OAAO,cACX,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,CAAC,6BAAf,EADF,CADF,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIC,CAAAA,OAAO,CAAGL,UAAU,EAAxB,CAEA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBP,IAAI,CAACQ,MAAL,GACAF,OAAO,CAACG,IAAR,CAAa,QAAb,EACD,CAHD,CAHuB,kBAQJP,YAAY,CAAC,CAAEK,MAAM,CAANA,MAAF,CAAUG,OAAO,CAAE,KAAO,EAAP,CAAY,CAA/B,CAAD,CARR,CAQfC,MARe,eAQfA,MARe,CAUvB,mBACE,4BAAM,SAAS,CAAC,QAAhB,eACE,oBAAC,UAAD,EAAY,KAAK,KAAjB,eACE,oBAAC,QAAD,EAAU,QAAQ,CAAEP,OAApB,eACE,oBAAC,MAAD,MACGD,MAAM,CAACS,GAAP,CAAW,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAC1B,MACED,CAAAA,KAAK,CAACE,SAAN,eACE,oBAAC,KAAD,EACE,GAAG,CAAED,GADP,CAEE,IAAI,CAAED,KAAK,CAACG,IAFd,CAGE,KAAK,CAAEH,KAAK,CAACI,KAHf,CAIE,IAAI,CAAEJ,KAAK,CAACK,IAJd,CAKE,MAAM,CAAE,gBAACC,KAAD,qBACN,oBAAC,KAAD,MACGC,YAAY,CAACC,OAAb,CAAqB,OAArB,eACC,oBAAC,KAAD,CAAO,SAAP,CAAqBF,KAArB,CADD,CAGCxB,QAAQ,CAAC,QAAD,CAJZ,CADM,EALV,EAFJ,CAmBD,CApBA,CADH,cAsBE,oBAAC,QAAD,EAAU,IAAI,CAAC,GAAf,CAAmB,EAAE,CAAC,YAAtB,EAtBF,CADF,CADF,CADF,CADF,CAgCD,CA1CD,CA4CA,cAAeF,CAAAA,KAAK,CAAC6B,IAAN,CAAWjB,UAAX,CAAf","sourcesContent":["import React, { Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\nimport auth from '../components/services/authService'\nimport { useHistory } from 'react-router-dom'\nimport { useIdleTimer } from 'react-idle-timer'\n// routes config\nimport routes from '../routes'\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  let history = useHistory()\n\n  const onIdle = () => {\n    auth.logout()\n    history.push('/login')\n  }\n\n  const { isIdle } = useIdleTimer({ onIdle, timeout: 2000 * 60 * 1 })\n\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return (\n                route.component && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    render={(props) => (\n                      <CFade>\n                        {localStorage.getItem('token') ? (\n                          <route.component {...props} />\n                        ) : (\n                          Redirect('/login')\n                        )}\n                      </CFade>\n                    )}\n                  />\n                )\n              )\n            })}\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n"]},"metadata":{},"sourceType":"module"}