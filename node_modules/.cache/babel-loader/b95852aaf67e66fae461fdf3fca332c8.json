{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link,useHistory,useNavigate}from'react-router-dom';import axios from'axios';import{apiUrl,reportUrl}from'../../config.json';import auth from'../../components/services/authService';import Joi from'joi-browser';import Swal from'sweetalert2';import formData from'form-data';//import '../../table.css'\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport{CBadge,CCard,CCardBody//CCardHeader,\n,CCol,CDataTable,CRow,CButton,CModal,CModalFooter,CModalHeader,CModalBody,CCardHeader,CInputGroupAppend,CInputGroupPrepend,CDropdownItem,CForm//CCardFooter,\n,CDropdownToggle//CInputRadio,\n,CDropdown,CModalTitle//CFormText,\n//CTextarea,\n,CFormGroup,CLabel// CSwitch,\n,CInput//CInputFile,\n,CSelect,CDropdownMenu//CCardFooter,\n,CInputGroup,ButtonDropdowns//CForm,\n,CDropdownDivider,CInputCheckbox,CLink}from'@coreui/react';import{Row,Col,Table,Progress,Button,UncontrolledButtonDropdown,DropdownMenu,DropdownToggle,DropdownItem,Input,Label,Badge}from'reactstrap';import CustomerView from'./customerView';var Defaulters=function Defaulters(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),defaulters=_useState2[0],setDefaulters=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),groups=_useState4[0],setGroups=_useState4[1];var navigate=useHistory();useEffect(function(){function getDefaulters(){return _getDefaulters.apply(this,arguments);}function _getDefaulters(){_getDefaulters=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(apiUrl+'/loanreports/defaulters');case 2:results=_context.sent;//console.log(results.data)\nsetDefaulters(results.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return _getDefaulters.apply(this,arguments);}getDefaulters();},[]);var openCustomerListAsReport=function openCustomerListAsReport(url){var windowFeatures='left=100,top=100,width=320,height=320';window.open(url,'customerlist','popup',windowFeatures);};var fields=['fullName','phone','loanId','ExpectedAmount','Paid','DefaultAmount','lastDateForPayment','officer','daysDefaulted'];var getBadge=function getBadge(status){switch(status){case'Active':return'success';case'Inactive':return'secondary';case'Pending':return'warning';case'Banned':return'danger';default:return'primary';}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,null,/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(CCardHeader,null,\"Defaulters\",/*#__PURE__*/React.createElement(CButton,{onClick:function onClick(){return openCustomerListAsReport(reportUrl+'/defaulters.aspx');},className:\"btn-sm float-right mb-3 col-2\",color:\"success\"},\"Open Report\")),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(CDataTable,{items:defaulters,fields:fields,itemsPerPage:10,pagination:true,hover:true,striped:true,bordered:true,scopedSlots:{status:function status(item){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(CBadge,{color:getBadge('Active')},\"Active\"));}}}))))));};export default Defaulters;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/defaulters.jsx"],"names":["React","useState","useEffect","Link","useHistory","useNavigate","axios","apiUrl","reportUrl","auth","Joi","Swal","formData","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","ButtonDropdowns","CDropdownDivider","CInputCheckbox","CLink","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CustomerView","Defaulters","defaulters","setDefaulters","groups","setGroups","navigate","getDefaulters","get","results","data","openCustomerListAsReport","url","windowFeatures","window","open","fields","getBadge","status","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { apiUrl, reportUrl } from '../../config.json'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport formData from 'form-data'\n\n//import '../../table.css'\n\n//import Pagination from '../pagination'\n//import { paginate } from '../paginate'\n\n//import { ComponentToPrint } from \"./ComponentToPrint\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  ButtonDropdowns,\n  //CForm,\n  CDropdownDivider,\n  CInputCheckbox,\n  CLink,\n} from '@coreui/react'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\n\nimport CustomerView from './customerView'\n\nconst Defaulters = () => {\n  const [defaulters, setDefaulters] = useState([])\n\n  const [groups, setGroups] = useState([])\n\n  let navigate = useHistory()\n  useEffect(() => {\n    async function getDefaulters() {\n      const results = await axios.get(apiUrl + '/loanreports/defaulters')\n      //console.log(results.data)\n      setDefaulters(results.data)\n    }\n    getDefaulters()\n  }, [])\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'customerlist', 'popup', windowFeatures)\n  }\n  const fields = [\n    'fullName',\n    'phone',\n    'loanId',\n    'ExpectedAmount',\n    'Paid',\n    'DefaultAmount',\n    'lastDateForPayment',\n    'officer',\n    'daysDefaulted',\n  ]\n  const getBadge = (status) => {\n    switch (status) {\n      case 'Active':\n        return 'success'\n      case 'Inactive':\n        return 'secondary'\n      case 'Pending':\n        return 'warning'\n      case 'Banned':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  return (\n    <div>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              Defaulters\n              <CButton\n                onClick={() =>\n                  openCustomerListAsReport(reportUrl + '/defaulters.aspx')\n                }\n                className=\"btn-sm float-right mb-3 col-2\"\n                color=\"success\"\n              >\n                Open Report\n              </CButton>\n            </CCardHeader>\n\n            <CCardBody>\n              <CDataTable\n                items={defaulters}\n                fields={fields}\n                itemsPerPage={10}\n                pagination\n                hover\n                striped\n                bordered\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge('Active')}>Active</CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default Defaulters\n"]},"metadata":{},"sourceType":"module"}