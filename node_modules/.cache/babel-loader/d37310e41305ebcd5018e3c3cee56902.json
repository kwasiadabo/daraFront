{"ast":null,"code":"import _objectSpread from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/expenses.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Navigate, useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Modal } from 'react-bootstrap';\nimport auth from '../../components/services/authService';\nimport Joi from 'joi-browser';\nimport Swal from 'sweetalert2';\nimport { apiUrl } from '../../config.json';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Input, Badge //Modal,\n} from 'reactstrap';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CDropdownDivider, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n, CSelect, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\nimport { LineChart, BarChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Label, Legend, ResponsiveContainer } from 'recharts';\nimport { GiSatelliteCommunication } from 'react-icons/gi'; //const user = auth.getCurrentUser()\n\nvar Expenses = function Expenses() {\n  var user = auth.getCurrentUser(); //const [user, setUser] = useState(auth.getCurrentUser)\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      expenses = _useState2[0],\n      setExpenses = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      customerName = _useState4[0],\n      setCustomerName = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showTransfer = _useState8[0],\n      setShowTransfer = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      render = _useState10[0],\n      setRender = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sumPaid = _useState12[0],\n      setSumPaid = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sumWithdrawn = _useState14[0],\n      setSumWithdrawn = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      search = _useState16[0],\n      setSearch = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      bal = _useState18[0],\n      setBal = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      loanBal = _useState20[0],\n      setLoanBal = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      expenseItems = _useState22[0],\n      setExpenseItems = _useState22[1];\n\n  var _useState23 = useState({\n    expenseItem: '',\n    modeOfPayment: '',\n    amount: '',\n    narration: '',\n    madeBy: user.staff,\n    bank: 0,\n    accountNumber: 0,\n    dateOnCheque: '',\n    nameOnCheque: '',\n    chequeNumber: '',\n    tdate: new Date().toISOString().slice(0, 10)\n  }),\n      _useState24 = _slicedToArray(_useState23, 2),\n      expensesData = _useState24[0],\n      setExpensesData = _useState24[1];\n\n  var _useState25 = useState(5),\n      _useState26 = _slicedToArray(_useState25, 2),\n      pageSize = _useState26[0],\n      setPageSize = _useState26[1];\n\n  var _useState27 = useState(1),\n      _useState28 = _slicedToArray(_useState27, 2),\n      currentPage = _useState28[0],\n      setCurrentPage = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      banks = _useState30[0],\n      setBanks = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      bankAccounts = _useState32[0],\n      setBankAccounts = _useState32[1];\n\n  var _useState33 = useState(new Date().toISOString().slice(0, 10)),\n      _useState34 = _slicedToArray(_useState33, 2),\n      startDate = _useState34[0],\n      setStartDate = _useState34[1];\n\n  var _useState35 = useState(new Date().toISOString().slice(0, 10)),\n      _useState36 = _slicedToArray(_useState35, 2),\n      endDate = _useState36[0],\n      setEndDate = _useState36[1];\n\n  var navigate = useHistory();\n  useEffect(function () {\n    function getExpenses() {\n      return _getExpenses.apply(this, arguments);\n    }\n\n    function _getExpenses() {\n      _getExpenses = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/transaction/expenses/' + startDate + '/' + endDate);\n\n              case 2:\n                results = _context.sent;\n                setExpenses(results.data);\n                console.log(user);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getExpenses.apply(this, arguments);\n    }\n\n    getExpenses();\n  }, [startDate, endDate, render]);\n  useEffect(function () {\n    function getExpenseItems() {\n      return _getExpenseItems.apply(this, arguments);\n    }\n\n    function _getExpenseItems() {\n      _getExpenseItems = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(apiUrl + '/setup/expensesitem');\n\n              case 2:\n                results = _context2.sent;\n                setExpenseItems(results.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getExpenseItems.apply(this, arguments);\n    }\n\n    getExpenseItems();\n  }, [render]);\n\n  var handleSearch = function handleSearch(event) {\n    setSearch(event.target.value);\n  };\n\n  useEffect(function () {\n    function getBanks() {\n      return _getBanks.apply(this, arguments);\n    }\n\n    function _getBanks() {\n      _getBanks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(apiUrl + '/setup/bank');\n\n              case 2:\n                results = _context3.sent;\n                setBanks(results.data); // setUser(auth.getCurrentUser)\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _getBanks.apply(this, arguments);\n    }\n\n    getBanks();\n  }, []);\n\n  var handleBankChange = function handleBankChange(e) {\n    getBankAccounts(e.currentTarget.value);\n    setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n      bank: e.currentTarget.value\n    }));\n  };\n\n  var getBankAccounts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(bank) {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.get(apiUrl + '/setup/bankaccount/' + bank);\n\n            case 2:\n              results = _context4.sent;\n              setBankAccounts(results.data); //console.log(results.data)\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getBankAccounts(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /*let customersList = customers.find(\n      (o) => o.fullName.toLowerCase() === search.toLowerCase()\n    );*/\n  //console.log(customersList);\n  // const allCustomers = paginate(customers, currentPage, pageSize)\n\n\n  var data = {\n    allExpenses: expenses.filter(function (item) {\n      return item.item.toLowerCase().includes(search.toLowerCase()) || item.madeBy.toLowerCase().includes(search.toLowerCase());\n    })\n  };\n  var dataTouse = search.length === 0 ? expenses : data.allExpenses;\n  var schemaMap = {\n    expenseItem: Joi.number().required().label('Expense Item'),\n    narration: Joi.string().required().label('Narration'),\n    amount: Joi.number().required().label('Withdrawal Amount'),\n    madeBy: Joi.number().required().label('Made by'),\n    modeOfPayment: Joi.string().required().label('Mode of Payment'),\n    bank: Joi.number(),\n    accountNumber: Joi.number(),\n    sending: Joi.string().allow(''),\n    receiving: Joi.string().allow(''),\n    dateOnCheque: Joi.string().allow(''),\n    nameOnCheque: Joi.string().allow(''),\n    chequeNumber: Joi.string().allow(''),\n    tdate: Joi.date().required().label('Transaction Date')\n  };\n  var schema = Joi.object(schemaMap);\n\n  var validateForm = function validateForm() {\n    var result = Joi.validate(expensesData, schema);\n\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var validate, results;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log(user);\n              validate = validateForm();\n\n              if (!(validate !== null)) {\n                _context5.next = 4;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", Swal.fire('OOPS', validate, 'error'));\n\n            case 4:\n              _context5.next = 6;\n              return axios.post(apiUrl + '/transaction/expenses', expensesData);\n\n            case 6:\n              results = _context5.sent;\n\n              if (results.status === 200) {\n                Swal.fire('Success', 'Expense made Successfully', 'success');\n                setExpensesData({\n                  expenseItem: '',\n                  modeOfPayment: '',\n                  narration: '',\n                  amount: '',\n                  madeBy: user.staff,\n                  bank: 0,\n                  accountNumber: 0,\n                  sending: '',\n                  receiving: '',\n                  dateOnCheque: '',\n                  nameOnCheque: '',\n                  chequeNumber: '',\n                  tdate: new Date().toISOString().slice(0, 10)\n                });\n                setRender(!render);\n              }\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n\n  var handleAmountChanged = function handleAmountChanged(e) {\n    setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n      amount: e.currentTarget.value\n    }));\n  };\n\n  var handleClose = function handleClose() {\n    setExpensesData({\n      expenseItem: '',\n      modeOfPayment: '',\n      narration: '',\n      amount: '',\n      madeBy: user.staff,\n      bank: 0,\n      accountNumber: 0,\n      sending: '',\n      receiving: '',\n      dateOnCheque: '',\n      nameOnCheque: '',\n      chequeNumber: '',\n      tdate: new Date().toISOString().slice(0, 10)\n    });\n    setShow(false);\n    setShowTransfer(false);\n  };\n\n  var handleStartDateChange = function handleStartDateChange(e) {\n    setStartDate(e.currentTarget.value);\n  };\n\n  var handleEndDateChange = function handleEndDateChange(e) {\n    setEndDate(e.currentTarget.value);\n  };\n\n  var handleExpenseItemSelect = function handleExpenseItemSelect(c) {\n    setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n      expenseItem: c.currentTarget.value\n    })); //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  };\n\n  var handleExpenseModeSelect = function handleExpenseModeSelect(c) {\n    setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n      modeOfPayment: c.currentTarget.value\n    })); //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  };\n\n  var handleExpenseAccountSelect = function handleExpenseAccountSelect(c) {\n    setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n      accountNumber: c.currentTarget.value\n    })); //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(c) {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              Swal.fire({\n                title: 'Do you want to Delete this Expense?',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: 'Delete',\n                denyButtonText: \"Don't\"\n              }).then( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(result) {\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if (!result.isConfirmed) {\n                            _context6.next = 7;\n                            break;\n                          }\n\n                          _context6.next = 3;\n                          return axios.delete(apiUrl + '/transaction/expenses/' + c.id);\n\n                        case 3:\n                          Swal.fire('Deleted!', '', 'success');\n                          setRender(!render);\n                          _context6.next = 8;\n                          break;\n\n                        case 7:\n                          if (result.isDenied) {\n                            Swal.fire('Cancelled', '', 'info');\n                          }\n\n                        case 8:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function (_x3) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleDelete(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var totalAmt = expenses.reduce(function (a, i) {\n    return a + i.amount;\n  }, 0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"centertext mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  }, \"Offices Expenses Entry\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, \"NB: An expense is the cost of operations that a company incurs to generate revenue. As the popular saying goes, \\u201Cit costs money to make money.\\u201D\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    onClick: function onClick() {\n      return setShow(!show);\n    },\n    className: \"btn-sm float-right m-3 \",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, \"+ Enter New Expense\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mb-3 row mt-5 col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: startDate,\n    onChange: handleStartDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }, \"End Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control\",\n    id: \"dateOnCheque\",\n    value: endDate,\n    onChange: handleEndDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3 text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, \"Total Expenses: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 31\n    }\n  }, formatter.format(totalAmt)))), /*#__PURE__*/React.createElement(Table, {\n    className: \"table-sm col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }\n  }, \"Mode Of Payment\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, \"Made By.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, dataTouse.map(function (c, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 19\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 19\n      }\n    }, c.tdate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, c.item), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }, c.modeOfPayment), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 19\n      }\n    }, c.narration), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 19\n      }\n    }, formatter.format(c.amount)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 19\n      }\n    }, c.madeBy), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 19\n      }\n    }, !c.approved && /*#__PURE__*/React.createElement(CButton, {\n      onClick: function onClick() {\n        return handleDelete(c);\n      },\n      className: \"btn-sm float-right\",\n      color: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 23\n      }\n    }, \"Remove\")));\n  }))))), /*#__PURE__*/React.createElement(CModal, {\n    className: \"fade col-sm-8\",\n    size: \"md\",\n    show: show,\n    color: \"success\",\n    \"data-backdrop\": \"static\",\n    \"data-keyboard\": \"false\",\n    onClose: function onClose() {\n      setShow(!show);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    className: \"modal-header\",\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"centertext\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }\n  }, \"EXPENDITURE\"))), /*#__PURE__*/React.createElement(CModalBody, {\n    className: \"modal-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"col-sm-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, \"Trans. Date\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control  bold mb-3\",\n    id: \"dateOnCheque\",\n    value: expensesData.tdate,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        tdate: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: expensesData.expenseItem,\n    onChange: handleExpenseItemSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, \"--Select Expense Item*--\"), expenseItems.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }, b.item);\n  })), /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: expensesData.modeOfPayment,\n    onChange: handleExpenseModeSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 15\n    }\n  }, \"Mode Of Payment\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Cash\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 15\n    }\n  }, \"Cash\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Momo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 15\n    }\n  }, \"MoMo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Cheque\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 15\n    }\n  }, \"Cheque\")), expensesData.modeOfPayment === 'Cheque' && /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: expensesData.bank,\n    onChange: handleBankChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }\n  }, \"Select Bank\"), banks.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 19\n      }\n    }, b.bank);\n  })), expensesData.modeOfPayment === 'Cheque' && /*#__PURE__*/React.createElement(CSelect, {\n    className: \"form-select col-sm-12 mb-3\",\n    \"aria-label\": \"Default\",\n    value: expensesData.accountNumber,\n    onChange: handleExpenseAccountSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 17\n    }\n  }, \"Select Account\"), bankAccounts.map(function (b) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: b.id,\n      value: b.id,\n      id: b.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 19\n      }\n    }, b.accountNumber);\n  })), expensesData.modeOfPayment === 'Cheque' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"nameOnCheque\",\n    className: \"col-sm-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 17\n    }\n  }, \"Name on Cheque\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    class: \"form-control  bold mb-3\",\n    id: \"nameOnCheque\",\n    value: expensesData.nameOnCheque,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        nameOnCheque: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 17\n    }\n  })), expensesData.modeOfPayment === 'Cheque' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"dateOnCheque\",\n    className: \"col-sm-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 17\n    }\n  }, \"Date on Cheque\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"date\",\n    class: \"form-control  bold mb-3\",\n    id: \"dateOnCheque\",\n    value: expensesData.dateOnCheque,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        dateOnCheque: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 17\n    }\n  })), expensesData.modeOfPayment === 'Cheque' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"chequeNumber\",\n    className: \"col-sm-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 17\n    }\n  }, \"Cheque No.\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    className: \"form-control  bold mb-3\",\n    id: \"chequeNumber\",\n    value: expensesData.chequeNumber,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        chequeNumber: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 17\n    }\n  })), expensesData.modeOfPayment === 'Momo' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"sending\",\n    className: \"col-sm-5 \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 17\n    }\n  }, \"Sending (MoMo Number)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    id: \"sending\",\n    className: \"form-control text-center bold mb-3\",\n    type: \"text\",\n    value: expensesData.sending,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        sending: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"receivinb\",\n    className: \"col-sm-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 17\n    }\n  }, \"Receiving (MoMo Number)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    id: \"receiving\",\n    className: \"form-control text-center bold\",\n    type: \"text\",\n    value: expensesData.receiving,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        receiving: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"balance\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 13\n    }\n  }, \"Amount (GHC)\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"balance\",\n    className: \"form-control text-right col-sm-12 mb-3\",\n    id: \"balance\",\n    value: expensesData.amount,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        amount: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"depositAmount\",\n    className: \"form-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 13\n    }\n  }, \"Description *\"), /*#__PURE__*/React.createElement(CInput, {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"depositAmount\",\n    className: \"form-control col-sm-12 mb-3\",\n    id: \"depositAmount\",\n    value: expensesData.narration,\n    onChange: function onChange(e) {\n      return setExpensesData(_objectSpread(_objectSpread({}, expensesData), {}, {\n        narration: e.currentTarget.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    onClick: handleSubmit,\n    className: \"btn-sm\",\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    className: \"btn-sm\",\n    color: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default Expenses;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/expenses.jsx"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","useParams","useHistory","axios","moment","Modal","auth","Joi","Swal","apiUrl","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","LineChart","BarChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Label","Legend","ResponsiveContainer","GiSatelliteCommunication","Expenses","user","getCurrentUser","expenses","setExpenses","customerName","setCustomerName","show","setShow","showTransfer","setShowTransfer","render","setRender","sumPaid","setSumPaid","sumWithdrawn","setSumWithdrawn","search","setSearch","bal","setBal","loanBal","setLoanBal","expenseItems","setExpenseItems","expenseItem","modeOfPayment","amount","narration","madeBy","staff","bank","accountNumber","dateOnCheque","nameOnCheque","chequeNumber","tdate","Date","toISOString","slice","expensesData","setExpensesData","pageSize","setPageSize","currentPage","setCurrentPage","banks","setBanks","bankAccounts","setBankAccounts","startDate","setStartDate","endDate","setEndDate","navigate","getExpenses","get","results","data","console","log","getExpenseItems","handleSearch","event","target","value","getBanks","handleBankChange","e","getBankAccounts","currentTarget","allExpenses","filter","item","toLowerCase","includes","dataTouse","length","schemaMap","number","required","label","string","sending","allow","receiving","date","schema","object","validateForm","result","validate","error","details","message","handleSubmit","fire","post","status","formatter","Intl","NumberFormat","style","currency","handleAmountChanged","handleClose","handleStartDateChange","handleEndDateChange","handleExpenseItemSelect","c","handleExpenseModeSelect","handleExpenseAccountSelect","handleDelete","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","isConfirmed","delete","id","isDenied","totalAmt","reduce","a","i","format","map","index","approved","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Link,\n  useNavigate,\n  Navigate,\n  useParams,\n  useHistory,\n} from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { Modal } from 'react-bootstrap'\nimport auth from '../../components/services/authService'\nimport Joi from 'joi-browser'\nimport Swal from 'sweetalert2'\nimport { apiUrl } from '../../config.json'\n\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Badge,\n  //Modal,\n} from 'reactstrap'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nimport {\n  LineChart,\n  BarChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  Cell,\n  Label,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts'\nimport { GiSatelliteCommunication } from 'react-icons/gi'\n\n//const user = auth.getCurrentUser()\nconst Expenses = () => {\n  const user = auth.getCurrentUser()\n  //const [user, setUser] = useState(auth.getCurrentUser)\n  const [expenses, setExpenses] = useState([])\n  const [customerName, setCustomerName] = useState('')\n  const [show, setShow] = useState(false)\n  const [showTransfer, setShowTransfer] = useState(false)\n  const [render, setRender] = useState(false)\n  const [sumPaid, setSumPaid] = useState(0)\n  const [sumWithdrawn, setSumWithdrawn] = useState(0)\n  const [search, setSearch] = useState('')\n  const [bal, setBal] = useState(0)\n  const [loanBal, setLoanBal] = useState(0)\n  const [expenseItems, setExpenseItems] = useState([])\n  const [expensesData, setExpensesData] = useState({\n    expenseItem: '',\n    modeOfPayment: '',\n    amount: '',\n    narration: '',\n    madeBy: user.staff,\n    bank: 0,\n    accountNumber: 0,\n    dateOnCheque: '',\n    nameOnCheque: '',\n    chequeNumber: '',\n    tdate: new Date().toISOString().slice(0, 10),\n  })\n  const [pageSize, setPageSize] = useState(5)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [banks, setBanks] = useState([])\n  const [bankAccounts, setBankAccounts] = useState([])\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().slice(0, 10),\n  )\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10))\n  let navigate = useHistory()\n\n  useEffect(() => {\n    async function getExpenses() {\n      const results = await axios.get(\n        apiUrl + '/transaction/expenses/' + startDate + '/' + endDate,\n      )\n      setExpenses(results.data)\n      console.log(user)\n    }\n    getExpenses()\n  }, [startDate, endDate, render])\n\n  useEffect(() => {\n    async function getExpenseItems() {\n      const results = await axios.get(apiUrl + '/setup/expensesitem')\n      setExpenseItems(results.data)\n    }\n    getExpenseItems()\n  }, [render])\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  useEffect(() => {\n    async function getBanks() {\n      const results = await axios.get(apiUrl + '/setup/bank')\n      setBanks(results.data)\n      // setUser(auth.getCurrentUser)\n    }\n    getBanks()\n  }, [])\n\n  const handleBankChange = (e) => {\n    getBankAccounts(e.currentTarget.value)\n    setExpensesData({\n      ...expensesData,\n      bank: e.currentTarget.value,\n    })\n  }\n\n  const getBankAccounts = async (bank) => {\n    const results = await axios.get(apiUrl + '/setup/bankaccount/' + bank)\n    setBankAccounts(results.data)\n    //console.log(results.data)\n  }\n\n  /*let customersList = customers.find(\n      (o) => o.fullName.toLowerCase() === search.toLowerCase()\n    );*/\n\n  //console.log(customersList);\n  // const allCustomers = paginate(customers, currentPage, pageSize)\n\n  const data = {\n    allExpenses: expenses.filter(\n      (item) =>\n        item.item.toLowerCase().includes(search.toLowerCase()) ||\n        item.madeBy.toLowerCase().includes(search.toLowerCase()),\n    ),\n  }\n\n  const dataTouse = search.length === 0 ? expenses : data.allExpenses\n\n  const schemaMap = {\n    expenseItem: Joi.number().required().label('Expense Item'),\n    narration: Joi.string().required().label('Narration'),\n    amount: Joi.number().required().label('Withdrawal Amount'),\n    madeBy: Joi.number().required().label('Made by'),\n    modeOfPayment: Joi.string().required().label('Mode of Payment'),\n    bank: Joi.number(),\n    accountNumber: Joi.number(),\n    sending: Joi.string().allow(''),\n    receiving: Joi.string().allow(''),\n    dateOnCheque: Joi.string().allow(''),\n    nameOnCheque: Joi.string().allow(''),\n    chequeNumber: Joi.string().allow(''),\n    tdate: Joi.date().required().label('Transaction Date'),\n  }\n\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(expensesData, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const handleSubmit = async () => {\n    console.log(user)\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error')\n    }\n\n    const results = await axios.post(\n      apiUrl + '/transaction/expenses',\n      expensesData,\n    )\n    if (results.status === 200) {\n      Swal.fire('Success', 'Expense made Successfully', 'success')\n      setExpensesData({\n        expenseItem: '',\n        modeOfPayment: '',\n        narration: '',\n        amount: '',\n        madeBy: user.staff,\n        bank: 0,\n        accountNumber: 0,\n        sending: '',\n        receiving: '',\n        dateOnCheque: '',\n        nameOnCheque: '',\n        chequeNumber: '',\n        tdate: new Date().toISOString().slice(0, 10),\n      })\n      setRender(!render)\n    }\n  }\n\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  const handleAmountChanged = (e) => {\n    setExpensesData({\n      ...expensesData,\n      amount: e.currentTarget.value,\n    })\n  }\n\n  const handleClose = () => {\n    setExpensesData({\n      expenseItem: '',\n      modeOfPayment: '',\n      narration: '',\n      amount: '',\n      madeBy: user.staff,\n      bank: 0,\n      accountNumber: 0,\n      sending: '',\n      receiving: '',\n      dateOnCheque: '',\n      nameOnCheque: '',\n      chequeNumber: '',\n      tdate: new Date().toISOString().slice(0, 10),\n    })\n    setShow(false)\n    setShowTransfer(false)\n  }\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e.currentTarget.value)\n  }\n  const handleEndDateChange = (e) => {\n    setEndDate(e.currentTarget.value)\n  }\n\n  const handleExpenseItemSelect = (c) => {\n    setExpensesData({\n      ...expensesData,\n      expenseItem: c.currentTarget.value,\n    })\n    //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  }\n\n  const handleExpenseModeSelect = (c) => {\n    setExpensesData({\n      ...expensesData,\n      modeOfPayment: c.currentTarget.value,\n    })\n    //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  }\n\n  const handleExpenseAccountSelect = (c) => {\n    setExpensesData({\n      ...expensesData,\n      accountNumber: c.currentTarget.value,\n    })\n    //setOfficer(c.nameOfStaff);\n    // setShow(!show);\n  }\n\n  const handleDelete = async (c) => {\n    Swal.fire({\n      title: 'Do you want to Delete this Expense?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      denyButtonText: `Don't`,\n    }).then(async (result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        await axios.delete(apiUrl + '/transaction/expenses/' + c.id)\n        Swal.fire('Deleted!', '', 'success')\n        setRender(!render)\n      } else if (result.isDenied) {\n        Swal.fire('Cancelled', '', 'info')\n      }\n    })\n  }\n\n  const totalAmt = expenses.reduce((a, i) => {\n    return a + i.amount\n  }, 0)\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 mt-2\">\n          <div className=\"row justify-content-center\">\n            <h4 className=\"centertext mb-3\">Offices Expenses Entry</h4>\n          </div>\n\n          <p className=\"text-center\">\n            NB: An expense is the cost of operations that a company incurs to\n            generate revenue. As the popular saying goes, “it costs money to\n            make money.”\n          </p>\n        </div>\n\n        <div className=\"col-sm-12\">\n          <CButton\n            onClick={() => setShow(!show)}\n            className=\"btn-sm float-right m-3 \"\n            color=\"success\"\n          >\n            + Enter New Expense\n          </CButton>\n          {/*<CInput\n            type=\"text\"\n            name=\"searchCustomer\"\n            className=\"float-center col-sm-3 mb-3 mt-3\"\n            id=\"searchCustomer\"\n            value={null}\n            onChange={handleSearch}\n            placeholder=\"Search Customer\"\n          />*/}\n          <div class=\"mb-3 row mt-5 col-sm-12\">\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              Start Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={startDate}\n                onChange={handleStartDateChange}\n              />\n            </div>\n            <CLabel htmlFor=\"dateOnCheque\" className=\"form-label\">\n              End Date\n            </CLabel>\n            <div className=\"col-sm-3\">\n              <CInput\n                type=\"date\"\n                class=\"form-control\"\n                id=\"dateOnCheque\"\n                value={endDate}\n                onChange={handleEndDateChange}\n              />\n            </div>\n            <div className=\"col-sm-3 text-right\">\n              Total Expenses: <strong>{formatter.format(totalAmt)}</strong>\n            </div>\n          </div>\n\n          <Table className=\"table-sm col-sm-12\">\n            <thead className=\"\">\n              <tr className=\"fs-sm\">\n                <th></th>\n                <th>Date</th>\n                <th>Item</th>\n                <th>Mode Of Payment</th>\n                <th>Description</th>\n                <th>Amount</th>\n                <th>Made By.</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataTouse.map((c, index) => (\n                <tr key={c.id}>\n                  <td>{index + 1}</td>\n                  <td>{c.tdate}</td>\n                  <td>{c.item}</td>\n                  <td>{c.modeOfPayment}</td>\n                  <td>{c.narration}</td>\n                  <td>{formatter.format(c.amount)}</td>\n                  <td>{c.madeBy}</td>\n                  <td>\n                    {!c.approved && (\n                      <CButton\n                        onClick={() => handleDelete(c)}\n                        className=\"btn-sm float-right\"\n                        color=\"danger\"\n                      >\n                        Remove\n                      </CButton>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n      <CModal\n        className=\"fade col-sm-8\"\n        size=\"md\"\n        show={show}\n        color=\"success\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n        onClose={() => {\n          setShow(!show)\n        }}\n      >\n        <CModalHeader className=\"modal-header\" closeButton>\n          <p>\n            <h3 className=\"centertext\">EXPENDITURE</h3>\n          </p>\n        </CModalHeader>\n        <CModalBody className=\"modal-body\">\n          <form>\n            <CLabel htmlFor=\"dateOnCheque\" className=\"col-sm-5\">\n              Trans. Date\n            </CLabel>\n\n            <CInput\n              type=\"date\"\n              class=\"form-control  bold mb-3\"\n              id=\"dateOnCheque\"\n              value={expensesData.tdate}\n              onChange={(e) =>\n                setExpensesData({\n                  ...expensesData,\n                  tdate: e.currentTarget.value,\n                })\n              }\n            />\n\n            <CSelect\n              className=\"form-select col-sm-12 mb-3\"\n              aria-label=\"Default\"\n              value={expensesData.expenseItem}\n              onChange={handleExpenseItemSelect}\n            >\n              <option defaultValue=\"\">--Select Expense Item*--</option>\n              {expenseItems.map((b) => (\n                <option key={b.id} value={b.id} id={b.id}>\n                  {b.item}\n                </option>\n              ))}\n            </CSelect>\n\n            <CSelect\n              className=\"form-select col-sm-12 mb-3\"\n              aria-label=\"Default\"\n              value={expensesData.modeOfPayment}\n              onChange={handleExpenseModeSelect}\n            >\n              <option defaultValue=\"\">Mode Of Payment</option>\n              <option value=\"Cash\">Cash</option>\n              <option value=\"Momo\">MoMo</option>\n              <option value=\"Cheque\">Cheque</option>\n            </CSelect>\n\n            {expensesData.modeOfPayment === 'Cheque' && (\n              <CSelect\n                className=\"form-select col-sm-12 mb-3\"\n                aria-label=\"Default\"\n                value={expensesData.bank}\n                onChange={handleBankChange}\n              >\n                <option defaultValue=\"\">Select Bank</option>\n                {banks.map((b) => (\n                  <option key={b.id} value={b.id} id={b.id}>\n                    {b.bank}\n                  </option>\n                ))}\n              </CSelect>\n            )}\n\n            {expensesData.modeOfPayment === 'Cheque' && (\n              <CSelect\n                className=\"form-select col-sm-12 mb-3\"\n                aria-label=\"Default\"\n                value={expensesData.accountNumber}\n                onChange={handleExpenseAccountSelect}\n              >\n                <option defaultValue=\"\">Select Account</option>\n                {bankAccounts.map((b) => (\n                  <option key={b.id} value={b.id} id={b.id}>\n                    {b.accountNumber}\n                  </option>\n                ))}\n              </CSelect>\n            )}\n\n            {expensesData.modeOfPayment === 'Cheque' && (\n              <div>\n                <CLabel htmlFor=\"nameOnCheque\" className=\"col-sm-5\">\n                  Name on Cheque\n                </CLabel>\n\n                <CInput\n                  type=\"text\"\n                  class=\"form-control  bold mb-3\"\n                  id=\"nameOnCheque\"\n                  value={expensesData.nameOnCheque}\n                  onChange={(e) =>\n                    setExpensesData({\n                      ...expensesData,\n                      nameOnCheque: e.currentTarget.value,\n                    })\n                  }\n                />\n              </div>\n            )}\n\n            {expensesData.modeOfPayment === 'Cheque' && (\n              <div>\n                <CLabel htmlFor=\"dateOnCheque\" className=\"col-sm-5\">\n                  Date on Cheque\n                </CLabel>\n\n                <CInput\n                  type=\"date\"\n                  class=\"form-control  bold mb-3\"\n                  id=\"dateOnCheque\"\n                  value={expensesData.dateOnCheque}\n                  onChange={(e) =>\n                    setExpensesData({\n                      ...expensesData,\n                      dateOnCheque: e.currentTarget.value,\n                    })\n                  }\n                />\n              </div>\n            )}\n\n            {expensesData.modeOfPayment === 'Cheque' && (\n              <div>\n                <CLabel htmlFor=\"chequeNumber\" className=\"col-sm-3\">\n                  Cheque No.\n                </CLabel>\n\n                <CInput\n                  type=\"text\"\n                  className=\"form-control  bold mb-3\"\n                  id=\"chequeNumber\"\n                  value={expensesData.chequeNumber}\n                  onChange={(e) =>\n                    setExpensesData({\n                      ...expensesData,\n                      chequeNumber: e.currentTarget.value,\n                    })\n                  }\n                />\n              </div>\n            )}\n\n            {expensesData.modeOfPayment === 'Momo' && (\n              <div className=\"mb-3 row\">\n                <CLabel htmlFor=\"sending\" className=\"col-sm-5 \">\n                  Sending (MoMo Number)\n                </CLabel>\n                <div className=\"col-sm-12\">\n                  <CInput\n                    id=\"sending\"\n                    className=\"form-control text-center bold mb-3\"\n                    type=\"text\"\n                    value={expensesData.sending}\n                    onChange={(e) =>\n                      setExpensesData({\n                        ...expensesData,\n                        sending: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </div>\n\n                <CLabel htmlFor=\"receivinb\" className=\"col-sm-5\">\n                  Receiving (MoMo Number)\n                </CLabel>\n                <div className=\"col-sm-12\">\n                  <CInput\n                    id=\"receiving\"\n                    className=\"form-control text-center bold\"\n                    type=\"text\"\n                    value={expensesData.receiving}\n                    onChange={(e) =>\n                      setExpensesData({\n                        ...expensesData,\n                        receiving: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            )}\n\n            <label htmlFor=\"balance\" className=\"form-label\">\n              Amount (GHC)\n            </label>\n            <CInput\n              type=\"text\"\n              name=\"balance\"\n              className=\"form-control text-right col-sm-12 mb-3\"\n              id=\"balance\"\n              value={expensesData.amount}\n              onChange={(e) =>\n                setExpensesData({\n                  ...expensesData,\n                  amount: e.currentTarget.value,\n                })\n              }\n            />\n\n            <label htmlFor=\"depositAmount\" className=\"form-label\">\n              Description *\n            </label>\n            <CInput\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"depositAmount\"\n              className=\"form-control col-sm-12 mb-3\"\n              id=\"depositAmount\"\n              value={expensesData.narration}\n              onChange={(e) =>\n                setExpensesData({\n                  ...expensesData,\n                  narration: e.currentTarget.value,\n                })\n              }\n            />\n          </form>\n        </CModalBody>\n        <CModalFooter>\n          <CButton onClick={handleSubmit} className=\"btn-sm\" color=\"success\">\n            Submit\n          </CButton>\n          <Button onClick={handleClose} className=\"btn-sm\" color=\"danger\">\n            Close\n          </Button>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default Expenses\n"]},"metadata":{},"sourceType":"module"}