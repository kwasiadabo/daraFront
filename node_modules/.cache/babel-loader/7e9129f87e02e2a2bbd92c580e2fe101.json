{"ast":null,"code":"import _objectSpread from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import CIcon from\"@coreui/icons-react\";import axios from\"axios\";import Joi from\"joi-browser\";import Swal from\"sweetalert2\";import{CBadge,CCard,CCardBody//CCardHeader,\n,CCol,CDataTable,CRow,CButton,CModal,CModalFooter,CModalHeader,CModalBody,CCardHeader,CInputGroupAppend,CInputGroupPrepend,CDropdownItem,CForm//CCardFooter,\n,CDropdownToggle//CInputRadio,\n,CDropdown,CModalTitle//CFormText,\n//CTextarea,\n,CFormGroup,CLabel// CSwitch,\n,CInput//CInputFile,\n//CSelect,\n,CDropdownMenu//CCardFooter,\n,CInputGroup//CForm,\n}from\"@coreui/react\";//import { DocsLink } from 'src/reusable'\n//import usersData from './psm/users/usersData';\nimport usersData from\"../users/UsersData\";var Depart=function Depart(){var getBadge=function getBadge(status){switch(status){case\"Active\":return\"success\";case\"Inactive\":return\"secondary\";case\"Pending\":return\"warning\";case\"Banned\":return\"danger\";default:return\"primary\";}};var fields=[\"name\",\"Phone Number\",\"GH-ID\",\"registered\",\"role\",\"status\"];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),selectedDirectorate=_useState4[0],setSelectedDirectorate=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),allDepartments=_useState6[0],setAllDepartments=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),allDirectorates=_useState8[0],setAllDirectorates=_useState8[1];var _useState9=useState({department:\"\",directorate:\"\"}),_useState10=_slicedToArray(_useState9,2),department=_useState10[0],setDepartment=_useState10[1];useEffect(function(){function getDepartments(){return _getDepartments.apply(this,arguments);}function _getDepartments(){_getDepartments=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://ugmcservice.herokuapp.com/api/departments\");case 2:results=_context.sent;setAllDepartments(results.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return _getDepartments.apply(this,arguments);}getDepartments();},[allDepartments]);useEffect(function(){function getDirectorates(){return _getDirectorates.apply(this,arguments);}function _getDirectorates(){_getDirectorates=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var results;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"https://ugmcservice.herokuapp.com/api/directorates\");case 2:results=_context2.sent;setAllDirectorates(results.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _getDirectorates.apply(this,arguments);}getDirectorates();},[allDirectorates]);var handleDirectorateChange=function handleDirectorateChange(e){setDepartment(_objectSpread(_objectSpread({},department),{},{directorate:e.currentTarget.value}));// setSelectedDirectorate(e.target.value);\n//console.log(unitDept.department);\n};var handleEditClicked=function handleEditClicked(c){console.log(c.department);};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var results;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.post(\"https://ugmcservice.herokuapp.com/api/departments\",department);case 2:results=_context3.sent;if(results.status===200){Swal.fire({title:\"Success\",text:\"Department Successfully Added\",icon:\"success\"});}else{Swal.fire({title:\"Success\",text:\"Department Addition Failed\",icon:\"error\"});}setDepartment({department:\"\",directorate:\"\"});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function handleSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,null,/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CModalHeader,null,/*#__PURE__*/React.createElement(CCol,null,/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"appendedInputButtons\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"controls\"},/*#__PURE__*/React.createElement(CInputGroup,null,/*#__PURE__*/React.createElement(CInput,{id:\"appendedInputButtons\",size:\"16\",type:\"text\"}),/*#__PURE__*/React.createElement(CInputGroupAppend,null,/*#__PURE__*/React.createElement(CCol,null,/*#__PURE__*/React.createElement(CButton,{color:\"primary\"},\"Search\")),/*#__PURE__*/React.createElement(CButton,{color:\"primary\",onClick:function onClick(){return setVisible(!visible);}},\"+ New Department\"),\" \",/*#__PURE__*/React.createElement(CButton,{color:\"success\",onClick:function onClick(){return setVisible(!visible);}},\"Export Report\")))))))),/*#__PURE__*/React.createElement(CModal,{show:visible,onClose:function onClose(){return setVisible(!visible);},color:\"primary\",size:\"lg\"},/*#__PURE__*/React.createElement(CModalHeader,{closeButton:true},/*#__PURE__*/React.createElement(CModalTitle,null,\"Administration | Department Setup\")),/*#__PURE__*/React.createElement(CModalBody,null,/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{xs:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(CCardHeader,null,\"DEPARTMENT SETUP\"),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(CFormGroup,{row:true},/*#__PURE__*/React.createElement(CCol,{md:\"12\"},/*#__PURE__*/React.createElement(CInputGroup,null,/*#__PURE__*/React.createElement(CInput,{id:\"FileNumber\",name:\"FileNumber\",placeholder:\"Department\",onChange:function onChange(e){return setDepartment(_objectSpread(_objectSpread({},department),{},{department:e.currentTarget.value}));}})))),/*#__PURE__*/React.createElement(CFormGroup,{row:true},/*#__PURE__*/React.createElement(CCol,{md:\"12\"},/*#__PURE__*/React.createElement(CInputGroup,null,/*#__PURE__*/React.createElement(CDropdown,{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"select\",{id:\"departmentId\",className:\"form-control classic\",value:department.directorate,onChange:handleDirectorateChange},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Directorate *\"),allDirectorates.map(function(m){return/*#__PURE__*/React.createElement(\"option\",{key:m._id,value:m._id,id:m._id},m.directorate);})))))))))))),/*#__PURE__*/React.createElement(CModalFooter,null,/*#__PURE__*/React.createElement(CButton,{color:\"success\",size:\"sm\",onClick:handleSubmit},\"Save\"),\" \",/*#__PURE__*/React.createElement(CButton,{color:\"warning\",size:\"sm\",onClick:function onClick(){return setVisible(!visible);}},\"Reset\"),/*#__PURE__*/React.createElement(CButton,{color:\"danger\",size:\"sm\",onClick:function onClick(){return setVisible(!visible);}},\"Cancel\"))),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(\"table\",{className:\"table table-hover table-outline mb-0 d-none d-sm-table\"},/*#__PURE__*/React.createElement(\"caption\",null,\"Departments\"),/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-light\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Number\"),/*#__PURE__*/React.createElement(\"th\",null,\"Department\"),/*#__PURE__*/React.createElement(\"th\",null,\"Directorate\"),/*#__PURE__*/React.createElement(\"th\",null,\"Action\"))),/*#__PURE__*/React.createElement(\"tbody\",{className:\"\"},allDepartments.map(function(s,index){return/*#__PURE__*/React.createElement(\"tr\",{key:s._id},/*#__PURE__*/React.createElement(\"td\",null,index+1),/*#__PURE__*/React.createElement(\"td\",null,s.department),/*#__PURE__*/React.createElement(\"td\",null,s.directorate.directorate),/*#__PURE__*/React.createElement(\"td\",{className:\"float-right\"},/*#__PURE__*/React.createElement(CButton,{color:\"info\",size:\"sm\",onClick:function onClick(s){return handleEditClicked(s);}},\"Edit\")));}))))))));};export default Depart;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/setup/Depart.js"],"names":["React","useState","useEffect","CIcon","axios","Joi","Swal","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CDropdownMenu","CInputGroup","usersData","Depart","getBadge","status","fields","visible","setVisible","selectedDirectorate","setSelectedDirectorate","allDepartments","setAllDepartments","allDirectorates","setAllDirectorates","department","directorate","setDepartment","getDepartments","get","results","data","getDirectorates","handleDirectorateChange","e","currentTarget","value","handleEditClicked","c","console","log","handleSubmit","post","fire","title","text","icon","map","m","_id","s","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CIcon from \"@coreui/icons-react\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport Swal from \"sweetalert2\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  //CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from \"@coreui/react\";\n//import { DocsLink } from 'src/reusable'\n\n//import usersData from './psm/users/usersData';\n\nimport usersData from \"../users/UsersData\";\n\nconst Depart = () => {\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Active\":\n        return \"success\";\n      case \"Inactive\":\n        return \"secondary\";\n      case \"Pending\":\n        return \"warning\";\n      case \"Banned\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n  const fields = [\n    \"name\",\n    \"Phone Number\",\n    \"GH-ID\",\n    \"registered\",\n    \"role\",\n    \"status\",\n  ];\n  const [visible, setVisible] = useState(false);\n  const [selectedDirectorate, setSelectedDirectorate] = useState(\"\");\n  const [allDepartments, setAllDepartments] = useState([]);\n  const [allDirectorates, setAllDirectorates] = useState([]);\n  const [department, setDepartment] = useState({\n    department: \"\",\n    directorate: \"\",\n  });\n\n  useEffect(() => {\n    async function getDepartments() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/departments\"\n      );\n      setAllDepartments(results.data);\n    }\n    getDepartments();\n  }, [allDepartments]);\n\n  useEffect(() => {\n    async function getDirectorates() {\n      const results = await axios.get(\n        \"https://ugmcservice.herokuapp.com/api/directorates\"\n      );\n      setAllDirectorates(results.data);\n    }\n    getDirectorates();\n  }, [allDirectorates]);\n\n  const handleDirectorateChange = (e) => {\n    setDepartment({ ...department, directorate: e.currentTarget.value });\n    // setSelectedDirectorate(e.target.value);\n    //console.log(unitDept.department);\n  };\n\n  const handleEditClicked = (c) => {\n    console.log(c.department);\n  };\n\n  const handleSubmit = async () => {\n    const results = await axios.post(\n      \"https://ugmcservice.herokuapp.com/api/departments\",\n      department\n    );\n\n    if (results.status === 200) {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Department Successfully Added\",\n        icon: \"success\",\n      });\n    } else {\n      Swal.fire({\n        title: \"Success\",\n        text: \"Department Addition Failed\",\n        icon: \"error\",\n      });\n    }\n    setDepartment({ department: \"\", directorate: \"\" });\n  };\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <div>\n              <CModalHeader>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"appendedInputButtons\"></CLabel>\n                    <div className=\"controls\">\n                      <CInputGroup>\n                        <CInput\n                          id=\"appendedInputButtons\"\n                          size=\"16\"\n                          type=\"text\"\n                        />\n                        <CInputGroupAppend>\n                          <CCol>\n                            <CButton color=\"primary\">Search</CButton>\n                          </CCol>\n                          <CButton\n                            color=\"primary\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            + New Department\n                          </CButton>{\" \"}\n                          <CButton\n                            color=\"success\"\n                            onClick={() => setVisible(!visible)}\n                          >\n                            Export Report\n                          </CButton>\n                        </CInputGroupAppend>\n                      </CInputGroup>\n                    </div>\n                  </CFormGroup>\n                </CCol>\n              </CModalHeader>\n            </div>\n\n            {/*<CButton color=\"success\" onClick={() => setSuccess(!success)} className=\"mr-1\">Success modal</CButton>\n            <CButton color=\"warning\" onClick={() => setWarning(!warning)} className=\"mr-1\">Warning modal</CButton>\n            <CButton color=\"danger\" onClick={() => setDanger(!danger)} className=\"mr-1\">Danger modal</CButton>\n  <CButton color=\"info\" onClick={() => setInfo(!info)} className=\"mr-1\">Info modal</CButton>*/}\n\n            <CModal\n              show={visible}\n              onClose={() => setVisible(!visible)}\n              color=\"primary\"\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Administration | Department Setup</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <form>\n                  <CRow>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CCard>\n                        <CCardHeader>DEPARTMENT SETUP</CCardHeader>\n                        <CCardBody>\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CInputGroup>\n                                <CInput\n                                  id=\"FileNumber\"\n                                  name=\"FileNumber\"\n                                  placeholder=\"Department\"\n                                  onChange={(e) =>\n                                    setDepartment({\n                                      ...department,\n                                      department: e.currentTarget.value,\n                                    })\n                                  }\n                                />\n                              </CInputGroup>\n                            </CCol>\n                          </CFormGroup>\n\n                          <CFormGroup row>\n                            <CCol md=\"12\">\n                              <CInputGroup>\n                                <CDropdown className=\"input-group-append\">\n                                  <select\n                                    id=\"departmentId\"\n                                    className=\"form-control classic\"\n                                    value={department.directorate}\n                                    onChange={handleDirectorateChange}\n                                  >\n                                    <option value=\"\">Directorate *</option>\n                                    {allDirectorates.map((m) => (\n                                      <option\n                                        key={m._id}\n                                        value={m._id}\n                                        id={m._id}\n                                      >\n                                        {m.directorate}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </CDropdown>\n                              </CInputGroup>\n                            </CCol>\n                          </CFormGroup>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                  </CRow>\n                </form>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"success\" size=\"sm\" onClick={handleSubmit}>\n                  Save\n                </CButton>{\" \"}\n                <CButton\n                  color=\"warning\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Reset\n                </CButton>\n                <CButton\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={() => setVisible(!visible)}\n                >\n                  Cancel\n                </CButton>\n              </CModalFooter>\n            </CModal>\n\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <caption>Departments</caption>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th>Number</th>\n                    <th>Department</th>\n                    <th>Directorate</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody className=\"\">\n                  {allDepartments.map((s, index) => (\n                    <tr key={s._id}>\n                      <td>{index + 1}</td>\n                      <td>{s.department}</td>\n                      <td>{s.directorate.directorate}</td>\n\n                      <td className=\"float-right\">\n                        <CButton\n                          color=\"info\"\n                          size=\"sm\"\n                          onClick={(s) => handleEditClicked(s)}\n                        >\n                          Edit\n                        </CButton>\n\n                        {/*<CButton color=\"primary\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n                </CButton>\n                <CButton color=\"danger\" size=\"sm\" onClick={(s)=>handleEditClicked(s)}>\n                  Edit\n              </CButton>*/}\n                      </td>\n                      {/*<td>\n                    <button\n                      className=\"but btn-houReject\"\n                      onClick={() => handleShow(s)}\n                    >\n                      Reject\n                    </button>\n                  </td>*/}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Depart;\n"]},"metadata":{},"sourceType":"module"}