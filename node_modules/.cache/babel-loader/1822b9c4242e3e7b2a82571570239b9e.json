{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams,useHistory}from'react-router-dom';import axios from'axios';import moment from'moment';import Joi from'joi-browser';import CurrencyFormat from'react-currency-format';import Swal from'sweetalert2';import auth from'../../components/services/authService';import{apiUrl}from'../../config.json';import{reportUrl}from'../../config.json';import'../../../src/schedulecards.css';import{Row,Col,Table,Progress,Button,UncontrolledButtonDropdown,DropdownMenu,DropdownToggle,DropdownItem,Input,Label,Badge}from'reactstrap';import{CBadge,CCard,CCardBody//CCardHeader,\n,CCol,CDataTable,CRow,CButton,CModal,CModalFooter,CModalHeader,CModalBody,CCardHeader,CInputGroupAppend,CInputGroupPrepend,CDropdownItem,CForm//CCardFooter,\n,CDropdownToggle//CInputRadio,\n,CDropdown,CDropdownDivider,CModalTitle//CFormText,\n//CTextarea,\n,CFormGroup,CLabel// CSwitch,\n,CInput//CInputFile,\n,CSelect,CDropdownMenu//CCardFooter,\n,CInputGroup//CForm,\n}from'@coreui/react';var PaymentSchedule=function PaymentSchedule(){var _useParams=useParams(),disbursementId=_useParams.disbursementId,customer=_useParams.customer;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),render=_useState2[0],setRender=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),paymentSchedule=_useState4[0],setPaymentSchedule=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),fullName=_useState6[0],setFullName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),loanId=_useState8[0],setLoanId=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),accountNumber=_useState10[0],setAccountNumber=_useState10[1];var navigate=useHistory();var formatter=new Intl.NumberFormat('en-US',{style:'currency',currency:'GHS'// These options are needed to round to whole numbers if that's what you want.\n//minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n//maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});useEffect(function(){function getPaymentSchedule(){return _getPaymentSchedule.apply(this,arguments);}function _getPaymentSchedule(){_getPaymentSchedule=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(apiUrl+'/loan/booking/paymentschedule/'+disbursementId+'/'+customer);case 2:results=_context.sent;setPaymentSchedule(results.data);setFullName(results.data[0].fullName);setAccountNumber(results.data[0].accountNumber);setLoanId(results.data[0].loanId);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getPaymentSchedule.apply(this,arguments);}getPaymentSchedule();// console.log(paymentSchedule[0])\n},[render]);var totalAmt=paymentSchedule.reduce(function(a,i){return a+i.dailyAmt;},0);var openCustomerListAsReport=function openCustomerListAsReport(url){var windowFeatures='left=100,top=100,width=320,height=320';window.open(url,'Payment Schedule','popup',windowFeatures);};return/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-3 text-center\"},\"Loan Payment Schedule\"),/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{lg:12},/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(\"strong\",{className:\"float-right m-3\"},/*#__PURE__*/React.createElement(\"p\",null,\"Account Number : \",accountNumber),/*#__PURE__*/React.createElement(\"p\",null,\"Loan ID : \",loanId),/*#__PURE__*/React.createElement(\"p\",null,\"Customer : \",fullName)),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(\"strong\",{className:\"float-right mb-3\"},\"Total Payment Expected : \",formatter.format(totalAmt)),/*#__PURE__*/React.createElement(Table,{className:\"table-sm text-center\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"fs-sm\"},/*#__PURE__*/React.createElement(\"th\",null,\"No.\"),/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Day\"),/*#__PURE__*/React.createElement(\"th\",null,\"Daily Amount\"),/*#__PURE__*/React.createElement(\"th\",null))),/*#__PURE__*/React.createElement(\"tbody\",null,paymentSchedule.map(function(c,index){return/*#__PURE__*/React.createElement(\"tr\",{key:c.idNumber},/*#__PURE__*/React.createElement(\"td\",null,index+1),/*#__PURE__*/React.createElement(\"td\",null,moment(c.paymentDate).format('DD-MMMM-YYYY')),/*#__PURE__*/React.createElement(\"td\",null,c.dayNam),/*#__PURE__*/React.createElement(\"td\",null,formatter.format(c.dailyAmt)));})))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-12\"},/*#__PURE__*/React.createElement(CButton,{className:\"col-sm-2 btn-sm float-right mb-3 mr-3\",color:\"danger\",onClick:function onClick(){return openCustomerListAsReport(reportUrl+'/paymentSchedule.aspx?'+disbursementId+'?'+customer);}},\"Show as Report\"))))));};export default PaymentSchedule;","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/paymentSchedules.jsx"],"names":["React","useState","useEffect","useParams","useHistory","axios","moment","Joi","CurrencyFormat","Swal","auth","apiUrl","reportUrl","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Input","Label","Badge","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CDropdownDivider","CModalTitle","CFormGroup","CLabel","CInput","CSelect","CDropdownMenu","CInputGroup","PaymentSchedule","disbursementId","customer","render","setRender","paymentSchedule","setPaymentSchedule","fullName","setFullName","loanId","setLoanId","accountNumber","setAccountNumber","navigate","formatter","Intl","NumberFormat","style","currency","getPaymentSchedule","get","results","data","totalAmt","reduce","a","i","dailyAmt","openCustomerListAsReport","url","windowFeatures","window","open","format","map","c","index","idNumber","paymentDate","dayNam"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Joi from 'joi-browser'\nimport CurrencyFormat from 'react-currency-format'\nimport Swal from 'sweetalert2'\nimport auth from '../../components/services/authService'\nimport { apiUrl } from '../../config.json'\nimport { reportUrl } from '../../config.json'\nimport '../../../src/schedulecards.css'\nimport {\n  Row,\n  Col,\n  Table,\n  Progress,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n  Label,\n  Badge,\n} from 'reactstrap'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CDropdownDivider,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\n\nconst PaymentSchedule = () => {\n  const { disbursementId, customer } = useParams()\n  const [render, setRender] = useState(false)\n  const [paymentSchedule, setPaymentSchedule] = useState([])\n  const [fullName, setFullName] = useState('')\n  const [loanId, setLoanId] = useState('')\n  const [accountNumber, setAccountNumber] = useState('')\n  const navigate = useHistory()\n  let formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'GHS',\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  })\n\n  useEffect(() => {\n    async function getPaymentSchedule() {\n      const results = await axios.get(\n        apiUrl +\n          '/loan/booking/paymentschedule/' +\n          disbursementId +\n          '/' +\n          customer,\n      )\n      setPaymentSchedule(results.data)\n      setFullName(results.data[0].fullName)\n      setAccountNumber(results.data[0].accountNumber)\n      setLoanId(results.data[0].loanId)\n    }\n    getPaymentSchedule()\n    // console.log(paymentSchedule[0])\n  }, [render])\n\n  const totalAmt = paymentSchedule.reduce((a, i) => {\n    return a + i.dailyAmt\n  }, 0)\n\n  const openCustomerListAsReport = (url) => {\n    const windowFeatures = 'left=100,top=100,width=320,height=320'\n    window.open(url, 'Payment Schedule', 'popup', windowFeatures)\n  }\n  return (\n    <div className=\"container-fluid\">\n      <h4 className=\"mb-3 text-center\">Loan Payment Schedule</h4>\n\n      <CRow>\n        <CCol lg={12}>\n          <CCard>\n            {/*<CCardHeader className=\"text-right\">*/}\n            <strong className=\"float-right m-3\">\n              <p>Account Number : {accountNumber}</p>\n              <p>Loan ID : {loanId}</p>\n              <p>Customer : {fullName}</p>\n            </strong>\n            {/*</CCardHeader>*/}\n\n            <CCardBody>\n              <strong className=\"float-right mb-3\">\n                Total Payment Expected : {formatter.format(totalAmt)}\n              </strong>\n              <Table className=\"table-sm text-center\">\n                <thead>\n                  <tr className=\"fs-sm\">\n                    <th>No.</th>\n                    <th>Date</th>\n                    <th>Day</th>\n                    <th>Daily Amount</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {paymentSchedule.map((c, index) => (\n                    <tr key={c.idNumber}>\n                      <td>{index + 1}</td>\n                      <td>{moment(c.paymentDate).format('DD-MMMM-YYYY')}</td>\n                      <td>{c.dayNam}</td>\n                      <td>{formatter.format(c.dailyAmt)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CCardBody>\n            <div className=\"col-sm-12\">\n              {/* <CButton\n                className=\"col-sm-2 btn-sm float-right mb-3 mr-3\"\n                color=\"success\"\n                onClick={window.print}\n              >\n                Print\n             </CButton>*/}\n              <CButton\n                className=\"col-sm-2 btn-sm float-right mb-3 mr-3\"\n                color=\"danger\"\n                onClick={() =>\n                  openCustomerListAsReport(\n                    reportUrl +\n                      '/paymentSchedule.aspx?' +\n                      disbursementId +\n                      '?' +\n                      customer,\n                  )\n                }\n              >\n                Show as Report\n              </CButton>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default PaymentSchedule\n"]},"metadata":{},"sourceType":"module"}