{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/customer.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { apiUrl } from '../../config.json';\nimport formData from 'form-data';\nimport auth from '../../components/services/authService';\nimport noImg from '../../assets/icons/noImg.png';\nimport Joi from 'joi-browser';\nimport Swal from 'sweetalert2';\nimport { CBadge, CCard, CCardBody //CCardHeader,\n, CCol, CDataTable, CRow, CButton, CModal, CModalFooter, CModalHeader, CModalBody, CCardHeader, CInputGroupAppend, CInputGroupPrepend, CDropdownItem, CForm //CCardFooter,\n, CDropdownToggle //CInputRadio,\n, CDropdown, CModalTitle //CFormText,\n//CTextarea,\n, CFormGroup, CLabel // CSwitch,\n, CInput //CInputFile,\n//CSelect,\n, CDropdownMenu //CCardFooter,\n, CInputGroup //CForm,\n} from '@coreui/react';\n\nvar Customer = function Customer() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      display = _useState4[0],\n      setDisplay = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allStaff = _useState6[0],\n      setAllStaff = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      user = _useState8[0],\n      setUser = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      groups = _useState10[0],\n      setGroups = _useState10[1];\n\n  var _useState11 = useState({\n    fullName: '',\n    dob: '',\n    phone: '',\n    hometown: '',\n    placeOfBirth: '',\n    occupation: '',\n    nationality: '',\n    gender: '',\n    residentialAddress: '',\n    ghanaPostGPS: '',\n    residence: '',\n    idType: '',\n    idNumber: '',\n    tinNumber: '',\n    marritalStatus: '',\n    nameOfSpouse: '',\n    phoneOfSpouse: '',\n    occupationOfSpouse: '',\n    religion: '',\n    placeOfWorship: '',\n    nameOfChurchLeader: '',\n    phoneOfChurchLeader: '',\n    //selectedFile: \"\",\n    officer: '',\n    group: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      customer = _useState12[0],\n      setCustomer = _useState12[1];\n\n  useEffect(function () {\n    var getIsAdmin = function getIsAdmin() {\n      setUser(auth.getCurrentUser);\n    };\n\n    getIsAdmin();\n  }, []);\n  useEffect(function () {\n    function getGroups() {\n      return _getGroups.apply(this, arguments);\n    }\n\n    function _getGroups() {\n      _getGroups = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiUrl + '/group');\n\n              case 2:\n                results = _context.sent;\n                setGroups(results.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getGroups.apply(this, arguments);\n    }\n\n    getGroups();\n  }, [groups]);\n  useEffect(function () {\n    function getStaff() {\n      return _getStaff.apply(this, arguments);\n    }\n\n    function _getStaff() {\n      _getStaff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var staff;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(apiUrl + '/staff');\n\n              case 2:\n                staff = _context2.sent;\n                setAllStaff(staff.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getStaff.apply(this, arguments);\n    }\n\n    getStaff();\n  }, [allStaff]);\n  var schemaMap = {\n    fullName: Joi.string().required().label('FullName'),\n    dob: Joi.date().required().label('Date of Birth'),\n    phone: Joi.string().required().label('Phone Number'),\n    hometown: Joi.string().allow(''),\n    placeOfBirth: Joi.string().allow(''),\n    nationality: Joi.string().allow(''),\n    occupation: Joi.string().required().label('Occupation'),\n    gender: Joi.string().required().label('Gender'),\n    residentialAddress: Joi.string().required().label('Residential Address'),\n    ghanaPostGPS: Joi.string().required().label('GPS'),\n    residence: Joi.string().allow(''),\n    idType: Joi.string().required().label('ID Type'),\n    idNumber: Joi.string().required().label('ID Number'),\n    tinNumber: Joi.string().required().label('TIN NUmber'),\n    marritalStatus: Joi.string().allow(''),\n    nameOfSpouse: Joi.string().allow(''),\n    phoneOfSpouse: Joi.string().allow(''),\n    occupationOfSpouse: Joi.string().allow(''),\n    religion: Joi.string().allow(''),\n    placeOfWorship: Joi.string().allow(''),\n    nameOfChurchLeader: Joi.string().allow(''),\n    phoneOfChurchLeader: Joi.string().allow(''),\n    officer: Joi.string().required().label('Officer'),\n    group: Joi.string().allow('').label('Group') //createdBy: Joi.string().label(\"Created By\"),\n\n  };\n\n  var onImageChange = function onImageChange(event) {\n    if (event.target.files && event.target.files[0]) {\n      setImage(event.target.files[0]);\n      setDisplay(URL.createObjectURL(event.target.files[0])); //setCustomer({ ...customer, img: event.currentTarget.files[0] });\n    }\n  };\n\n  var schema = Joi.object(schemaMap);\n\n  var validateForm = function validateForm() {\n    var result = Joi.validate(customer, schema);\n\n    if (result.error) {\n      return result.error.details[0].message;\n    } else {\n      return null;\n    }\n  };\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault(); // console.log(customer);\n\n    if (image === null) return Swal.fire('OOPS', 'Image is Required', 'error');\n    var validate = validateForm();\n\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error');\n    }\n\n    try {\n      var fd = new formData();\n      fd.append('fullName', customer.fullName);\n      fd.append('img', image);\n      fd.append('dob', customer.dob);\n      fd.append('phone', customer.phone);\n      fd.append('hometown', customer.hometown);\n      fd.append('placeOfBirth', customer.placeOfBirth);\n      fd.append('nationality', customer.nationality);\n      fd.append('occupation', customer.occupation);\n      fd.append('gender', customer.gender);\n      fd.append('residentialAddress', customer.residentialAddress);\n      fd.append('ghanaPostGPS', customer.ghanaPostGPS);\n      fd.append('residence', customer.residence);\n      fd.append('idType', customer.idType);\n      fd.append('idNumber', customer.idNumber);\n      fd.append('tin', customer.tinNumber);\n      fd.append('maritalStatus', customer.maritalStatus);\n      fd.append('nameOfSpouse', customer.nameOfSpouse);\n      fd.append('phoneOfSpouse', customer.phoneOfSpouse);\n      fd.append('occupationOfSpouse', customer.occupationOfSpouse);\n      fd.append('religion', customer.religion);\n      fd.append('placeOfWorship', customer.placeOfWorship);\n      fd.append('leaderOfPlaceOfWorship', customer.nameOfChurchLeader);\n      fd.append('contactOfPlaceOfWorship', customer.phoneOfChurchLeader);\n      fd.append('officer', customer.officer);\n      fd.append('group', customer.group);\n      fd.append('createdBy', user._id);\n      /*for (let [key, value] of fd.entries()) {\n        console.log(key, value);\n      }*/\n      //fd.append(\"img\", image);\n\n      axios.post('http://localhost:49155/api/customer', fd, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(function (res) {\n        Swal.fire('Success', 'Customer Details Submitted Successfully', 'success');\n        setCustomer({\n          fullName: '',\n          dob: '',\n          phone: '',\n          hometown: '',\n          placeOfBirth: '',\n          occupation: '',\n          nationality: '',\n          gender: '',\n          residentialAddress: '',\n          ghanaPostGPS: '',\n          residence: '',\n          idType: '',\n          idNumber: '',\n          tinNumber: '',\n          maritalStatus: '',\n          nameOfSpouse: '',\n          phoneOfSpouse: '',\n          occupationOfSpouse: '',\n          religion: '',\n          placeOfWorship: '',\n          nameOfChurchLeader: '',\n          phoneOfChurchLeader: '',\n          //selectedFile: \"\",\n          officer: '',\n          group: ''\n        });\n        setDisplay(null);\n      }).catch(function (err) {\n        Swal.fire('OOPS ! ' + err.message + '  [ Customer Details Not Saved]', 'error');\n      });\n    } catch (ex) {\n      return Swal.fire('OOPS', ex + '  [ Customer Details Not Saved]', 'error');\n    }\n    /* const validate = validateForm();\n    if (validate !== null) {\n      return Swal.fire(\"OOPS\", validate, \"error\");\n    }\n    */\n\n  };\n  /* axios.post(\"http://localhost:49155/api/customer\", customer, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },*/\n\n\n  return /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, \"Customer Registration\"))))));\n};\n\nexport default Customer;\n/*\n  <CInputGroup>\n                  <img src={display} className=\"m-3\" alt=\"preview image\" />\n\n                  <CInput\n                    type=\"file\"\n                    onChange={onImageChange}\n                    className=\"form-control-sm col-sm-4 mt-3\"\n                    id=\"group_image\"\n                    name=\"img\"\n                  />\n                </CInputGroup>\n\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"fullName\" className=\"form-label m-3\">\n                    Full Name *\n                  </CLabel>\n\n                  <CInput\n                    name=\"fullName\"\n                    type=\"text\"\n                    className=\"form-control col-sm-4\"\n                    id=\"fullName\"\n                    value={customer.fullName}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        fullName: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <label htmlFor=\"hometown\" className=\"form-label custlabel\">\n                    Hometown\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control col-sm-4\"\n                    id=\"hometown\"\n                    value={customer.hometown}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        hometown: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"Dob\" className=\"form-label custlabel\">\n                    Date of Birth *\n                  </label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"Dob\"\n                    placeholder=\"dd-mm-yyyy\"\n                    min=\"1940-01-01\"\n                    value={customer.dob}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        dob: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"placeofbirth\"\n                    className=\"form-label custlabel\"\n                  >\n                    Place of Birth\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"placeofBirth\"\n                    value={customer.placeOfBirth}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        placeOfBirth: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"occupation\" className=\"form-label custlabel\">\n                    Occupation *\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"occupation\"\n                    value={customer.occupation}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        occupation: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"phone\" className=\"form-label custlabel\">\n                    Phone *\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"Phone\"\n                    value={customer.phone}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phone: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"nationality\" className=\"form-label custlabel\">\n                    Nationality\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"nationality\"\n                    value={customer.value}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nationality: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"gender\" className=\"form-label custlabel\">\n                    Gender *\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.gender}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        gender: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Select Gender--</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"resaddress\" className=\"form-label custlabel\">\n                    Residential Address *\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"resaddress\"\n                    value={customer.residentialAddress}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        residentialAddress: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"gps\" className=\"form-label custlabel\">\n                    Ghana Post GPS *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.ghanaPostGPS}\n                    className=\"form-control\"\n                    id=\"gps\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        ghanaPostGPS: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"suburb\" className=\"form-label custlabel\">\n                    Suburb / Land Mark / Directions\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.residence}\n                    className=\"form-control\"\n                    id=\"suburb\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        residence: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"idType\" className=\"form-label custlabel\">\n                    ID Type *\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.idType}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        idType: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Select ID--</option>\n                    <option value=\"National ID\">National ID</option>\n                    <option value=\"Voter ID\">Voter ID</option>\n                    <option value=\"Driver's License\">Driver's License</option>\n                    <option value=\"Passport\">Passport</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"idNumber\" className=\"form-label custlabel\">\n                    ID Number *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.idNumber}\n                    className=\"form-control\"\n                    id=\"idNumber\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        idNumber: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"tin\" className=\"form-label custlabel\">\n                    TIN *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.tinNumber}\n                    className=\"form-control\"\n                    id=\"tin\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        tinNumber: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"married\" className=\"form-label custlabel\">\n                    Marrital Status\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.maritalStatus}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        maritalStatus: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Marital Status--</option>\n                    <option value=\"Married\">Married</option>\n                    <option value=\"Single\">Single</option>\n                    <option value=\"Divorced\">Divorced</option>\n                    <option value=\"Widowed\">Widowed</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"nameofspouse\"\n                    className=\"form-label custlabel\"\n                  >\n                    Name of Spouse\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"nameofspouse\"\n                    value={customer.nameOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nameOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneofspouse\"\n                    className=\"form-label custlabel\"\n                  >\n                    Phone of Spouse\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"phoneofspouse\"\n                    value={customer.phoneOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phoneOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"occupationofspouse\"\n                    className=\"form-label custlabel\"\n                  >\n                    Occu. Spouse\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"occupationofspouse\"\n                    value={customer.occupationOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        occupationOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"religion\" className=\"form-label custlabel\">\n                    Religion\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.religion}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        religion: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Religion--</option>\n                    <option value=\"Christian\">Christian</option>\n                    <option value=\"Muslim\">Muslim</option>\n                    <option value=\"Traditionalist\">Traditionalist</option>\n                    <option value=\"Other\">Other</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"placeofworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Place of Worship\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.placeholder}\n                    className=\"form-control\"\n                    id=\"placeofworship\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        placeOfWorship: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"worshipleader\"\n                    className=\"form-label custlabel\"\n                  >\n                    Leader of Place of Worship\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.nameOfChurchLeader}\n                    className=\"form-control\"\n                    id=\"worshipleader\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nameOfChurchLeader: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Phone, Place of worship\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.phoneOfChurchLeader}\n                    className=\"form-control\"\n                    id=\"phoneworship\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phoneOfChurchLeader: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Assigned Officer *\n                  </label>\n                  <select\n                    className=\"form-select mb-5\"\n                    aria-label=\"Default select example\"\n                    value={customer.officer}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        officer: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option value=\"\">Officer *</option>\n                    {allStaff.map((s) => (\n                      <option key={s._id} value={s._id} id={s._id}>\n                        {s.nameOfStaff}\n                      </option>\n                    ))}\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Group *\n                  </label>\n                  <select\n                    className=\"form-select mb-5\"\n                    aria-label=\"Default select example\"\n                    value={customer.group}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        group: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option value=\"\">Group *</option>\n                    {groups.map((s) => (\n                      <option key={s._id} value={s._id} id={s._id}>\n                        {s.group}\n                      </option>\n                    ))}\n                  </select>\n                </CInputGroup>\n              </CFormGroup>\n\n              <div className=\"d-flex justify-content-center mt-3 mb-3\">\n                <button className=\"button col-md-5 ms-5\" type=\"submit\">\n                  Submit\n                </button>\n              </div>\n\n*/","map":{"version":3,"sources":["/Users/mac/Documents/Dara/daraPlusApp/daraFront/src/views/pages/customer.jsx"],"names":["React","useState","useEffect","Link","useNavigate","Navigate","axios","moment","apiUrl","formData","auth","noImg","Joi","Swal","CBadge","CCard","CCardBody","CCol","CDataTable","CRow","CButton","CModal","CModalFooter","CModalHeader","CModalBody","CCardHeader","CInputGroupAppend","CInputGroupPrepend","CDropdownItem","CForm","CDropdownToggle","CDropdown","CModalTitle","CFormGroup","CLabel","CInput","CDropdownMenu","CInputGroup","Customer","image","setImage","display","setDisplay","allStaff","setAllStaff","user","setUser","groups","setGroups","fullName","dob","phone","hometown","placeOfBirth","occupation","nationality","gender","residentialAddress","ghanaPostGPS","residence","idType","idNumber","tinNumber","marritalStatus","nameOfSpouse","phoneOfSpouse","occupationOfSpouse","religion","placeOfWorship","nameOfChurchLeader","phoneOfChurchLeader","officer","group","customer","setCustomer","getIsAdmin","getCurrentUser","getGroups","get","results","data","getStaff","staff","schemaMap","string","required","label","date","allow","onImageChange","event","target","files","URL","createObjectURL","schema","object","validateForm","result","validate","error","details","message","onSubmit","e","preventDefault","fire","fd","append","maritalStatus","_id","post","headers","then","res","catch","err","ex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { apiUrl } from '../../config.json'\nimport formData from 'form-data'\nimport auth from '../../components/services/authService'\nimport noImg from '../../assets/icons/noImg.png'\nimport Joi from 'joi-browser'\n\nimport Swal from 'sweetalert2'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  //CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CCardHeader,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdownItem,\n  CForm,\n  //CCardFooter,\n  CDropdownToggle,\n  //CInputRadio,\n  CDropdown,\n  CModalTitle,\n  //CFormText,\n  //CTextarea,\n  CFormGroup,\n  CLabel,\n  // CSwitch,\n  CInput,\n  //CInputFile,\n  //CSelect,\n  CDropdownMenu,\n  //CCardFooter,\n  CInputGroup,\n  //CForm,\n} from '@coreui/react'\nconst Customer = () => {\n  const [image, setImage] = useState(null)\n  const [display, setDisplay] = useState(null)\n  const [allStaff, setAllStaff] = useState([])\n  const [user, setUser] = useState({})\n\n  const [groups, setGroups] = useState([])\n  const [customer, setCustomer] = useState({\n    fullName: '',\n    dob: '',\n    phone: '',\n    hometown: '',\n    placeOfBirth: '',\n    occupation: '',\n    nationality: '',\n    gender: '',\n    residentialAddress: '',\n    ghanaPostGPS: '',\n    residence: '',\n    idType: '',\n    idNumber: '',\n    tinNumber: '',\n    marritalStatus: '',\n    nameOfSpouse: '',\n    phoneOfSpouse: '',\n    occupationOfSpouse: '',\n    religion: '',\n    placeOfWorship: '',\n    nameOfChurchLeader: '',\n    phoneOfChurchLeader: '',\n    //selectedFile: \"\",\n    officer: '',\n    group: '',\n  })\n\n  useEffect(() => {\n    const getIsAdmin = () => {\n      setUser(auth.getCurrentUser)\n    }\n\n    getIsAdmin()\n  }, [])\n\n  useEffect(() => {\n    async function getGroups() {\n      const results = await axios.get(apiUrl + '/group')\n      setGroups(results.data)\n    }\n    getGroups()\n  }, [groups])\n\n  useEffect(() => {\n    async function getStaff() {\n      const staff = await axios.get(apiUrl + '/staff')\n      setAllStaff(staff.data)\n    }\n    getStaff()\n  }, [allStaff])\n\n  const schemaMap = {\n    fullName: Joi.string().required().label('FullName'),\n    dob: Joi.date().required().label('Date of Birth'),\n    phone: Joi.string().required().label('Phone Number'),\n    hometown: Joi.string().allow(''),\n    placeOfBirth: Joi.string().allow(''),\n    nationality: Joi.string().allow(''),\n    occupation: Joi.string().required().label('Occupation'),\n    gender: Joi.string().required().label('Gender'),\n    residentialAddress: Joi.string().required().label('Residential Address'),\n    ghanaPostGPS: Joi.string().required().label('GPS'),\n    residence: Joi.string().allow(''),\n\n    idType: Joi.string().required().label('ID Type'),\n    idNumber: Joi.string().required().label('ID Number'),\n    tinNumber: Joi.string().required().label('TIN NUmber'),\n    marritalStatus: Joi.string().allow(''),\n    nameOfSpouse: Joi.string().allow(''),\n    phoneOfSpouse: Joi.string().allow(''),\n    occupationOfSpouse: Joi.string().allow(''),\n    religion: Joi.string().allow(''),\n    placeOfWorship: Joi.string().allow(''),\n    nameOfChurchLeader: Joi.string().allow(''),\n    phoneOfChurchLeader: Joi.string().allow(''),\n    officer: Joi.string().required().label('Officer'),\n    group: Joi.string().allow('').label('Group'),\n    //createdBy: Joi.string().label(\"Created By\"),\n  }\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      setImage(event.target.files[0])\n      setDisplay(URL.createObjectURL(event.target.files[0]))\n      //setCustomer({ ...customer, img: event.currentTarget.files[0] });\n    }\n  }\n\n  const schema = Joi.object(schemaMap)\n\n  const validateForm = () => {\n    const result = Joi.validate(customer, schema)\n    if (result.error) {\n      return result.error.details[0].message\n    } else {\n      return null\n    }\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    // console.log(customer);\n    if (image === null) return Swal.fire('OOPS', 'Image is Required', 'error')\n\n    const validate = validateForm()\n    if (validate !== null) {\n      return Swal.fire('OOPS', validate, 'error')\n    }\n    try {\n      const fd = new formData()\n      fd.append('fullName', customer.fullName)\n      fd.append('img', image)\n      fd.append('dob', customer.dob)\n      fd.append('phone', customer.phone)\n      fd.append('hometown', customer.hometown)\n      fd.append('placeOfBirth', customer.placeOfBirth)\n      fd.append('nationality', customer.nationality)\n      fd.append('occupation', customer.occupation)\n      fd.append('gender', customer.gender)\n      fd.append('residentialAddress', customer.residentialAddress)\n      fd.append('ghanaPostGPS', customer.ghanaPostGPS)\n      fd.append('residence', customer.residence)\n      fd.append('idType', customer.idType)\n      fd.append('idNumber', customer.idNumber)\n      fd.append('tin', customer.tinNumber)\n      fd.append('maritalStatus', customer.maritalStatus)\n      fd.append('nameOfSpouse', customer.nameOfSpouse)\n      fd.append('phoneOfSpouse', customer.phoneOfSpouse)\n      fd.append('occupationOfSpouse', customer.occupationOfSpouse)\n      fd.append('religion', customer.religion)\n      fd.append('placeOfWorship', customer.placeOfWorship)\n      fd.append('leaderOfPlaceOfWorship', customer.nameOfChurchLeader)\n      fd.append('contactOfPlaceOfWorship', customer.phoneOfChurchLeader)\n      fd.append('officer', customer.officer)\n      fd.append('group', customer.group)\n      fd.append('createdBy', user._id)\n\n      /*for (let [key, value] of fd.entries()) {\n        console.log(key, value);\n      }*/\n\n      //fd.append(\"img\", image);\n      axios\n        .post('http://localhost:49155/api/customer', fd, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        })\n        .then((res) => {\n          Swal.fire(\n            'Success',\n            'Customer Details Submitted Successfully',\n            'success',\n          )\n          setCustomer({\n            fullName: '',\n            dob: '',\n            phone: '',\n            hometown: '',\n            placeOfBirth: '',\n            occupation: '',\n            nationality: '',\n            gender: '',\n            residentialAddress: '',\n            ghanaPostGPS: '',\n            residence: '',\n            idType: '',\n            idNumber: '',\n            tinNumber: '',\n            maritalStatus: '',\n            nameOfSpouse: '',\n            phoneOfSpouse: '',\n            occupationOfSpouse: '',\n            religion: '',\n            placeOfWorship: '',\n            nameOfChurchLeader: '',\n            phoneOfChurchLeader: '',\n            //selectedFile: \"\",\n            officer: '',\n            group: '',\n          })\n          setDisplay(null)\n        })\n        .catch((err) => {\n          Swal.fire(\n            'OOPS ! ' + err.message + '  [ Customer Details Not Saved]',\n            'error',\n          )\n        })\n    } catch (ex) {\n      return Swal.fire('OOPS', ex + '  [ Customer Details Not Saved]', 'error')\n    }\n\n    /* const validate = validateForm();\n    if (validate !== null) {\n      return Swal.fire(\"OOPS\", validate, \"error\");\n    }\n*/\n  }\n  /* axios.post(\"http://localhost:49155/api/customer\", customer, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },*/\n\n  return (\n    <CRow>\n      <CCol>\n        <CCard>\n          <div>\n            <CCol>\n              <h1 className=\"mb-5\">Customer Registration</h1>\n            </CCol>\n          </div>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Customer\n\n/*\n  <CInputGroup>\n                  <img src={display} className=\"m-3\" alt=\"preview image\" />\n\n                  <CInput\n                    type=\"file\"\n                    onChange={onImageChange}\n                    className=\"form-control-sm col-sm-4 mt-3\"\n                    id=\"group_image\"\n                    name=\"img\"\n                  />\n                </CInputGroup>\n\n                <CInputGroup className=\"mt-3\">\n                  <CLabel htmlFor=\"fullName\" className=\"form-label m-3\">\n                    Full Name *\n                  </CLabel>\n\n                  <CInput\n                    name=\"fullName\"\n                    type=\"text\"\n                    className=\"form-control col-sm-4\"\n                    id=\"fullName\"\n                    value={customer.fullName}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        fullName: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup className=\"mt-3\">\n                  <label htmlFor=\"hometown\" className=\"form-label custlabel\">\n                    Hometown\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control col-sm-4\"\n                    id=\"hometown\"\n                    value={customer.hometown}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        hometown: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"Dob\" className=\"form-label custlabel\">\n                    Date of Birth *\n                  </label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"Dob\"\n                    placeholder=\"dd-mm-yyyy\"\n                    min=\"1940-01-01\"\n                    value={customer.dob}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        dob: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"placeofbirth\"\n                    className=\"form-label custlabel\"\n                  >\n                    Place of Birth\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"placeofBirth\"\n                    value={customer.placeOfBirth}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        placeOfBirth: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"occupation\" className=\"form-label custlabel\">\n                    Occupation *\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"occupation\"\n                    value={customer.occupation}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        occupation: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"phone\" className=\"form-label custlabel\">\n                    Phone *\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"Phone\"\n                    value={customer.phone}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phone: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"nationality\" className=\"form-label custlabel\">\n                    Nationality\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"nationality\"\n                    value={customer.value}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nationality: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"gender\" className=\"form-label custlabel\">\n                    Gender *\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.gender}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        gender: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Select Gender--</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"resaddress\" className=\"form-label custlabel\">\n                    Residential Address *\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"resaddress\"\n                    value={customer.residentialAddress}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        residentialAddress: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"gps\" className=\"form-label custlabel\">\n                    Ghana Post GPS *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.ghanaPostGPS}\n                    className=\"form-control\"\n                    id=\"gps\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        ghanaPostGPS: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"suburb\" className=\"form-label custlabel\">\n                    Suburb / Land Mark / Directions\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.residence}\n                    className=\"form-control\"\n                    id=\"suburb\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        residence: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"idType\" className=\"form-label custlabel\">\n                    ID Type *\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.idType}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        idType: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Select ID--</option>\n                    <option value=\"National ID\">National ID</option>\n                    <option value=\"Voter ID\">Voter ID</option>\n                    <option value=\"Driver's License\">Driver's License</option>\n                    <option value=\"Passport\">Passport</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"idNumber\" className=\"form-label custlabel\">\n                    ID Number *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.idNumber}\n                    className=\"form-control\"\n                    id=\"idNumber\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        idNumber: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"tin\" className=\"form-label custlabel\">\n                    TIN *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.tinNumber}\n                    className=\"form-control\"\n                    id=\"tin\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        tinNumber: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"married\" className=\"form-label custlabel\">\n                    Marrital Status\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.maritalStatus}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        maritalStatus: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Marital Status--</option>\n                    <option value=\"Married\">Married</option>\n                    <option value=\"Single\">Single</option>\n                    <option value=\"Divorced\">Divorced</option>\n                    <option value=\"Widowed\">Widowed</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"nameofspouse\"\n                    className=\"form-label custlabel\"\n                  >\n                    Name of Spouse\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"nameofspouse\"\n                    value={customer.nameOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nameOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneofspouse\"\n                    className=\"form-label custlabel\"\n                  >\n                    Phone of Spouse\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"phoneofspouse\"\n                    value={customer.phoneOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phoneOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"occupationofspouse\"\n                    className=\"form-label custlabel\"\n                  >\n                    Occu. Spouse\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"occupationofspouse\"\n                    value={customer.occupationOfSpouse}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        occupationOfSpouse: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label htmlFor=\"religion\" className=\"form-label custlabel\">\n                    Religion\n                  </label>\n                  <select\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    value={customer.religion}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        religion: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option defaultValue=\"\">--Religion--</option>\n                    <option value=\"Christian\">Christian</option>\n                    <option value=\"Muslim\">Muslim</option>\n                    <option value=\"Traditionalist\">Traditionalist</option>\n                    <option value=\"Other\">Other</option>\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"placeofworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Place of Worship\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.placeholder}\n                    className=\"form-control\"\n                    id=\"placeofworship\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        placeOfWorship: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"worshipleader\"\n                    className=\"form-label custlabel\"\n                  >\n                    Leader of Place of Worship\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.nameOfChurchLeader}\n                    className=\"form-control\"\n                    id=\"worshipleader\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        nameOfChurchLeader: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Phone, Place of worship\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customer.phoneOfChurchLeader}\n                    className=\"form-control\"\n                    id=\"phoneworship\"\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        phoneOfChurchLeader: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Assigned Officer *\n                  </label>\n                  <select\n                    className=\"form-select mb-5\"\n                    aria-label=\"Default select example\"\n                    value={customer.officer}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        officer: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option value=\"\">Officer *</option>\n                    {allStaff.map((s) => (\n                      <option key={s._id} value={s._id} id={s._id}>\n                        {s.nameOfStaff}\n                      </option>\n                    ))}\n                  </select>\n                </CInputGroup>\n                <CInputGroup>\n                  <label\n                    htmlFor=\"phoneworship\"\n                    className=\"form-label custlabel\"\n                  >\n                    Group *\n                  </label>\n                  <select\n                    className=\"form-select mb-5\"\n                    aria-label=\"Default select example\"\n                    value={customer.group}\n                    onChange={(e) =>\n                      setCustomer({\n                        ...customer,\n                        group: e.currentTarget.value,\n                      })\n                    }\n                  >\n                    <option value=\"\">Group *</option>\n                    {groups.map((s) => (\n                      <option key={s._id} value={s._id} id={s._id}>\n                        {s.group}\n                      </option>\n                    ))}\n                  </select>\n                </CInputGroup>\n              </CFormGroup>\n\n              <div className=\"d-flex justify-content-center mt-3 mb-3\">\n                <button className=\"button col-md-5 ms-5\" type=\"submit\">\n                  Submit\n                </button>\n              </div>\n\n*/\n"]},"metadata":{},"sourceType":"module"}